{
  "spec": {
    "title": "WebGL EXT_float_blend Extension Specification",
    "url": "https://www.khronos.org/registry/webgl/extensions/EXT_float_blend/"
  },
  "idlparsed": {
    "jsNames": {
      "constructors": {},
      "functions": {
        "Window": [
          "EXT_float_blend"
        ],
        "Worker": [
          "EXT_float_blend"
        ]
      }
    },
    "idlNames": {
      "EXT_float_blend": {
        "fragment": "[Exposed=(Window,Worker), LegacyNoInterfaceObject]\ninterface EXT_float_blend {\n};",
        "type": "interface",
        "name": "EXT_float_blend",
        "inheritance": null,
        "members": [],
        "extAttrs": [
          {
            "type": "extended-attribute",
            "name": "Exposed",
            "rhs": {
              "type": "identifier-list",
              "value": [
                {
                  "value": "Window"
                },
                {
                  "value": "Worker"
                }
              ]
            },
            "arguments": []
          },
          {
            "type": "extended-attribute",
            "name": "LegacyNoInterfaceObject",
            "rhs": null,
            "arguments": []
          }
        ],
        "partial": false,
        "deprecated": false,
        "experimental": false,
        "desc": "The WebGL API's  extension allows blending and draw buffers with 32-bit floating-point components.\nWebGL extensions are available using the [WebGLRenderingContext.getExtension()] method. For more information, see also Using Extensions in the WebGL tutorial.\n\n  Note: This extension is available to both, WebGL1 and WebGL2 contexts. However, to use it, you need to enable the use of 32-bit floating-point draw buffers by  enabling the extension [WEBGL_color_buffer_float] (for WebGL1) or [EXT_color_buffer_float] (for WebGL2). Doing so automatically enables  as well.\n\nWith this extension enabled, calling [drawArrays()] or [drawElements()] with blending enabled and a draw buffer with 32-bit floating-point components will no longer result in an [INVALID_OPERATION] error.",
        "mdn": "/en-US/docs/Web/API/EXT_float_blend"
      }
    },
    "idlExtendedNames": {},
    "globals": {},
    "exposed": {
      "Window": [
        "EXT_float_blend"
      ],
      "Worker": [
        "EXT_float_blend"
      ]
    },
    "dependencies": {
      "EXT_float_blend": []
    },
    "externalDependencies": [],
    "hasObsoleteIdl": false
  },
  "path": "./../webIDL/merged/EXT_float_blend.json",
  "basename": "EXT_float_blend.json",
  "name": "EXT_float_blend",
  "libraryName": "e_x_t_float_blend"
}