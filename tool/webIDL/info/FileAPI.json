{
  "spec": {
    "title": "File API",
    "url": "https://w3c.github.io/FileAPI/"
  },
  "idlparsed": {
    "jsNames": {
      "constructors": {
        "Window": [
          "Blob",
          "File",
          "FileReader"
        ],
        "Worker": [
          "Blob",
          "File",
          "FileReader"
        ],
        "DedicatedWorker": [
          "FileReaderSync"
        ],
        "SharedWorker": [
          "FileReaderSync"
        ]
      },
      "functions": {
        "Window": [
          "FileList",
          "URL"
        ],
        "Worker": [
          "FileList"
        ],
        "DedicatedWorker": [
          "URL"
        ],
        "SharedWorker": [
          "URL"
        ]
      }
    },
    "idlNames": {
      "Blob": {
        "fragment": "[Exposed=(Window,Worker), Serializable]\ninterface Blob {\n  constructor(optional sequence<BlobPart> blobParts,\n              optional BlobPropertyBag options = {});\n\n  readonly attribute unsigned long long size;\n  readonly attribute DOMString type;\n\n  // slice Blob into byte-ranged chunks\n  Blob slice(optional [Clamp] long long start,\n            optional [Clamp] long long end,\n            optional DOMString contentType);\n\n  // read from the Blob.\n  [NewObject] ReadableStream stream();\n  [NewObject] Promise<USVString> text();\n  [NewObject] Promise<ArrayBuffer> arrayBuffer();\n};",
        "type": "interface",
        "name": "Blob",
        "inheritance": null,
        "members": [
          {
            "type": "constructor",
            "arguments": [
              {
                "type": "argument",
                "name": "blobParts",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "sequence",
                  "nullable": false,
                  "union": false,
                  "idlType": [
                    {
                      "type": "argument-type",
                      "extAttrs": [],
                      "generic": "",
                      "nullable": false,
                      "union": false,
                      "idlType": "BlobPart"
                    }
                  ]
                },
                "default": null,
                "optional": true,
                "variadic": false
              },
              {
                "type": "argument",
                "name": "options",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "BlobPropertyBag"
                },
                "default": {
                  "type": "dictionary"
                },
                "optional": true,
                "variadic": false
              }
            ],
            "extAttrs": []
          },
          {
            "type": "attribute",
            "name": "size",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "unsigned long long"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true
          },
          {
            "type": "attribute",
            "name": "type",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "DOMString"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true
          },
          {
            "type": "operation",
            "name": "slice",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "Blob"
            },
            "arguments": [
              {
                "type": "argument",
                "name": "start",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [
                    {
                      "type": "extended-attribute",
                      "name": "Clamp",
                      "rhs": null,
                      "arguments": []
                    }
                  ],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "long long"
                },
                "default": null,
                "optional": true,
                "variadic": false
              },
              {
                "type": "argument",
                "name": "end",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [
                    {
                      "type": "extended-attribute",
                      "name": "Clamp",
                      "rhs": null,
                      "arguments": []
                    }
                  ],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "long long"
                },
                "default": null,
                "optional": true,
                "variadic": false
              },
              {
                "type": "argument",
                "name": "contentType",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "DOMString"
                },
                "default": null,
                "optional": true,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": ""
          },
          {
            "type": "operation",
            "name": "stream",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "ReadableStream"
            },
            "arguments": [],
            "extAttrs": [
              {
                "type": "extended-attribute",
                "name": "NewObject",
                "rhs": null,
                "arguments": []
              }
            ],
            "special": ""
          },
          {
            "type": "operation",
            "name": "text",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "Promise",
              "nullable": false,
              "union": false,
              "idlType": [
                {
                  "type": "return-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "USVString"
                }
              ]
            },
            "arguments": [],
            "extAttrs": [
              {
                "type": "extended-attribute",
                "name": "NewObject",
                "rhs": null,
                "arguments": []
              }
            ],
            "special": ""
          },
          {
            "type": "operation",
            "name": "arrayBuffer",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "Promise",
              "nullable": false,
              "union": false,
              "idlType": [
                {
                  "type": "return-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "ArrayBuffer"
                }
              ]
            },
            "arguments": [],
            "extAttrs": [
              {
                "type": "extended-attribute",
                "name": "NewObject",
                "rhs": null,
                "arguments": []
              }
            ],
            "special": ""
          }
        ],
        "extAttrs": [
          {
            "type": "extended-attribute",
            "name": "Exposed",
            "rhs": {
              "type": "identifier-list",
              "value": [
                {
                  "value": "Window"
                },
                {
                  "value": "Worker"
                }
              ]
            },
            "arguments": []
          },
          {
            "type": "extended-attribute",
            "name": "Serializable",
            "rhs": null,
            "arguments": []
          }
        ],
        "partial": false,
        "deprecated": false,
        "experimental": false,
        "desc": "The  object represents a blob, which is a file-like object of immutable, raw data; they can be read as text or binary data, or converted into a [ReadableStream] so its methods can be used for processing the data.\nBlobs can represent data that isn't necessarily in a JavaScript-native format. The [File] interface is based on , inheriting blob functionality and expanding it to support files on the user's system.",
        "mdn": "/en-US/docs/Web/API/Blob"
      },
      "EndingType": {
        "fragment": "enum EndingType { \"transparent\", \"native\" };",
        "type": "enum",
        "name": "EndingType",
        "values": [
          {
            "type": "enum-value",
            "value": "transparent"
          },
          {
            "type": "enum-value",
            "value": "native"
          }
        ],
        "extAttrs": []
      },
      "BlobPropertyBag": {
        "fragment": "dictionary BlobPropertyBag {\n  DOMString type = \"\";\n  EndingType endings = \"transparent\";\n};",
        "type": "dictionary",
        "name": "BlobPropertyBag",
        "inheritance": null,
        "members": [
          {
            "type": "field",
            "name": "type",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "DOMString"
            },
            "default": {
              "type": "string",
              "value": ""
            },
            "required": false
          },
          {
            "type": "field",
            "name": "endings",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "EndingType"
            },
            "default": {
              "type": "string",
              "value": "transparent"
            },
            "required": false
          }
        ],
        "extAttrs": [],
        "partial": false
      },
      "BlobPart": {
        "fragment": "typedef (BufferSource or Blob or USVString) BlobPart;",
        "type": "typedef",
        "name": "BlobPart",
        "idlType": {
          "type": "typedef-type",
          "extAttrs": [],
          "generic": "",
          "nullable": false,
          "union": true,
          "idlType": [
            {
              "type": null,
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "BufferSource"
            },
            {
              "type": null,
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "Blob"
            },
            {
              "type": null,
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "USVString"
            }
          ]
        },
        "extAttrs": []
      },
      "File": {
        "fragment": "[Exposed=(Window,Worker), Serializable]\ninterface File : Blob {\n  constructor(sequence<BlobPart> fileBits,\n              USVString fileName,\n              optional FilePropertyBag options = {});\n  readonly attribute DOMString name;\n  readonly attribute long long lastModified;\n};",
        "type": "interface",
        "name": "File",
        "inheritance": "Blob",
        "members": [
          {
            "type": "constructor",
            "arguments": [
              {
                "type": "argument",
                "name": "fileBits",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "sequence",
                  "nullable": false,
                  "union": false,
                  "idlType": [
                    {
                      "type": "argument-type",
                      "extAttrs": [],
                      "generic": "",
                      "nullable": false,
                      "union": false,
                      "idlType": "BlobPart"
                    }
                  ]
                },
                "default": null,
                "optional": false,
                "variadic": false
              },
              {
                "type": "argument",
                "name": "fileName",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "USVString"
                },
                "default": null,
                "optional": false,
                "variadic": false
              },
              {
                "type": "argument",
                "name": "options",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "FilePropertyBag"
                },
                "default": {
                  "type": "dictionary"
                },
                "optional": true,
                "variadic": false
              }
            ],
            "extAttrs": []
          },
          {
            "type": "attribute",
            "name": "name",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "DOMString"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true
          },
          {
            "type": "attribute",
            "name": "lastModified",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "long long"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true
          }
        ],
        "extAttrs": [
          {
            "type": "extended-attribute",
            "name": "Exposed",
            "rhs": {
              "type": "identifier-list",
              "value": [
                {
                  "value": "Window"
                },
                {
                  "value": "Worker"
                }
              ]
            },
            "arguments": []
          },
          {
            "type": "extended-attribute",
            "name": "Serializable",
            "rhs": null,
            "arguments": []
          }
        ],
        "partial": false,
        "deprecated": false,
        "experimental": false,
        "desc": "The  interface provides information about files and allows JavaScript in a web page to access their content.\n objects are generally retrieved from a [FileList] object returned as a result of a user selecting files using the [<input>] element, from a drag and drop operation's [DataTransfer] object, or from the [mozGetAsFile()] API on an [HTMLCanvasElement].\nA  object is a specific kind of a [Blob], and can be used in any context that a Blob can. In particular, [FileReader], [URL.createObjectURL()], [createImageBitmap()], and [XMLHttpRequest.send()] accept both [Blob]s and s.\nSee Using files from web applications for more information and examples.\n  \n    \n    \n      Blob\n    \n  \n  \n    \n    \n      File\n    \n  ",
        "mdn": "/en-US/docs/Web/API/File"
      },
      "FilePropertyBag": {
        "fragment": "dictionary FilePropertyBag : BlobPropertyBag {\n  long long lastModified;\n};",
        "type": "dictionary",
        "name": "FilePropertyBag",
        "inheritance": "BlobPropertyBag",
        "members": [
          {
            "type": "field",
            "name": "lastModified",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "long long"
            },
            "default": null,
            "required": false
          }
        ],
        "extAttrs": [],
        "partial": false
      },
      "FileList": {
        "fragment": "[Exposed=(Window,Worker), Serializable]\ninterface FileList {\n  getter File? item(unsigned long index);\n  readonly attribute unsigned long length;\n};",
        "type": "interface",
        "name": "FileList",
        "inheritance": null,
        "members": [
          {
            "type": "operation",
            "name": "item",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": true,
              "union": false,
              "idlType": "File"
            },
            "arguments": [
              {
                "type": "argument",
                "name": "index",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "unsigned long"
                },
                "default": null,
                "optional": false,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": "getter"
          },
          {
            "type": "attribute",
            "name": "length",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "unsigned long"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true
          }
        ],
        "extAttrs": [
          {
            "type": "extended-attribute",
            "name": "Exposed",
            "rhs": {
              "type": "identifier-list",
              "value": [
                {
                  "value": "Window"
                },
                {
                  "value": "Worker"
                }
              ]
            },
            "arguments": []
          },
          {
            "type": "extended-attribute",
            "name": "Serializable",
            "rhs": null,
            "arguments": []
          }
        ],
        "partial": false,
        "deprecated": false,
        "experimental": false,
        "desc": "An object of this type is returned by the [files] property of the HTML [<input>] element; this lets you access the list of files selected with the [<input type=\"file\">] element. It's also used for a list of files dropped into web content when using the drag and drop API; see the [DataTransfer] object for details on this usage.\n\n  Note: Prior to Gecko 1.9.2, the input element only supported a single file being selected at a time, meaning that the FileList would contain only one file. Starting with Gecko 1.9.2, if the input element's multiple attribute is true, the FileList may contain multiple files.\n",
        "mdn": "/en-US/docs/Web/API/FileList"
      },
      "FileReader": {
        "fragment": "[Exposed=(Window,Worker)]\ninterface FileReader: EventTarget {\n  constructor();\n  // async read methods\n  undefined readAsArrayBuffer(Blob blob);\n  undefined readAsBinaryString(Blob blob);\n  undefined readAsText(Blob blob, optional DOMString encoding);\n  undefined readAsDataURL(Blob blob);\n\n  undefined abort();\n\n  // states\n  const unsigned short EMPTY = 0;\n  const unsigned short LOADING = 1;\n  const unsigned short DONE = 2;\n\n  readonly attribute unsigned short readyState;\n\n  // File or Blob data\n  readonly attribute (DOMString or ArrayBuffer)? result;\n\n  readonly attribute DOMException? error;\n\n  // event handler content attributes\n  attribute EventHandler onloadstart;\n  attribute EventHandler onprogress;\n  attribute EventHandler onload;\n  attribute EventHandler onabort;\n  attribute EventHandler onerror;\n  attribute EventHandler onloadend;\n};",
        "type": "interface",
        "name": "FileReader",
        "inheritance": "EventTarget",
        "members": [
          {
            "type": "constructor",
            "arguments": [],
            "extAttrs": []
          },
          {
            "type": "operation",
            "name": "readAsArrayBuffer",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "undefined"
            },
            "arguments": [
              {
                "type": "argument",
                "name": "blob",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "Blob"
                },
                "default": null,
                "optional": false,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": ""
          },
          {
            "type": "operation",
            "name": "readAsBinaryString",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "undefined"
            },
            "arguments": [
              {
                "type": "argument",
                "name": "blob",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "Blob"
                },
                "default": null,
                "optional": false,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": ""
          },
          {
            "type": "operation",
            "name": "readAsText",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "undefined"
            },
            "arguments": [
              {
                "type": "argument",
                "name": "blob",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "Blob"
                },
                "default": null,
                "optional": false,
                "variadic": false
              },
              {
                "type": "argument",
                "name": "encoding",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "DOMString"
                },
                "default": null,
                "optional": true,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": ""
          },
          {
            "type": "operation",
            "name": "readAsDataURL",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "undefined"
            },
            "arguments": [
              {
                "type": "argument",
                "name": "blob",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "Blob"
                },
                "default": null,
                "optional": false,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": ""
          },
          {
            "type": "operation",
            "name": "abort",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "undefined"
            },
            "arguments": [],
            "extAttrs": [],
            "special": ""
          },
          {
            "type": "const",
            "name": "EMPTY",
            "idlType": {
              "type": "const-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "unsigned short"
            },
            "extAttrs": [],
            "value": {
              "type": "number",
              "value": "0"
            }
          },
          {
            "type": "const",
            "name": "LOADING",
            "idlType": {
              "type": "const-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "unsigned short"
            },
            "extAttrs": [],
            "value": {
              "type": "number",
              "value": "1"
            }
          },
          {
            "type": "const",
            "name": "DONE",
            "idlType": {
              "type": "const-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "unsigned short"
            },
            "extAttrs": [],
            "value": {
              "type": "number",
              "value": "2"
            }
          },
          {
            "type": "attribute",
            "name": "readyState",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "unsigned short"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true
          },
          {
            "type": "attribute",
            "name": "result",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": true,
              "union": true,
              "idlType": [
                {
                  "type": null,
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "DOMString"
                },
                {
                  "type": null,
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "ArrayBuffer"
                }
              ]
            },
            "extAttrs": [],
            "special": "",
            "readonly": true
          },
          {
            "type": "attribute",
            "name": "error",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": true,
              "union": false,
              "idlType": "DOMException"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true
          },
          {
            "type": "attribute",
            "name": "onloadstart",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "EventHandler"
            },
            "extAttrs": [],
            "special": "",
            "readonly": false
          },
          {
            "type": "attribute",
            "name": "onprogress",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "EventHandler"
            },
            "extAttrs": [],
            "special": "",
            "readonly": false
          },
          {
            "type": "attribute",
            "name": "onload",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "EventHandler"
            },
            "extAttrs": [],
            "special": "",
            "readonly": false
          },
          {
            "type": "attribute",
            "name": "onabort",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "EventHandler"
            },
            "extAttrs": [],
            "special": "",
            "readonly": false
          },
          {
            "type": "attribute",
            "name": "onerror",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "EventHandler"
            },
            "extAttrs": [],
            "special": "",
            "readonly": false
          },
          {
            "type": "attribute",
            "name": "onloadend",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "EventHandler"
            },
            "extAttrs": [],
            "special": "",
            "readonly": false
          }
        ],
        "extAttrs": [
          {
            "type": "extended-attribute",
            "name": "Exposed",
            "rhs": {
              "type": "identifier-list",
              "value": [
                {
                  "value": "Window"
                },
                {
                  "value": "Worker"
                }
              ]
            },
            "arguments": []
          }
        ],
        "partial": false,
        "deprecated": false,
        "experimental": false,
        "desc": "The  object lets web applications asynchronously read the contents of files (or raw data buffers) stored on the user's computer, using [File] or [Blob] objects to specify the file or data to read.\nFile objects may be obtained from a [FileList] object returned as a result of a user selecting files using the [<input>] element, from a drag and drop operation's [DataTransfer] object, or from the [mozGetAsFile()] API on an [HTMLCanvasElement].\n can only access the contents of files that the user has explicitly selected, either using an HTML [<input type=\"file\">] element or by drag and drop. It cannot be used to read a file by pathname from the user's file system. To read files on the client's file system by pathname, use the File System Access API. To read server-side files, use standard Ajax solutions, with CORS permission if reading cross-domain.\n  Note: This feature is available in Web Workers\n\n\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      FileReader\n    \n  ",
        "mdn": "/en-US/docs/Web/API/FileReader"
      },
      "FileReaderSync": {
        "fragment": "[Exposed=(DedicatedWorker,SharedWorker)]\ninterface FileReaderSync {\n  constructor();\n  // Synchronously return strings\n\n  ArrayBuffer readAsArrayBuffer(Blob blob);\n  DOMString readAsBinaryString(Blob blob);\n  DOMString readAsText(Blob blob, optional DOMString encoding);\n  DOMString readAsDataURL(Blob blob);\n};",
        "type": "interface",
        "name": "FileReaderSync",
        "inheritance": null,
        "members": [
          {
            "type": "constructor",
            "arguments": [],
            "extAttrs": []
          },
          {
            "type": "operation",
            "name": "readAsArrayBuffer",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "ArrayBuffer"
            },
            "arguments": [
              {
                "type": "argument",
                "name": "blob",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "Blob"
                },
                "default": null,
                "optional": false,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": ""
          },
          {
            "type": "operation",
            "name": "readAsBinaryString",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "DOMString"
            },
            "arguments": [
              {
                "type": "argument",
                "name": "blob",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "Blob"
                },
                "default": null,
                "optional": false,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": ""
          },
          {
            "type": "operation",
            "name": "readAsText",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "DOMString"
            },
            "arguments": [
              {
                "type": "argument",
                "name": "blob",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "Blob"
                },
                "default": null,
                "optional": false,
                "variadic": false
              },
              {
                "type": "argument",
                "name": "encoding",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "DOMString"
                },
                "default": null,
                "optional": true,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": ""
          },
          {
            "type": "operation",
            "name": "readAsDataURL",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "DOMString"
            },
            "arguments": [
              {
                "type": "argument",
                "name": "blob",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "Blob"
                },
                "default": null,
                "optional": false,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": ""
          }
        ],
        "extAttrs": [
          {
            "type": "extended-attribute",
            "name": "Exposed",
            "rhs": {
              "type": "identifier-list",
              "value": [
                {
                  "value": "DedicatedWorker"
                },
                {
                  "value": "SharedWorker"
                }
              ]
            },
            "arguments": []
          }
        ],
        "partial": false,
        "deprecated": false,
        "experimental": false,
        "desc": "The  interface allows to read [File] or [Blob] objects synchronously.\n  Note: This feature is available in Web Workers\n\n\n  Warning: This interface is only available in workers as it enables synchronous I/O that could potentially block.\n",
        "mdn": "/en-US/docs/Web/API/FileReaderSync"
      }
    },
    "idlExtendedNames": {
      "URL": [
        {
          "fragment": "[Exposed=(Window,DedicatedWorker,SharedWorker)]\npartial interface URL {\n  static DOMString createObjectURL((Blob or MediaSource) obj);\n  static undefined revokeObjectURL(DOMString url);\n};",
          "type": "interface",
          "name": "URL",
          "inheritance": null,
          "members": [
            {
              "type": "operation",
              "name": "createObjectURL",
              "idlType": {
                "type": "return-type",
                "extAttrs": [],
                "generic": "",
                "nullable": false,
                "union": false,
                "idlType": "DOMString"
              },
              "arguments": [
                {
                  "type": "argument",
                  "name": "obj",
                  "extAttrs": [],
                  "idlType": {
                    "type": "argument-type",
                    "extAttrs": [],
                    "generic": "",
                    "nullable": false,
                    "union": true,
                    "idlType": [
                      {
                        "type": null,
                        "extAttrs": [],
                        "generic": "",
                        "nullable": false,
                        "union": false,
                        "idlType": "Blob"
                      },
                      {
                        "type": null,
                        "extAttrs": [],
                        "generic": "",
                        "nullable": false,
                        "union": false,
                        "idlType": "MediaSource"
                      }
                    ]
                  },
                  "default": null,
                  "optional": false,
                  "variadic": false
                }
              ],
              "extAttrs": [],
              "special": "static"
            },
            {
              "type": "operation",
              "name": "revokeObjectURL",
              "idlType": {
                "type": "return-type",
                "extAttrs": [],
                "generic": "",
                "nullable": false,
                "union": false,
                "idlType": "undefined"
              },
              "arguments": [
                {
                  "type": "argument",
                  "name": "url",
                  "extAttrs": [],
                  "idlType": {
                    "type": "argument-type",
                    "extAttrs": [],
                    "generic": "",
                    "nullable": false,
                    "union": false,
                    "idlType": "DOMString"
                  },
                  "default": null,
                  "optional": false,
                  "variadic": false
                }
              ],
              "extAttrs": [],
              "special": "static"
            }
          ],
          "extAttrs": [
            {
              "type": "extended-attribute",
              "name": "Exposed",
              "rhs": {
                "type": "identifier-list",
                "value": [
                  {
                    "value": "Window"
                  },
                  {
                    "value": "DedicatedWorker"
                  },
                  {
                    "value": "SharedWorker"
                  }
                ]
              },
              "arguments": []
            }
          ],
          "partial": true
        }
      ]
    },
    "globals": {},
    "exposed": {
      "Window": [
        "Blob",
        "File",
        "FileList",
        "FileReader",
        "URL"
      ],
      "Worker": [
        "Blob",
        "File",
        "FileList",
        "FileReader"
      ],
      "DedicatedWorker": [
        "FileReaderSync",
        "URL"
      ],
      "SharedWorker": [
        "FileReaderSync",
        "URL"
      ]
    },
    "dependencies": {
      "Blob": [
        "BlobPart",
        "BlobPropertyBag",
        "Blob",
        "ReadableStream",
        "ArrayBuffer"
      ],
      "BlobPropertyBag": [
        "EndingType"
      ],
      "File": [
        "Blob",
        "BlobPart",
        "FilePropertyBag"
      ],
      "FilePropertyBag": [
        "BlobPropertyBag"
      ],
      "FileList": [
        "File"
      ],
      "FileReader": [
        "EventTarget",
        "Blob",
        "ArrayBuffer",
        "DOMException",
        "EventHandler"
      ],
      "FileReaderSync": [
        "ArrayBuffer",
        "Blob"
      ],
      "URL": [
        "Blob",
        "MediaSource"
      ]
    },
    "externalDependencies": [
      "ReadableStream",
      "ArrayBuffer",
      "BufferSource",
      "EventTarget",
      "DOMException",
      "EventHandler",
      "URL",
      "MediaSource"
    ],
    "hasObsoleteIdl": false
  },
  "path": "./../webIDL/merged/FileAPI.json",
  "basename": "FileAPI.json",
  "name": "FileAPI",
  "libraryName": "file_a_p_i"
}