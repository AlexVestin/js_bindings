{
  "spec": {
    "title": "CSS Object Model (CSSOM)",
    "url": "https://drafts.csswg.org/cssom/"
  },
  "idlparsed": {
    "jsNames": {
      "constructors": {
        "Window": [
          "CSSStyleSheet"
        ]
      },
      "functions": {
        "Window": [
          "MediaList",
          "StyleSheet",
          "StyleSheetList",
          "CSSRuleList",
          "CSSRule",
          "CSSStyleRule",
          "CSSImportRule",
          "CSSGroupingRule",
          "CSSPageRule",
          "CSSMarginRule",
          "CSSNamespaceRule",
          "CSSStyleDeclaration"
        ]
      }
    },
    "idlNames": {
      "MediaList": {
        "fragment": "[Exposed=Window]\ninterface MediaList {\n  stringifier attribute [LegacyNullToEmptyString] CSSOMString mediaText;\n  readonly attribute unsigned long length;\n  getter CSSOMString? item(unsigned long index);\n  undefined appendMedium(CSSOMString medium);\n  undefined deleteMedium(CSSOMString medium);\n};",
        "type": "interface",
        "name": "MediaList",
        "inheritance": null,
        "members": [
          {
            "type": "attribute",
            "name": "mediaText",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [
                {
                  "type": "extended-attribute",
                  "name": "LegacyNullToEmptyString",
                  "rhs": null,
                  "arguments": []
                }
              ],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "CSSOMString"
            },
            "extAttrs": [],
            "special": "stringifier",
            "readonly": false
          },
          {
            "type": "attribute",
            "name": "length",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "unsigned long"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true
          },
          {
            "type": "operation",
            "name": "item",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": true,
              "union": false,
              "idlType": "CSSOMString"
            },
            "arguments": [
              {
                "type": "argument",
                "name": "index",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "unsigned long"
                },
                "default": null,
                "optional": false,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": "getter"
          },
          {
            "type": "operation",
            "name": "appendMedium",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "undefined"
            },
            "arguments": [
              {
                "type": "argument",
                "name": "medium",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "CSSOMString"
                },
                "default": null,
                "optional": false,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": ""
          },
          {
            "type": "operation",
            "name": "deleteMedium",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "undefined"
            },
            "arguments": [
              {
                "type": "argument",
                "name": "medium",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "CSSOMString"
                },
                "default": null,
                "optional": false,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": ""
          }
        ],
        "extAttrs": [
          {
            "type": "extended-attribute",
            "name": "Exposed",
            "rhs": {
              "type": "identifier",
              "value": "Window"
            },
            "arguments": []
          }
        ],
        "partial": false,
        "deprecated": false,
        "experimental": false,
        "desc": "The  interface represents the media queries of a stylesheet, e.g. those set using a [<link>] element's [media] attribute.\n\n  Note:  is a live list; updating the list using properties or methods listed below will immediately update the behavior of the document.\n",
        "mdn": "/en-US/docs/Web/API/MediaList"
      },
      "StyleSheet": {
        "fragment": "[Exposed=Window]\ninterface StyleSheet {\n  readonly attribute CSSOMString type;\n  readonly attribute USVString? href;\n  readonly attribute (Element or ProcessingInstruction)? ownerNode;\n  readonly attribute CSSStyleSheet? parentStyleSheet;\n  readonly attribute DOMString? title;\n  [SameObject, PutForwards=mediaText] readonly attribute MediaList media;\n  attribute boolean disabled;\n};",
        "type": "interface",
        "name": "StyleSheet",
        "inheritance": null,
        "members": [
          {
            "type": "attribute",
            "name": "type",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "CSSOMString"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true
          },
          {
            "type": "attribute",
            "name": "href",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": true,
              "union": false,
              "idlType": "USVString"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true
          },
          {
            "type": "attribute",
            "name": "ownerNode",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": true,
              "union": true,
              "idlType": [
                {
                  "type": null,
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "Element"
                },
                {
                  "type": null,
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "ProcessingInstruction"
                }
              ]
            },
            "extAttrs": [],
            "special": "",
            "readonly": true
          },
          {
            "type": "attribute",
            "name": "parentStyleSheet",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": true,
              "union": false,
              "idlType": "CSSStyleSheet"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true
          },
          {
            "type": "attribute",
            "name": "title",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": true,
              "union": false,
              "idlType": "DOMString"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true
          },
          {
            "type": "attribute",
            "name": "media",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "MediaList"
            },
            "extAttrs": [
              {
                "type": "extended-attribute",
                "name": "SameObject",
                "rhs": null,
                "arguments": []
              },
              {
                "type": "extended-attribute",
                "name": "PutForwards",
                "rhs": {
                  "type": "identifier",
                  "value": "mediaText"
                },
                "arguments": []
              }
            ],
            "special": "",
            "readonly": true
          },
          {
            "type": "attribute",
            "name": "disabled",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "boolean"
            },
            "extAttrs": [],
            "special": "",
            "readonly": false
          }
        ],
        "extAttrs": [
          {
            "type": "extended-attribute",
            "name": "Exposed",
            "rhs": {
              "type": "identifier",
              "value": "Window"
            },
            "arguments": []
          }
        ],
        "partial": false,
        "deprecated": false,
        "experimental": false,
        "desc": "An object implementing the  interface represents a single style sheet. CSS style sheets will further implement the more specialized [CSSStyleSheet] interface.",
        "mdn": "/en-US/docs/Web/API/StyleSheet"
      },
      "CSSStyleSheet": {
        "fragment": "[Exposed=Window]\ninterface CSSStyleSheet : StyleSheet {\n  constructor(optional CSSStyleSheetInit options = {});\n\n  readonly attribute CSSRule? ownerRule;\n  [SameObject] readonly attribute CSSRuleList cssRules;\n  unsigned long insertRule(CSSOMString rule, optional unsigned long index = 0);\n  undefined deleteRule(unsigned long index);\n\n  Promise<CSSStyleSheet> replace(USVString text);\n  undefined replaceSync(USVString text);\n};",
        "type": "interface",
        "name": "CSSStyleSheet",
        "inheritance": "StyleSheet",
        "members": [
          {
            "type": "constructor",
            "arguments": [
              {
                "type": "argument",
                "name": "options",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "CSSStyleSheetInit"
                },
                "default": {
                  "type": "dictionary"
                },
                "optional": true,
                "variadic": false
              }
            ],
            "extAttrs": []
          },
          {
            "type": "attribute",
            "name": "ownerRule",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": true,
              "union": false,
              "idlType": "CSSRule"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true
          },
          {
            "type": "attribute",
            "name": "cssRules",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "CSSRuleList"
            },
            "extAttrs": [
              {
                "type": "extended-attribute",
                "name": "SameObject",
                "rhs": null,
                "arguments": []
              }
            ],
            "special": "",
            "readonly": true
          },
          {
            "type": "operation",
            "name": "insertRule",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "unsigned long"
            },
            "arguments": [
              {
                "type": "argument",
                "name": "rule",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "CSSOMString"
                },
                "default": null,
                "optional": false,
                "variadic": false
              },
              {
                "type": "argument",
                "name": "index",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "unsigned long"
                },
                "default": {
                  "type": "number",
                  "value": "0"
                },
                "optional": true,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": ""
          },
          {
            "type": "operation",
            "name": "deleteRule",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "undefined"
            },
            "arguments": [
              {
                "type": "argument",
                "name": "index",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "unsigned long"
                },
                "default": null,
                "optional": false,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": ""
          },
          {
            "type": "operation",
            "name": "replace",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "Promise",
              "nullable": false,
              "union": false,
              "idlType": [
                {
                  "type": "return-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "CSSStyleSheet"
                }
              ]
            },
            "arguments": [
              {
                "type": "argument",
                "name": "text",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "USVString"
                },
                "default": null,
                "optional": false,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": ""
          },
          {
            "type": "operation",
            "name": "replaceSync",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "undefined"
            },
            "arguments": [
              {
                "type": "argument",
                "name": "text",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "USVString"
                },
                "default": null,
                "optional": false,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": ""
          }
        ],
        "extAttrs": [
          {
            "type": "extended-attribute",
            "name": "Exposed",
            "rhs": {
              "type": "identifier",
              "value": "Window"
            },
            "arguments": []
          }
        ],
        "partial": false,
        "deprecated": false,
        "experimental": false,
        "desc": "The  interface represents a single CSS stylesheet, and lets you inspect and modify the list of rules contained in the stylesheet. It inherits properties and methods from its parent, [StyleSheet].\n  \n    \n    \n      StyleSheet\n    \n  \n  \n    \n    \n      CSSStyleSheet\n    \n  \nA stylesheet consists of a collection of [CSSRule] objects representing each of the rules in the stylesheet. The rules are contained in a [CSSRuleList], which can be obtained from the stylesheet's [cssRules] property.\nFor example, one rule might be a [CSSStyleRule] object containing a style such as:\n[h1, h2 {\n  font-size: 16pt;\n}\n]\nAnother rule might be an at-rule such as [@import] or [@media], and so forth.\nSee the Obtaining a StyleSheet section for the various ways a  object can be obtained. A  object can also be directly constructed. The constructor, and the [CSSStyleSheet.replace()], and [CSSStyleSheet.replaceSync()] methods are newer additions to the specification, enabling Constructable Stylesheets.",
        "mdn": "/en-US/docs/Web/API/CSSStyleSheet"
      },
      "CSSStyleSheetInit": {
        "fragment": "dictionary CSSStyleSheetInit {\n  DOMString baseURL = null;\n  (MediaList or DOMString) media = \"\";\n  boolean disabled = false;\n};",
        "type": "dictionary",
        "name": "CSSStyleSheetInit",
        "inheritance": null,
        "members": [
          {
            "type": "field",
            "name": "baseURL",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "DOMString"
            },
            "default": {
              "type": "null"
            },
            "required": false
          },
          {
            "type": "field",
            "name": "media",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": true,
              "idlType": [
                {
                  "type": null,
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "MediaList"
                },
                {
                  "type": null,
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "DOMString"
                }
              ]
            },
            "default": {
              "type": "string",
              "value": ""
            },
            "required": false
          },
          {
            "type": "field",
            "name": "disabled",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "boolean"
            },
            "default": {
              "type": "boolean",
              "value": false
            },
            "required": false
          }
        ],
        "extAttrs": [],
        "partial": false
      },
      "StyleSheetList": {
        "fragment": "[Exposed=Window]\ninterface StyleSheetList {\n  getter CSSStyleSheet? item(unsigned long index);\n  readonly attribute unsigned long length;\n};",
        "type": "interface",
        "name": "StyleSheetList",
        "inheritance": null,
        "members": [
          {
            "type": "operation",
            "name": "item",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": true,
              "union": false,
              "idlType": "CSSStyleSheet"
            },
            "arguments": [
              {
                "type": "argument",
                "name": "index",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "unsigned long"
                },
                "default": null,
                "optional": false,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": "getter"
          },
          {
            "type": "attribute",
            "name": "length",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "unsigned long"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true
          }
        ],
        "extAttrs": [
          {
            "type": "extended-attribute",
            "name": "Exposed",
            "rhs": {
              "type": "identifier",
              "value": "Window"
            },
            "arguments": []
          }
        ],
        "partial": false,
        "deprecated": false,
        "experimental": false,
        "desc": "The  interface represents a list of [CSSStyleSheet] objects. An instance of this object can be returned by [Document.styleSheets].\nIt is an array-like object but can't be iterated over using [Array] methods. However it can be iterated over in a standard [for] loop over its indices, or converted to an [Array].",
        "mdn": "/en-US/docs/Web/API/StyleSheetList"
      },
      "LinkStyle": {
        "fragment": "interface mixin LinkStyle {\n  readonly attribute CSSStyleSheet? sheet;\n};",
        "type": "interface mixin",
        "name": "LinkStyle",
        "inheritance": null,
        "members": [
          {
            "type": "attribute",
            "name": "sheet",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": true,
              "union": false,
              "idlType": "CSSStyleSheet"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true
          }
        ],
        "extAttrs": [],
        "partial": false
      },
      "CSSRuleList": {
        "fragment": "[Exposed=Window]\ninterface CSSRuleList {\n  getter CSSRule? item(unsigned long index);\n  readonly attribute unsigned long length;\n};",
        "type": "interface",
        "name": "CSSRuleList",
        "inheritance": null,
        "members": [
          {
            "type": "operation",
            "name": "item",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": true,
              "union": false,
              "idlType": "CSSRule"
            },
            "arguments": [
              {
                "type": "argument",
                "name": "index",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "unsigned long"
                },
                "default": null,
                "optional": false,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": "getter"
          },
          {
            "type": "attribute",
            "name": "length",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "unsigned long"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true
          }
        ],
        "extAttrs": [
          {
            "type": "extended-attribute",
            "name": "Exposed",
            "rhs": {
              "type": "identifier",
              "value": "Window"
            },
            "arguments": []
          }
        ],
        "partial": false,
        "deprecated": false,
        "experimental": false,
        "desc": "A  represents an ordered collection of read-only [CSSRule] objects.\nWhile the  object is read-only, and cannot be directly modified, it is considered a [live] object, as the content can change over time.\nTo edit the underlying rules returned by [CSSRule] objects, use [CSSStyleSheet.insertRule()] and [CSSStyleSheet.deleteRule()], which are methods of [CSSStyleSheet].\nThe interface has no constructor. An instance of  is returned by [CSSStyleSheet.cssRules] and [CSSKeyframesRule.cssRules].",
        "mdn": "/en-US/docs/Web/API/CSSRuleList"
      },
      "CSSRule": {
        "fragment": "[Exposed=Window]\ninterface CSSRule {\n  attribute CSSOMString cssText;\n  readonly attribute CSSRule? parentRule;\n  readonly attribute CSSStyleSheet? parentStyleSheet;\n\n  // the following attribute and constants are historical\n  readonly attribute unsigned short type;\n  const unsigned short STYLE_RULE = 1;\n  const unsigned short CHARSET_RULE = 2;\n  const unsigned short IMPORT_RULE = 3;\n  const unsigned short MEDIA_RULE = 4;\n  const unsigned short FONT_FACE_RULE = 5;\n  const unsigned short PAGE_RULE = 6;\n  const unsigned short MARGIN_RULE = 9;\n  const unsigned short NAMESPACE_RULE = 10;\n};",
        "type": "interface",
        "name": "CSSRule",
        "inheritance": null,
        "members": [
          {
            "type": "attribute",
            "name": "cssText",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "CSSOMString"
            },
            "extAttrs": [],
            "special": "",
            "readonly": false
          },
          {
            "type": "attribute",
            "name": "parentRule",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": true,
              "union": false,
              "idlType": "CSSRule"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true
          },
          {
            "type": "attribute",
            "name": "parentStyleSheet",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": true,
              "union": false,
              "idlType": "CSSStyleSheet"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true
          },
          {
            "type": "attribute",
            "name": "type",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "unsigned short"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true
          },
          {
            "type": "const",
            "name": "STYLE_RULE",
            "idlType": {
              "type": "const-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "unsigned short"
            },
            "extAttrs": [],
            "value": {
              "type": "number",
              "value": "1"
            }
          },
          {
            "type": "const",
            "name": "CHARSET_RULE",
            "idlType": {
              "type": "const-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "unsigned short"
            },
            "extAttrs": [],
            "value": {
              "type": "number",
              "value": "2"
            }
          },
          {
            "type": "const",
            "name": "IMPORT_RULE",
            "idlType": {
              "type": "const-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "unsigned short"
            },
            "extAttrs": [],
            "value": {
              "type": "number",
              "value": "3"
            }
          },
          {
            "type": "const",
            "name": "MEDIA_RULE",
            "idlType": {
              "type": "const-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "unsigned short"
            },
            "extAttrs": [],
            "value": {
              "type": "number",
              "value": "4"
            }
          },
          {
            "type": "const",
            "name": "FONT_FACE_RULE",
            "idlType": {
              "type": "const-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "unsigned short"
            },
            "extAttrs": [],
            "value": {
              "type": "number",
              "value": "5"
            }
          },
          {
            "type": "const",
            "name": "PAGE_RULE",
            "idlType": {
              "type": "const-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "unsigned short"
            },
            "extAttrs": [],
            "value": {
              "type": "number",
              "value": "6"
            }
          },
          {
            "type": "const",
            "name": "MARGIN_RULE",
            "idlType": {
              "type": "const-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "unsigned short"
            },
            "extAttrs": [],
            "value": {
              "type": "number",
              "value": "9"
            }
          },
          {
            "type": "const",
            "name": "NAMESPACE_RULE",
            "idlType": {
              "type": "const-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "unsigned short"
            },
            "extAttrs": [],
            "value": {
              "type": "number",
              "value": "10"
            }
          }
        ],
        "extAttrs": [
          {
            "type": "extended-attribute",
            "name": "Exposed",
            "rhs": {
              "type": "identifier",
              "value": "Window"
            },
            "arguments": []
          }
        ],
        "partial": false,
        "deprecated": false,
        "experimental": false,
        "desc": "The  interface represents a single CSS rule. There are several types of rules which inherit properties from .\n\n  [CSSStyleRule]\n  [CSSImportRule]\n  [CSSMediaRule]\n  [CSSFontFaceRule]\n  [CSSPageRule]\n  [CSSNamespaceRule]\n  [CSSKeyframesRule]\n  [CSSKeyframeRule]\n  [CSSCounterStyleRule]\n  [CSSDocumentRule]\n  [CSSSupportsRule]\n  [CSSFontFeatureValuesRule]\n  [CSSViewportRule]\n",
        "mdn": "/en-US/docs/Web/API/CSSRule"
      },
      "CSSStyleRule": {
        "fragment": "[Exposed=Window]\ninterface CSSStyleRule : CSSRule {\n  attribute CSSOMString selectorText;\n  [SameObject, PutForwards=cssText] readonly attribute CSSStyleDeclaration style;\n};",
        "type": "interface",
        "name": "CSSStyleRule",
        "inheritance": "CSSRule",
        "members": [
          {
            "type": "attribute",
            "name": "selectorText",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "CSSOMString"
            },
            "extAttrs": [],
            "special": "",
            "readonly": false
          },
          {
            "type": "attribute",
            "name": "style",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "CSSStyleDeclaration"
            },
            "extAttrs": [
              {
                "type": "extended-attribute",
                "name": "SameObject",
                "rhs": null,
                "arguments": []
              },
              {
                "type": "extended-attribute",
                "name": "PutForwards",
                "rhs": {
                  "type": "identifier",
                  "value": "cssText"
                },
                "arguments": []
              }
            ],
            "special": "",
            "readonly": true
          }
        ],
        "extAttrs": [
          {
            "type": "extended-attribute",
            "name": "Exposed",
            "rhs": {
              "type": "identifier",
              "value": "Window"
            },
            "arguments": []
          }
        ],
        "partial": false,
        "deprecated": false,
        "experimental": false,
        "desc": "The  interface represents a single CSS style rule.\n  \n    \n    \n      CSSRule\n    \n  \n  \n    \n    \n      CSSStyleRule\n    \n  ",
        "mdn": "/en-US/docs/Web/API/CSSStyleRule"
      },
      "CSSImportRule": {
        "fragment": "[Exposed=Window]\ninterface CSSImportRule : CSSRule {\n  readonly attribute USVString href;\n  [SameObject, PutForwards=mediaText] readonly attribute MediaList media;\n  [SameObject] readonly attribute CSSStyleSheet styleSheet;\n};",
        "type": "interface",
        "name": "CSSImportRule",
        "inheritance": "CSSRule",
        "members": [
          {
            "type": "attribute",
            "name": "href",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "USVString"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true
          },
          {
            "type": "attribute",
            "name": "media",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "MediaList"
            },
            "extAttrs": [
              {
                "type": "extended-attribute",
                "name": "SameObject",
                "rhs": null,
                "arguments": []
              },
              {
                "type": "extended-attribute",
                "name": "PutForwards",
                "rhs": {
                  "type": "identifier",
                  "value": "mediaText"
                },
                "arguments": []
              }
            ],
            "special": "",
            "readonly": true
          },
          {
            "type": "attribute",
            "name": "styleSheet",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "CSSStyleSheet"
            },
            "extAttrs": [
              {
                "type": "extended-attribute",
                "name": "SameObject",
                "rhs": null,
                "arguments": []
              }
            ],
            "special": "",
            "readonly": true
          }
        ],
        "extAttrs": [
          {
            "type": "extended-attribute",
            "name": "Exposed",
            "rhs": {
              "type": "identifier",
              "value": "Window"
            },
            "arguments": []
          }
        ],
        "partial": false,
        "deprecated": false,
        "experimental": false,
        "desc": "The  interface represents an [@import] [at-rule].\n  \n    \n    \n      CSSRule\n    \n  \n  \n    \n    \n      CSSImportRule\n    \n  ",
        "mdn": "/en-US/docs/Web/API/CSSImportRule"
      },
      "CSSGroupingRule": {
        "fragment": "[Exposed=Window]\ninterface CSSGroupingRule : CSSRule {\n  [SameObject] readonly attribute CSSRuleList cssRules;\n  unsigned long insertRule(CSSOMString rule, optional unsigned long index = 0);\n  undefined deleteRule(unsigned long index);\n};",
        "type": "interface",
        "name": "CSSGroupingRule",
        "inheritance": "CSSRule",
        "members": [
          {
            "type": "attribute",
            "name": "cssRules",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "CSSRuleList"
            },
            "extAttrs": [
              {
                "type": "extended-attribute",
                "name": "SameObject",
                "rhs": null,
                "arguments": []
              }
            ],
            "special": "",
            "readonly": true
          },
          {
            "type": "operation",
            "name": "insertRule",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "unsigned long"
            },
            "arguments": [
              {
                "type": "argument",
                "name": "rule",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "CSSOMString"
                },
                "default": null,
                "optional": false,
                "variadic": false
              },
              {
                "type": "argument",
                "name": "index",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "unsigned long"
                },
                "default": {
                  "type": "number",
                  "value": "0"
                },
                "optional": true,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": ""
          },
          {
            "type": "operation",
            "name": "deleteRule",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "undefined"
            },
            "arguments": [
              {
                "type": "argument",
                "name": "index",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "unsigned long"
                },
                "default": null,
                "optional": false,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": ""
          }
        ],
        "extAttrs": [
          {
            "type": "extended-attribute",
            "name": "Exposed",
            "rhs": {
              "type": "identifier",
              "value": "Window"
            },
            "arguments": []
          }
        ],
        "partial": false,
        "deprecated": false,
        "experimental": false,
        "desc": "The  interface of the [CSS Object Model] represents any CSS [at-rule] that contains other rules nested within it.\n  \n    \n    \n      CSSRule\n    \n  \n  \n    \n    \n      CSSGroupingRule\n    \n  ",
        "mdn": "/en-US/docs/Web/API/CSSGroupingRule"
      },
      "CSSPageRule": {
        "fragment": "[Exposed=Window]\ninterface CSSPageRule : CSSGroupingRule {\n           attribute CSSOMString selectorText;\n  [SameObject, PutForwards=cssText] readonly attribute CSSStyleDeclaration style;\n};",
        "type": "interface",
        "name": "CSSPageRule",
        "inheritance": "CSSGroupingRule",
        "members": [
          {
            "type": "attribute",
            "name": "selectorText",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "CSSOMString"
            },
            "extAttrs": [],
            "special": "",
            "readonly": false
          },
          {
            "type": "attribute",
            "name": "style",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "CSSStyleDeclaration"
            },
            "extAttrs": [
              {
                "type": "extended-attribute",
                "name": "SameObject",
                "rhs": null,
                "arguments": []
              },
              {
                "type": "extended-attribute",
                "name": "PutForwards",
                "rhs": {
                  "type": "identifier",
                  "value": "cssText"
                },
                "arguments": []
              }
            ],
            "special": "",
            "readonly": true
          }
        ],
        "extAttrs": [
          {
            "type": "extended-attribute",
            "name": "Exposed",
            "rhs": {
              "type": "identifier",
              "value": "Window"
            },
            "arguments": []
          }
        ],
        "partial": false,
        "deprecated": false,
        "experimental": false,
        "desc": " represents a single CSS [@page] rule.\n  \n    \n    \n      CSSRule\n    \n  \n  \n    \n    \n      CSSGroupingRule\n    \n  \n  \n    \n    \n      CSSPageRule\n    \n  ",
        "mdn": "/en-US/docs/Web/API/CSSPageRule"
      },
      "CSSMarginRule": {
        "fragment": "[Exposed=Window]\ninterface CSSMarginRule : CSSRule {\n  readonly attribute CSSOMString name;\n  [SameObject, PutForwards=cssText] readonly attribute CSSStyleDeclaration style;\n};",
        "type": "interface",
        "name": "CSSMarginRule",
        "inheritance": "CSSRule",
        "members": [
          {
            "type": "attribute",
            "name": "name",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "CSSOMString"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true
          },
          {
            "type": "attribute",
            "name": "style",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "CSSStyleDeclaration"
            },
            "extAttrs": [
              {
                "type": "extended-attribute",
                "name": "SameObject",
                "rhs": null,
                "arguments": []
              },
              {
                "type": "extended-attribute",
                "name": "PutForwards",
                "rhs": {
                  "type": "identifier",
                  "value": "cssText"
                },
                "arguments": []
              }
            ],
            "special": "",
            "readonly": true
          }
        ],
        "extAttrs": [
          {
            "type": "extended-attribute",
            "name": "Exposed",
            "rhs": {
              "type": "identifier",
              "value": "Window"
            },
            "arguments": []
          }
        ],
        "partial": false
      },
      "CSSNamespaceRule": {
        "fragment": "[Exposed=Window]\ninterface CSSNamespaceRule : CSSRule {\n  readonly attribute CSSOMString namespaceURI;\n  readonly attribute CSSOMString prefix;\n};",
        "type": "interface",
        "name": "CSSNamespaceRule",
        "inheritance": "CSSRule",
        "members": [
          {
            "type": "attribute",
            "name": "namespaceURI",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "CSSOMString"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true
          },
          {
            "type": "attribute",
            "name": "prefix",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "CSSOMString"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true
          }
        ],
        "extAttrs": [
          {
            "type": "extended-attribute",
            "name": "Exposed",
            "rhs": {
              "type": "identifier",
              "value": "Window"
            },
            "arguments": []
          }
        ],
        "partial": false,
        "deprecated": false,
        "experimental": false,
        "desc": "The  interface describes an object representing a single CSS [@namespace] [at-rule].\n  \n    \n    \n      CSSRule\n    \n  \n  \n    \n    \n      CSSNamespaceRule\n    \n  ",
        "mdn": "/en-US/docs/Web/API/CSSNamespaceRule"
      },
      "CSSStyleDeclaration": {
        "fragment": "[Exposed=Window]\ninterface CSSStyleDeclaration {\n  [CEReactions] attribute CSSOMString cssText;\n  readonly attribute unsigned long length;\n  getter CSSOMString item(unsigned long index);\n  CSSOMString getPropertyValue(CSSOMString property);\n  CSSOMString getPropertyPriority(CSSOMString property);\n  [CEReactions] undefined setProperty(CSSOMString property, [LegacyNullToEmptyString] CSSOMString value, optional [LegacyNullToEmptyString] CSSOMString priority = \"\");\n  [CEReactions] CSSOMString removeProperty(CSSOMString property);\n  readonly attribute CSSRule? parentRule;\n  [CEReactions] attribute [LegacyNullToEmptyString] CSSOMString cssFloat;\n};",
        "type": "interface",
        "name": "CSSStyleDeclaration",
        "inheritance": null,
        "members": [
          {
            "type": "attribute",
            "name": "cssText",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "CSSOMString"
            },
            "extAttrs": [
              {
                "type": "extended-attribute",
                "name": "CEReactions",
                "rhs": null,
                "arguments": []
              }
            ],
            "special": "",
            "readonly": false
          },
          {
            "type": "attribute",
            "name": "length",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "unsigned long"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true
          },
          {
            "type": "operation",
            "name": "item",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "CSSOMString"
            },
            "arguments": [
              {
                "type": "argument",
                "name": "index",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "unsigned long"
                },
                "default": null,
                "optional": false,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": "getter"
          },
          {
            "type": "operation",
            "name": "getPropertyValue",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "CSSOMString"
            },
            "arguments": [
              {
                "type": "argument",
                "name": "property",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "CSSOMString"
                },
                "default": null,
                "optional": false,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": ""
          },
          {
            "type": "operation",
            "name": "getPropertyPriority",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "CSSOMString"
            },
            "arguments": [
              {
                "type": "argument",
                "name": "property",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "CSSOMString"
                },
                "default": null,
                "optional": false,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": ""
          },
          {
            "type": "operation",
            "name": "setProperty",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "undefined"
            },
            "arguments": [
              {
                "type": "argument",
                "name": "property",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "CSSOMString"
                },
                "default": null,
                "optional": false,
                "variadic": false
              },
              {
                "type": "argument",
                "name": "value",
                "extAttrs": [
                  {
                    "type": "extended-attribute",
                    "name": "LegacyNullToEmptyString",
                    "rhs": null,
                    "arguments": []
                  }
                ],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "CSSOMString"
                },
                "default": null,
                "optional": false,
                "variadic": false
              },
              {
                "type": "argument",
                "name": "priority",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [
                    {
                      "type": "extended-attribute",
                      "name": "LegacyNullToEmptyString",
                      "rhs": null,
                      "arguments": []
                    }
                  ],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "CSSOMString"
                },
                "default": {
                  "type": "string",
                  "value": ""
                },
                "optional": true,
                "variadic": false
              }
            ],
            "extAttrs": [
              {
                "type": "extended-attribute",
                "name": "CEReactions",
                "rhs": null,
                "arguments": []
              }
            ],
            "special": ""
          },
          {
            "type": "operation",
            "name": "removeProperty",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "CSSOMString"
            },
            "arguments": [
              {
                "type": "argument",
                "name": "property",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "CSSOMString"
                },
                "default": null,
                "optional": false,
                "variadic": false
              }
            ],
            "extAttrs": [
              {
                "type": "extended-attribute",
                "name": "CEReactions",
                "rhs": null,
                "arguments": []
              }
            ],
            "special": ""
          },
          {
            "type": "attribute",
            "name": "parentRule",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": true,
              "union": false,
              "idlType": "CSSRule"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true
          },
          {
            "type": "attribute",
            "name": "cssFloat",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [
                {
                  "type": "extended-attribute",
                  "name": "LegacyNullToEmptyString",
                  "rhs": null,
                  "arguments": []
                }
              ],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "CSSOMString"
            },
            "extAttrs": [
              {
                "type": "extended-attribute",
                "name": "CEReactions",
                "rhs": null,
                "arguments": []
              }
            ],
            "special": "",
            "readonly": false
          }
        ],
        "extAttrs": [
          {
            "type": "extended-attribute",
            "name": "Exposed",
            "rhs": {
              "type": "identifier",
              "value": "Window"
            },
            "arguments": []
          }
        ],
        "partial": false,
        "deprecated": false,
        "experimental": false,
        "desc": "The  interface represents an object that is a CSS declaration block, and exposes style information and various style-related methods and properties.\nA  object can be exposed using three different APIs:\n\n  Via [HTMLElement.style], which deals with the inline styles of a single element (e.g., [<div style=\"...\">]).\n  Via the [CSSStyleSheet] API. For example, [document.styleSheets[0].cssRules[0].style] returns a  object on the first CSS rule in the document's first stylesheet.\n  Via [Window.getComputedStyle()], which exposes the  object as a read-only interface.\n",
        "mdn": "/en-US/docs/Web/API/CSSStyleDeclaration"
      },
      "ElementCSSInlineStyle": {
        "fragment": "interface mixin ElementCSSInlineStyle {\n  [SameObject, PutForwards=cssText] readonly attribute CSSStyleDeclaration style;\n};",
        "type": "interface mixin",
        "name": "ElementCSSInlineStyle",
        "inheritance": null,
        "members": [
          {
            "type": "attribute",
            "name": "style",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "CSSStyleDeclaration"
            },
            "extAttrs": [
              {
                "type": "extended-attribute",
                "name": "SameObject",
                "rhs": null,
                "arguments": []
              },
              {
                "type": "extended-attribute",
                "name": "PutForwards",
                "rhs": {
                  "type": "identifier",
                  "value": "cssText"
                },
                "arguments": []
              }
            ],
            "special": "",
            "readonly": true
          }
        ],
        "extAttrs": [],
        "partial": false
      },
      "CSS": {
        "fragment": "[Exposed=Window]\nnamespace CSS {\n  CSSOMString escape(CSSOMString ident);\n};",
        "type": "namespace",
        "name": "CSS",
        "inheritance": null,
        "members": [
          {
            "type": "operation",
            "name": "escape",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "CSSOMString"
            },
            "arguments": [
              {
                "type": "argument",
                "name": "ident",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "CSSOMString"
                },
                "default": null,
                "optional": false,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": ""
          }
        ],
        "extAttrs": [
          {
            "type": "extended-attribute",
            "name": "Exposed",
            "rhs": {
              "type": "identifier",
              "value": "Window"
            },
            "arguments": []
          }
        ],
        "partial": false,
        "deprecated": false,
        "experimental": false,
        "desc": "The  interface holds useful CSS-related methods. No objects with this interface are implemented: it contains only static methods and is therefore a utilitarian interface.",
        "mdn": "/en-US/docs/Web/API/CSS"
      }
    },
    "idlExtendedNames": {
      "CSSStyleSheet": [
        {
          "fragment": "partial interface CSSStyleSheet {\n  [SameObject] readonly attribute CSSRuleList rules;\n  long addRule(optional DOMString selector = \"undefined\", optional DOMString style = \"undefined\", optional unsigned long index);\n  undefined removeRule(optional unsigned long index = 0);\n};",
          "type": "interface",
          "name": "CSSStyleSheet",
          "inheritance": null,
          "members": [
            {
              "type": "attribute",
              "name": "rules",
              "idlType": {
                "type": "attribute-type",
                "extAttrs": [],
                "generic": "",
                "nullable": false,
                "union": false,
                "idlType": "CSSRuleList"
              },
              "extAttrs": [
                {
                  "type": "extended-attribute",
                  "name": "SameObject",
                  "rhs": null,
                  "arguments": []
                }
              ],
              "special": "",
              "readonly": true
            },
            {
              "type": "operation",
              "name": "addRule",
              "idlType": {
                "type": "return-type",
                "extAttrs": [],
                "generic": "",
                "nullable": false,
                "union": false,
                "idlType": "long"
              },
              "arguments": [
                {
                  "type": "argument",
                  "name": "selector",
                  "extAttrs": [],
                  "idlType": {
                    "type": "argument-type",
                    "extAttrs": [],
                    "generic": "",
                    "nullable": false,
                    "union": false,
                    "idlType": "DOMString"
                  },
                  "default": {
                    "type": "string",
                    "value": "undefined"
                  },
                  "optional": true,
                  "variadic": false
                },
                {
                  "type": "argument",
                  "name": "style",
                  "extAttrs": [],
                  "idlType": {
                    "type": "argument-type",
                    "extAttrs": [],
                    "generic": "",
                    "nullable": false,
                    "union": false,
                    "idlType": "DOMString"
                  },
                  "default": {
                    "type": "string",
                    "value": "undefined"
                  },
                  "optional": true,
                  "variadic": false
                },
                {
                  "type": "argument",
                  "name": "index",
                  "extAttrs": [],
                  "idlType": {
                    "type": "argument-type",
                    "extAttrs": [],
                    "generic": "",
                    "nullable": false,
                    "union": false,
                    "idlType": "unsigned long"
                  },
                  "default": null,
                  "optional": true,
                  "variadic": false
                }
              ],
              "extAttrs": [],
              "special": ""
            },
            {
              "type": "operation",
              "name": "removeRule",
              "idlType": {
                "type": "return-type",
                "extAttrs": [],
                "generic": "",
                "nullable": false,
                "union": false,
                "idlType": "undefined"
              },
              "arguments": [
                {
                  "type": "argument",
                  "name": "index",
                  "extAttrs": [],
                  "idlType": {
                    "type": "argument-type",
                    "extAttrs": [],
                    "generic": "",
                    "nullable": false,
                    "union": false,
                    "idlType": "unsigned long"
                  },
                  "default": {
                    "type": "number",
                    "value": "0"
                  },
                  "optional": true,
                  "variadic": false
                }
              ],
              "extAttrs": [],
              "special": ""
            }
          ],
          "extAttrs": [],
          "partial": true
        }
      ],
      "DocumentOrShadowRoot": [
        {
          "fragment": "partial interface mixin DocumentOrShadowRoot {\n  [SameObject] readonly attribute StyleSheetList styleSheets;\n  attribute ObservableArray<CSSStyleSheet> adoptedStyleSheets;\n};",
          "type": "interface mixin",
          "name": "DocumentOrShadowRoot",
          "inheritance": null,
          "members": [
            {
              "type": "attribute",
              "name": "styleSheets",
              "idlType": {
                "type": "attribute-type",
                "extAttrs": [],
                "generic": "",
                "nullable": false,
                "union": false,
                "idlType": "StyleSheetList"
              },
              "extAttrs": [
                {
                  "type": "extended-attribute",
                  "name": "SameObject",
                  "rhs": null,
                  "arguments": []
                }
              ],
              "special": "",
              "readonly": true
            },
            {
              "type": "attribute",
              "name": "adoptedStyleSheets",
              "idlType": {
                "type": "attribute-type",
                "extAttrs": [],
                "generic": "ObservableArray",
                "nullable": false,
                "union": false,
                "idlType": [
                  {
                    "type": "attribute-type",
                    "extAttrs": [],
                    "generic": "",
                    "nullable": false,
                    "union": false,
                    "idlType": "CSSStyleSheet"
                  }
                ]
              },
              "extAttrs": [],
              "special": "",
              "readonly": false
            }
          ],
          "extAttrs": [],
          "partial": true
        }
      ],
      "ProcessingInstruction": [
        {
          "fragment": "ProcessingInstruction includes LinkStyle;",
          "type": "includes",
          "extAttrs": [],
          "target": "ProcessingInstruction",
          "includes": "LinkStyle"
        }
      ],
      "HTMLElement": [
        {
          "fragment": "HTMLElement includes ElementCSSInlineStyle;",
          "type": "includes",
          "extAttrs": [],
          "target": "HTMLElement",
          "includes": "ElementCSSInlineStyle"
        }
      ],
      "SVGElement": [
        {
          "fragment": "SVGElement includes ElementCSSInlineStyle;",
          "type": "includes",
          "extAttrs": [],
          "target": "SVGElement",
          "includes": "ElementCSSInlineStyle"
        }
      ],
      "MathMLElement": [
        {
          "fragment": "MathMLElement includes ElementCSSInlineStyle;",
          "type": "includes",
          "extAttrs": [],
          "target": "MathMLElement",
          "includes": "ElementCSSInlineStyle"
        }
      ],
      "Window": [
        {
          "fragment": "partial interface Window {\n  [NewObject] CSSStyleDeclaration getComputedStyle(Element elt, optional CSSOMString? pseudoElt);\n};",
          "type": "interface",
          "name": "Window",
          "inheritance": null,
          "members": [
            {
              "type": "operation",
              "name": "getComputedStyle",
              "idlType": {
                "type": "return-type",
                "extAttrs": [],
                "generic": "",
                "nullable": false,
                "union": false,
                "idlType": "CSSStyleDeclaration"
              },
              "arguments": [
                {
                  "type": "argument",
                  "name": "elt",
                  "extAttrs": [],
                  "idlType": {
                    "type": "argument-type",
                    "extAttrs": [],
                    "generic": "",
                    "nullable": false,
                    "union": false,
                    "idlType": "Element"
                  },
                  "default": null,
                  "optional": false,
                  "variadic": false
                },
                {
                  "type": "argument",
                  "name": "pseudoElt",
                  "extAttrs": [],
                  "idlType": {
                    "type": "argument-type",
                    "extAttrs": [],
                    "generic": "",
                    "nullable": true,
                    "union": false,
                    "idlType": "CSSOMString"
                  },
                  "default": null,
                  "optional": true,
                  "variadic": false
                }
              ],
              "extAttrs": [
                {
                  "type": "extended-attribute",
                  "name": "NewObject",
                  "rhs": null,
                  "arguments": []
                }
              ],
              "special": ""
            }
          ],
          "extAttrs": [],
          "partial": true
        }
      ]
    },
    "globals": {},
    "exposed": {
      "Window": [
        "MediaList",
        "StyleSheet",
        "CSSStyleSheet",
        "StyleSheetList",
        "CSSRuleList",
        "CSSRule",
        "CSSStyleRule",
        "CSSImportRule",
        "CSSGroupingRule",
        "CSSPageRule",
        "CSSMarginRule",
        "CSSNamespaceRule",
        "CSSStyleDeclaration",
        "CSS"
      ]
    },
    "dependencies": {
      "MediaList": [
        "CSSOMString"
      ],
      "StyleSheet": [
        "CSSOMString",
        "Element",
        "ProcessingInstruction",
        "CSSStyleSheet",
        "MediaList"
      ],
      "CSSStyleSheet": [
        "StyleSheet",
        "CSSStyleSheetInit",
        "CSSRule",
        "CSSRuleList",
        "CSSOMString",
        "CSSStyleSheet"
      ],
      "CSSStyleSheetInit": [
        "MediaList"
      ],
      "StyleSheetList": [
        "CSSStyleSheet"
      ],
      "DocumentOrShadowRoot": [
        "StyleSheetList",
        "CSSStyleSheet"
      ],
      "LinkStyle": [
        "CSSStyleSheet"
      ],
      "ProcessingInstruction": [
        "LinkStyle"
      ],
      "CSSRuleList": [
        "CSSRule"
      ],
      "CSSRule": [
        "CSSOMString",
        "CSSRule",
        "CSSStyleSheet"
      ],
      "CSSStyleRule": [
        "CSSRule",
        "CSSOMString",
        "CSSStyleDeclaration"
      ],
      "CSSImportRule": [
        "CSSRule",
        "MediaList",
        "CSSStyleSheet"
      ],
      "CSSGroupingRule": [
        "CSSRule",
        "CSSRuleList",
        "CSSOMString"
      ],
      "CSSPageRule": [
        "CSSGroupingRule",
        "CSSOMString",
        "CSSStyleDeclaration"
      ],
      "CSSMarginRule": [
        "CSSRule",
        "CSSOMString",
        "CSSStyleDeclaration"
      ],
      "CSSNamespaceRule": [
        "CSSRule",
        "CSSOMString"
      ],
      "CSSStyleDeclaration": [
        "CSSOMString",
        "CSSRule"
      ],
      "ElementCSSInlineStyle": [
        "CSSStyleDeclaration"
      ],
      "HTMLElement": [
        "ElementCSSInlineStyle"
      ],
      "SVGElement": [
        "ElementCSSInlineStyle"
      ],
      "MathMLElement": [
        "ElementCSSInlineStyle"
      ],
      "Window": [
        "CSSStyleDeclaration",
        "Element",
        "CSSOMString"
      ],
      "CSS": [
        "CSSOMString"
      ]
    },
    "externalDependencies": [
      "CSSOMString",
      "Element",
      "ProcessingInstruction",
      "DocumentOrShadowRoot",
      "Window"
    ],
    "hasObsoleteIdl": false
  },
  "path": "./../webIDL/merged/cssom-1.json",
  "basename": "cssom-1.json",
  "name": "cssom-1",
  "libraryName": "cssom_1"
}