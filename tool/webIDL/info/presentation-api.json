{
  "spec": {
    "title": "Presentation API",
    "url": "https://w3c.github.io/presentation-api/"
  },
  "idlparsed": {
    "jsNames": {
      "constructors": {
        "Window": [
          "PresentationRequest",
          "PresentationConnectionAvailableEvent",
          "PresentationConnectionCloseEvent"
        ]
      },
      "functions": {
        "Window": [
          "Presentation",
          "PresentationAvailability",
          "PresentationConnection",
          "PresentationReceiver",
          "PresentationConnectionList"
        ]
      }
    },
    "idlNames": {
      "Presentation": {
        "fragment": "[SecureContext, Exposed=Window]\ninterface Presentation {\n};",
        "type": "interface",
        "name": "Presentation",
        "inheritance": null,
        "members": [],
        "extAttrs": [
          {
            "type": "extended-attribute",
            "name": "SecureContext",
            "rhs": null,
            "arguments": []
          },
          {
            "type": "extended-attribute",
            "name": "Exposed",
            "rhs": {
              "type": "identifier",
              "value": "Window"
            },
            "arguments": []
          }
        ],
        "partial": false,
        "deprecated": false,
        "experimental": true,
        "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  can be defined as two possible user agents in the context: Controlling user agent and Receiving user agent.\nIn controlling browsing context, the  interface provides a mechanism to override the browser default behavior of launching presentation to external screen. In receiving browsing context,  interface provides the access to the available presentation connections.",
        "mdn": "/en-US/docs/Web/API/Presentation"
      },
      "PresentationRequest": {
        "fragment": "[SecureContext, Exposed=Window]\ninterface PresentationRequest : EventTarget {\n  constructor(USVString url);\n  constructor(sequence<USVString> urls);\n  Promise<PresentationConnection> start();\n  Promise<PresentationConnection> reconnect(USVString presentationId);\n  Promise<PresentationAvailability> getAvailability();\n\n  attribute EventHandler onconnectionavailable;\n};",
        "type": "interface",
        "name": "PresentationRequest",
        "inheritance": "EventTarget",
        "members": [
          {
            "type": "constructor",
            "arguments": [
              {
                "type": "argument",
                "name": "url",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "USVString"
                },
                "default": null,
                "optional": false,
                "variadic": false
              }
            ],
            "extAttrs": []
          },
          {
            "type": "constructor",
            "arguments": [
              {
                "type": "argument",
                "name": "urls",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "sequence",
                  "nullable": false,
                  "union": false,
                  "idlType": [
                    {
                      "type": "argument-type",
                      "extAttrs": [],
                      "generic": "",
                      "nullable": false,
                      "union": false,
                      "idlType": "USVString"
                    }
                  ]
                },
                "default": null,
                "optional": false,
                "variadic": false
              }
            ],
            "extAttrs": []
          },
          {
            "type": "operation",
            "name": "start",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "Promise",
              "nullable": false,
              "union": false,
              "idlType": [
                {
                  "type": "return-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "PresentationConnection"
                }
              ]
            },
            "arguments": [],
            "extAttrs": [],
            "special": ""
          },
          {
            "type": "operation",
            "name": "reconnect",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "Promise",
              "nullable": false,
              "union": false,
              "idlType": [
                {
                  "type": "return-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "PresentationConnection"
                }
              ]
            },
            "arguments": [
              {
                "type": "argument",
                "name": "presentationId",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "USVString"
                },
                "default": null,
                "optional": false,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": ""
          },
          {
            "type": "operation",
            "name": "getAvailability",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "Promise",
              "nullable": false,
              "union": false,
              "idlType": [
                {
                  "type": "return-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "PresentationAvailability"
                }
              ]
            },
            "arguments": [],
            "extAttrs": [],
            "special": ""
          },
          {
            "type": "attribute",
            "name": "onconnectionavailable",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "EventHandler"
            },
            "extAttrs": [],
            "special": "",
            "readonly": false
          }
        ],
        "extAttrs": [
          {
            "type": "extended-attribute",
            "name": "SecureContext",
            "rhs": null,
            "arguments": []
          },
          {
            "type": "extended-attribute",
            "name": "Exposed",
            "rhs": {
              "type": "identifier",
              "value": "Window"
            },
            "arguments": []
          }
        ],
        "partial": false,
        "deprecated": false,
        "experimental": true,
        "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nA  object is used to initiate or reconnect to a presentation made by a controlling browsing context. The  object MUST be implemented in a controlling browsing context provided by a controlling user agent.\nWhen a  is constructed, the given [urls] MUST be used as the list of presentation request URLs which are each a possible presentation URL for the  instance.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      PresentationRequest\n    \n  ",
        "mdn": "/en-US/docs/Web/API/PresentationRequest"
      },
      "PresentationAvailability": {
        "fragment": "[SecureContext, Exposed=Window]\ninterface PresentationAvailability : EventTarget {\n  readonly attribute boolean value;\n\n  attribute EventHandler onchange;\n};",
        "type": "interface",
        "name": "PresentationAvailability",
        "inheritance": "EventTarget",
        "members": [
          {
            "type": "attribute",
            "name": "value",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "boolean"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true
          },
          {
            "type": "attribute",
            "name": "onchange",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "EventHandler"
            },
            "extAttrs": [],
            "special": "",
            "readonly": false
          }
        ],
        "extAttrs": [
          {
            "type": "extended-attribute",
            "name": "SecureContext",
            "rhs": null,
            "arguments": []
          },
          {
            "type": "extended-attribute",
            "name": "Exposed",
            "rhs": {
              "type": "identifier",
              "value": "Window"
            },
            "arguments": []
          }
        ],
        "partial": false,
        "deprecated": false,
        "experimental": true,
        "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nA  object is associated with available presentation displays and represents the presentation display availability for a presentation request. If the controlling user agent can monitor the list of available presentation displays in the background (without a pending request to [start()]), the  object MUST be implemented in a controlling browsing context.\nThe [value] attribute MUST return the last value it was set to. The value is updated by the monitor the list of available presentation displays algorithm.\nThe [onchange] attribute is an event handler whose corresponding event handler event type is [change].\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      PresentationAvailability\n    \n  ",
        "mdn": "/en-US/docs/Web/API/PresentationAvailability"
      },
      "PresentationConnectionAvailableEvent": {
        "fragment": "[SecureContext, Exposed=Window]\ninterface PresentationConnectionAvailableEvent : Event {\n  constructor(DOMString type, PresentationConnectionAvailableEventInit eventInitDict);\n  [SameObject] readonly attribute PresentationConnection connection;\n};",
        "type": "interface",
        "name": "PresentationConnectionAvailableEvent",
        "inheritance": "Event",
        "members": [
          {
            "type": "constructor",
            "arguments": [
              {
                "type": "argument",
                "name": "type",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "DOMString"
                },
                "default": null,
                "optional": false,
                "variadic": false
              },
              {
                "type": "argument",
                "name": "eventInitDict",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "PresentationConnectionAvailableEventInit"
                },
                "default": null,
                "optional": false,
                "variadic": false
              }
            ],
            "extAttrs": []
          },
          {
            "type": "attribute",
            "name": "connection",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "PresentationConnection"
            },
            "extAttrs": [
              {
                "type": "extended-attribute",
                "name": "SameObject",
                "rhs": null,
                "arguments": []
              }
            ],
            "special": "",
            "readonly": true
          }
        ],
        "extAttrs": [
          {
            "type": "extended-attribute",
            "name": "SecureContext",
            "rhs": null,
            "arguments": []
          },
          {
            "type": "extended-attribute",
            "name": "Exposed",
            "rhs": {
              "type": "identifier",
              "value": "Window"
            },
            "arguments": []
          }
        ],
        "partial": false,
        "deprecated": false,
        "experimental": true,
        "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  interface of the Presentation API is fired on a [PresentationRequest] when a connection associated with the object is created.\nA controlling user agent fires a trusted event named [connectionavailable] on a [PresentationRequest] when a connection associated with the object is created. It is fired at the [PresentationRequest] instance, using the  interface, with the [connection] attribute set to the [PresentationConnection] object that was created. The event is fired for each connection that is created for the controller, either by the controller calling [start()] or [reconnect()], or by the controlling user agent creating a connection on the controller's behalf via [defaultRequest].\n  \n    \n    \n      Event\n    \n  \n  \n    \n    \n      PresentationConnectionAvailableEvent\n    \n  ",
        "mdn": "/en-US/docs/Web/API/PresentationConnectionAvailableEvent"
      },
      "PresentationConnectionAvailableEventInit": {
        "fragment": "dictionary PresentationConnectionAvailableEventInit : EventInit {\n  required PresentationConnection connection;\n};",
        "type": "dictionary",
        "name": "PresentationConnectionAvailableEventInit",
        "inheritance": "EventInit",
        "members": [
          {
            "type": "field",
            "name": "connection",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "PresentationConnection"
            },
            "default": null,
            "required": true
          }
        ],
        "extAttrs": [],
        "partial": false
      },
      "PresentationConnectionState": {
        "fragment": "enum PresentationConnectionState { \"connecting\", \"connected\", \"closed\", \"terminated\" };",
        "type": "enum",
        "name": "PresentationConnectionState",
        "values": [
          {
            "type": "enum-value",
            "value": "connecting"
          },
          {
            "type": "enum-value",
            "value": "connected"
          },
          {
            "type": "enum-value",
            "value": "closed"
          },
          {
            "type": "enum-value",
            "value": "terminated"
          }
        ],
        "extAttrs": []
      },
      "PresentationConnection": {
        "fragment": "[SecureContext, Exposed=Window]\ninterface PresentationConnection : EventTarget {\n  readonly attribute USVString id;\n  readonly attribute USVString url;\n  readonly attribute PresentationConnectionState state;\n  undefined close();\n  undefined terminate();\n  attribute EventHandler onconnect;\n  attribute EventHandler onclose;\n  attribute EventHandler onterminate;\n\n  // Communication\n  attribute BinaryType binaryType;\n  attribute EventHandler onmessage;\n  undefined send (DOMString message);\n  undefined send (Blob data);\n  undefined send (ArrayBuffer data);\n  undefined send (ArrayBufferView data);\n};",
        "type": "interface",
        "name": "PresentationConnection",
        "inheritance": "EventTarget",
        "members": [
          {
            "type": "attribute",
            "name": "id",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "USVString"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true
          },
          {
            "type": "attribute",
            "name": "url",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "USVString"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true
          },
          {
            "type": "attribute",
            "name": "state",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "PresentationConnectionState"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true
          },
          {
            "type": "operation",
            "name": "close",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "undefined"
            },
            "arguments": [],
            "extAttrs": [],
            "special": ""
          },
          {
            "type": "operation",
            "name": "terminate",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "undefined"
            },
            "arguments": [],
            "extAttrs": [],
            "special": ""
          },
          {
            "type": "attribute",
            "name": "onconnect",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "EventHandler"
            },
            "extAttrs": [],
            "special": "",
            "readonly": false
          },
          {
            "type": "attribute",
            "name": "onclose",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "EventHandler"
            },
            "extAttrs": [],
            "special": "",
            "readonly": false
          },
          {
            "type": "attribute",
            "name": "onterminate",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "EventHandler"
            },
            "extAttrs": [],
            "special": "",
            "readonly": false
          },
          {
            "type": "attribute",
            "name": "binaryType",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "BinaryType"
            },
            "extAttrs": [],
            "special": "",
            "readonly": false
          },
          {
            "type": "attribute",
            "name": "onmessage",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "EventHandler"
            },
            "extAttrs": [],
            "special": "",
            "readonly": false
          },
          {
            "type": "operation",
            "name": "send",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "undefined"
            },
            "arguments": [
              {
                "type": "argument",
                "name": "message",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "DOMString"
                },
                "default": null,
                "optional": false,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": ""
          },
          {
            "type": "operation",
            "name": "send",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "undefined"
            },
            "arguments": [
              {
                "type": "argument",
                "name": "data",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "Blob"
                },
                "default": null,
                "optional": false,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": ""
          },
          {
            "type": "operation",
            "name": "send",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "undefined"
            },
            "arguments": [
              {
                "type": "argument",
                "name": "data",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "ArrayBuffer"
                },
                "default": null,
                "optional": false,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": ""
          },
          {
            "type": "operation",
            "name": "send",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "undefined"
            },
            "arguments": [
              {
                "type": "argument",
                "name": "data",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "ArrayBufferView"
                },
                "default": null,
                "optional": false,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": ""
          }
        ],
        "extAttrs": [
          {
            "type": "extended-attribute",
            "name": "SecureContext",
            "rhs": null,
            "arguments": []
          },
          {
            "type": "extended-attribute",
            "name": "Exposed",
            "rhs": {
              "type": "identifier",
              "value": "Window"
            },
            "arguments": []
          }
        ],
        "partial": false,
        "deprecated": false,
        "experimental": true,
        "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  interface of the Presentation API provides methods and properties for managing a single presentation. Each presentation connection is represented by a  object. Both the controlling user agent and receiving user agent MUST implement .\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      PresentationConnection\n    \n  ",
        "mdn": "/en-US/docs/Web/API/PresentationConnection"
      },
      "PresentationConnectionCloseReason": {
        "fragment": "enum PresentationConnectionCloseReason { \"error\", \"closed\", \"wentaway\" };",
        "type": "enum",
        "name": "PresentationConnectionCloseReason",
        "values": [
          {
            "type": "enum-value",
            "value": "error"
          },
          {
            "type": "enum-value",
            "value": "closed"
          },
          {
            "type": "enum-value",
            "value": "wentaway"
          }
        ],
        "extAttrs": []
      },
      "PresentationConnectionCloseEvent": {
        "fragment": "[SecureContext, Exposed=Window]\ninterface PresentationConnectionCloseEvent : Event {\n  constructor(DOMString type, PresentationConnectionCloseEventInit eventInitDict);\n  readonly attribute PresentationConnectionCloseReason reason;\n  readonly attribute DOMString message;\n};",
        "type": "interface",
        "name": "PresentationConnectionCloseEvent",
        "inheritance": "Event",
        "members": [
          {
            "type": "constructor",
            "arguments": [
              {
                "type": "argument",
                "name": "type",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "DOMString"
                },
                "default": null,
                "optional": false,
                "variadic": false
              },
              {
                "type": "argument",
                "name": "eventInitDict",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "PresentationConnectionCloseEventInit"
                },
                "default": null,
                "optional": false,
                "variadic": false
              }
            ],
            "extAttrs": []
          },
          {
            "type": "attribute",
            "name": "reason",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "PresentationConnectionCloseReason"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true
          },
          {
            "type": "attribute",
            "name": "message",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "DOMString"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true
          }
        ],
        "extAttrs": [
          {
            "type": "extended-attribute",
            "name": "SecureContext",
            "rhs": null,
            "arguments": []
          },
          {
            "type": "extended-attribute",
            "name": "Exposed",
            "rhs": {
              "type": "identifier",
              "value": "Window"
            },
            "arguments": []
          }
        ],
        "partial": false,
        "deprecated": false,
        "experimental": true,
        "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  interface of the Presentation API is fired on a [PresentationConnection] when it is closed.\n  \n    \n    \n      Event\n    \n  \n  \n    \n    \n      PresentationConnectionCloseEvent\n    \n  ",
        "mdn": "/en-US/docs/Web/API/PresentationConnectionCloseEvent"
      },
      "PresentationConnectionCloseEventInit": {
        "fragment": "dictionary PresentationConnectionCloseEventInit : EventInit {\n  required PresentationConnectionCloseReason reason;\n  DOMString message = \"\";\n};",
        "type": "dictionary",
        "name": "PresentationConnectionCloseEventInit",
        "inheritance": "EventInit",
        "members": [
          {
            "type": "field",
            "name": "reason",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "PresentationConnectionCloseReason"
            },
            "default": null,
            "required": true
          },
          {
            "type": "field",
            "name": "message",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "DOMString"
            },
            "default": {
              "type": "string",
              "value": ""
            },
            "required": false
          }
        ],
        "extAttrs": [],
        "partial": false
      },
      "PresentationReceiver": {
        "fragment": "[SecureContext, Exposed=Window]\ninterface PresentationReceiver {\n  readonly attribute Promise<PresentationConnectionList> connectionList;\n};",
        "type": "interface",
        "name": "PresentationReceiver",
        "inheritance": null,
        "members": [
          {
            "type": "attribute",
            "name": "connectionList",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "Promise",
              "nullable": false,
              "union": false,
              "idlType": [
                {
                  "type": "attribute-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "PresentationConnectionList"
                }
              ]
            },
            "extAttrs": [],
            "special": "",
            "readonly": true
          }
        ],
        "extAttrs": [
          {
            "type": "extended-attribute",
            "name": "SecureContext",
            "rhs": null,
            "arguments": []
          },
          {
            "type": "extended-attribute",
            "name": "Exposed",
            "rhs": {
              "type": "identifier",
              "value": "Window"
            },
            "arguments": []
          }
        ],
        "partial": false,
        "deprecated": false,
        "experimental": true,
        "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  interface of the Presentation API provides a means for a receiving browsing context to access controlling browsing contexts and communicate with them.",
        "mdn": "/en-US/docs/Web/API/PresentationReceiver"
      },
      "PresentationConnectionList": {
        "fragment": "[SecureContext, Exposed=Window]\ninterface PresentationConnectionList : EventTarget {\n  readonly attribute FrozenArray<PresentationConnection> connections;\n  attribute EventHandler onconnectionavailable;\n};",
        "type": "interface",
        "name": "PresentationConnectionList",
        "inheritance": "EventTarget",
        "members": [
          {
            "type": "attribute",
            "name": "connections",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "FrozenArray",
              "nullable": false,
              "union": false,
              "idlType": [
                {
                  "type": "attribute-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "PresentationConnection"
                }
              ]
            },
            "extAttrs": [],
            "special": "",
            "readonly": true
          },
          {
            "type": "attribute",
            "name": "onconnectionavailable",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "EventHandler"
            },
            "extAttrs": [],
            "special": "",
            "readonly": false
          }
        ],
        "extAttrs": [
          {
            "type": "extended-attribute",
            "name": "SecureContext",
            "rhs": null,
            "arguments": []
          },
          {
            "type": "extended-attribute",
            "name": "Exposed",
            "rhs": {
              "type": "identifier",
              "value": "Window"
            },
            "arguments": []
          }
        ],
        "partial": false,
        "deprecated": false,
        "experimental": true,
        "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\n is the collection of incoming presentation connections.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      PresentationConnectionList\n    \n  ",
        "mdn": "/en-US/docs/Web/API/PresentationConnectionList"
      }
    },
    "idlExtendedNames": {
      "Navigator": [
        {
          "fragment": "partial interface Navigator {\n  [SecureContext, SameObject] readonly attribute Presentation presentation;\n};",
          "type": "interface",
          "name": "Navigator",
          "inheritance": null,
          "members": [
            {
              "type": "attribute",
              "name": "presentation",
              "idlType": {
                "type": "attribute-type",
                "extAttrs": [],
                "generic": "",
                "nullable": false,
                "union": false,
                "idlType": "Presentation"
              },
              "extAttrs": [
                {
                  "type": "extended-attribute",
                  "name": "SecureContext",
                  "rhs": null,
                  "arguments": []
                },
                {
                  "type": "extended-attribute",
                  "name": "SameObject",
                  "rhs": null,
                  "arguments": []
                }
              ],
              "special": "",
              "readonly": true
            }
          ],
          "extAttrs": [],
          "partial": true
        }
      ],
      "Presentation": [
        {
          "fragment": "partial interface Presentation {\n  attribute PresentationRequest? defaultRequest;\n};",
          "type": "interface",
          "name": "Presentation",
          "inheritance": null,
          "members": [
            {
              "type": "attribute",
              "name": "defaultRequest",
              "idlType": {
                "type": "attribute-type",
                "extAttrs": [],
                "generic": "",
                "nullable": true,
                "union": false,
                "idlType": "PresentationRequest"
              },
              "extAttrs": [],
              "special": "",
              "readonly": false
            }
          ],
          "extAttrs": [],
          "partial": true
        },
        {
          "fragment": "partial interface Presentation {\n  readonly attribute PresentationReceiver? receiver;\n};",
          "type": "interface",
          "name": "Presentation",
          "inheritance": null,
          "members": [
            {
              "type": "attribute",
              "name": "receiver",
              "idlType": {
                "type": "attribute-type",
                "extAttrs": [],
                "generic": "",
                "nullable": true,
                "union": false,
                "idlType": "PresentationReceiver"
              },
              "extAttrs": [],
              "special": "",
              "readonly": true
            }
          ],
          "extAttrs": [],
          "partial": true
        }
      ]
    },
    "globals": {},
    "exposed": {
      "Window": [
        "Presentation",
        "PresentationRequest",
        "PresentationAvailability",
        "PresentationConnectionAvailableEvent",
        "PresentationConnection",
        "PresentationConnectionCloseEvent",
        "PresentationReceiver",
        "PresentationConnectionList"
      ]
    },
    "dependencies": {
      "Navigator": [
        "Presentation"
      ],
      "Presentation": [
        "PresentationRequest",
        "PresentationReceiver"
      ],
      "PresentationRequest": [
        "EventTarget",
        "PresentationConnection",
        "PresentationAvailability",
        "EventHandler"
      ],
      "PresentationAvailability": [
        "EventTarget",
        "EventHandler"
      ],
      "PresentationConnectionAvailableEvent": [
        "Event",
        "PresentationConnectionAvailableEventInit",
        "PresentationConnection"
      ],
      "PresentationConnectionAvailableEventInit": [
        "EventInit",
        "PresentationConnection"
      ],
      "PresentationConnection": [
        "EventTarget",
        "PresentationConnectionState",
        "EventHandler",
        "BinaryType",
        "Blob",
        "ArrayBuffer",
        "ArrayBufferView"
      ],
      "PresentationConnectionCloseEvent": [
        "Event",
        "PresentationConnectionCloseEventInit",
        "PresentationConnectionCloseReason"
      ],
      "PresentationConnectionCloseEventInit": [
        "EventInit",
        "PresentationConnectionCloseReason"
      ],
      "PresentationReceiver": [
        "PresentationConnectionList"
      ],
      "PresentationConnectionList": [
        "EventTarget",
        "PresentationConnection",
        "EventHandler"
      ]
    },
    "externalDependencies": [
      "Navigator",
      "EventTarget",
      "EventHandler",
      "Event",
      "EventInit",
      "BinaryType",
      "Blob",
      "ArrayBuffer",
      "ArrayBufferView"
    ],
    "hasObsoleteIdl": false
  },
  "path": "./../webIDL/merged/presentation-api.json",
  "basename": "presentation-api.json",
  "name": "presentation-api",
  "libraryName": "presentation_api"
}