{
  "spec": {
    "title": "Cookie Store API",
    "url": "https://wicg.github.io/cookie-store/"
  },
  "idlparsed": {
    "jsNames": {
      "constructors": {
        "Window": [
          "CookieChangeEvent"
        ],
        "ServiceWorker": [
          "ExtendableCookieChangeEvent"
        ]
      },
      "functions": {
        "ServiceWorker": [
          "CookieStore",
          "CookieStoreManager",
          "ServiceWorkerRegistration"
        ],
        "Window": [
          "CookieStore",
          "CookieStoreManager",
          "ServiceWorkerRegistration"
        ]
      }
    },
    "idlNames": {
      "CookieStore": {
        "fragment": "[Exposed=(ServiceWorker,Window),\n SecureContext]\ninterface CookieStore : EventTarget {\n  Promise<CookieListItem?> get(USVString name);\n  Promise<CookieListItem?> get(optional CookieStoreGetOptions options = {});\n\n  Promise<CookieList> getAll(USVString name);\n  Promise<CookieList> getAll(optional CookieStoreGetOptions options = {});\n\n  Promise<undefined> set(USVString name, USVString value);\n  Promise<undefined> set(CookieInit options);\n\n  Promise<undefined> delete(USVString name);\n  Promise<undefined> delete(CookieStoreDeleteOptions options);\n\n  [Exposed=Window]\n  attribute EventHandler onchange;\n};",
        "type": "interface",
        "name": "CookieStore",
        "inheritance": "EventTarget",
        "members": [
          {
            "type": "operation",
            "name": "get",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "Promise",
              "nullable": false,
              "union": false,
              "idlType": [
                {
                  "type": "return-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": true,
                  "union": false,
                  "idlType": "CookieListItem"
                }
              ]
            },
            "arguments": [
              {
                "type": "argument",
                "name": "name",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "USVString"
                },
                "default": null,
                "optional": false,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": ""
          },
          {
            "type": "operation",
            "name": "get",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "Promise",
              "nullable": false,
              "union": false,
              "idlType": [
                {
                  "type": "return-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": true,
                  "union": false,
                  "idlType": "CookieListItem"
                }
              ]
            },
            "arguments": [
              {
                "type": "argument",
                "name": "options",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "CookieStoreGetOptions"
                },
                "default": {
                  "type": "dictionary"
                },
                "optional": true,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": ""
          },
          {
            "type": "operation",
            "name": "getAll",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "Promise",
              "nullable": false,
              "union": false,
              "idlType": [
                {
                  "type": "return-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "CookieList"
                }
              ]
            },
            "arguments": [
              {
                "type": "argument",
                "name": "name",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "USVString"
                },
                "default": null,
                "optional": false,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": ""
          },
          {
            "type": "operation",
            "name": "getAll",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "Promise",
              "nullable": false,
              "union": false,
              "idlType": [
                {
                  "type": "return-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "CookieList"
                }
              ]
            },
            "arguments": [
              {
                "type": "argument",
                "name": "options",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "CookieStoreGetOptions"
                },
                "default": {
                  "type": "dictionary"
                },
                "optional": true,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": ""
          },
          {
            "type": "operation",
            "name": "set",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "Promise",
              "nullable": false,
              "union": false,
              "idlType": [
                {
                  "type": "return-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "undefined"
                }
              ]
            },
            "arguments": [
              {
                "type": "argument",
                "name": "name",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "USVString"
                },
                "default": null,
                "optional": false,
                "variadic": false
              },
              {
                "type": "argument",
                "name": "value",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "USVString"
                },
                "default": null,
                "optional": false,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": ""
          },
          {
            "type": "operation",
            "name": "set",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "Promise",
              "nullable": false,
              "union": false,
              "idlType": [
                {
                  "type": "return-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "undefined"
                }
              ]
            },
            "arguments": [
              {
                "type": "argument",
                "name": "options",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "CookieInit"
                },
                "default": null,
                "optional": false,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": ""
          },
          {
            "type": "operation",
            "name": "delete",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "Promise",
              "nullable": false,
              "union": false,
              "idlType": [
                {
                  "type": "return-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "undefined"
                }
              ]
            },
            "arguments": [
              {
                "type": "argument",
                "name": "name",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "USVString"
                },
                "default": null,
                "optional": false,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": ""
          },
          {
            "type": "operation",
            "name": "delete",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "Promise",
              "nullable": false,
              "union": false,
              "idlType": [
                {
                  "type": "return-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "undefined"
                }
              ]
            },
            "arguments": [
              {
                "type": "argument",
                "name": "options",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "CookieStoreDeleteOptions"
                },
                "default": null,
                "optional": false,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": ""
          },
          {
            "type": "attribute",
            "name": "onchange",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "EventHandler"
            },
            "extAttrs": [
              {
                "type": "extended-attribute",
                "name": "Exposed",
                "rhs": {
                  "type": "identifier",
                  "value": "Window"
                },
                "arguments": []
              }
            ],
            "special": "",
            "readonly": false
          }
        ],
        "extAttrs": [
          {
            "type": "extended-attribute",
            "name": "Exposed",
            "rhs": {
              "type": "identifier-list",
              "value": [
                {
                  "value": "ServiceWorker"
                },
                {
                  "value": "Window"
                }
              ]
            },
            "arguments": []
          },
          {
            "type": "extended-attribute",
            "name": "SecureContext",
            "rhs": null,
            "arguments": []
          }
        ],
        "partial": false,
        "deprecated": false,
        "experimental": false,
        "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  interface of the [Cookie Store API] provides methods for getting and setting cookies asynchronously from either a page or a service worker.\nThe  is accessed via attributes in the global scope in a [Window] or [ServiceWorkerGlobalScope] context. Therefore there is no constructor.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      CookieStore\n    \n  ",
        "mdn": "/en-US/docs/Web/API/CookieStore"
      },
      "CookieStoreGetOptions": {
        "fragment": "dictionary CookieStoreGetOptions {\n  USVString name;\n  USVString url;\n};",
        "type": "dictionary",
        "name": "CookieStoreGetOptions",
        "inheritance": null,
        "members": [
          {
            "type": "field",
            "name": "name",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "USVString"
            },
            "default": null,
            "required": false
          },
          {
            "type": "field",
            "name": "url",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "USVString"
            },
            "default": null,
            "required": false
          }
        ],
        "extAttrs": [],
        "partial": false
      },
      "CookieSameSite": {
        "fragment": "enum CookieSameSite {\n  \"strict\",\n  \"lax\",\n  \"none\"\n};",
        "type": "enum",
        "name": "CookieSameSite",
        "values": [
          {
            "type": "enum-value",
            "value": "strict"
          },
          {
            "type": "enum-value",
            "value": "lax"
          },
          {
            "type": "enum-value",
            "value": "none"
          }
        ],
        "extAttrs": []
      },
      "CookieInit": {
        "fragment": "dictionary CookieInit {\n  required USVString name;\n  required USVString value;\n  EpochTimeStamp? expires = null;\n  USVString? domain = null;\n  USVString path = \"/\";\n  CookieSameSite sameSite = \"strict\";\n};",
        "type": "dictionary",
        "name": "CookieInit",
        "inheritance": null,
        "members": [
          {
            "type": "field",
            "name": "name",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "USVString"
            },
            "default": null,
            "required": true
          },
          {
            "type": "field",
            "name": "value",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "USVString"
            },
            "default": null,
            "required": true
          },
          {
            "type": "field",
            "name": "expires",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": true,
              "union": false,
              "idlType": "EpochTimeStamp"
            },
            "default": {
              "type": "null"
            },
            "required": false
          },
          {
            "type": "field",
            "name": "domain",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": true,
              "union": false,
              "idlType": "USVString"
            },
            "default": {
              "type": "null"
            },
            "required": false
          },
          {
            "type": "field",
            "name": "path",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "USVString"
            },
            "default": {
              "type": "string",
              "value": "/"
            },
            "required": false
          },
          {
            "type": "field",
            "name": "sameSite",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "CookieSameSite"
            },
            "default": {
              "type": "string",
              "value": "strict"
            },
            "required": false
          }
        ],
        "extAttrs": [],
        "partial": false
      },
      "CookieStoreDeleteOptions": {
        "fragment": "dictionary CookieStoreDeleteOptions {\n  required USVString name;\n  USVString? domain = null;\n  USVString path = \"/\";\n};",
        "type": "dictionary",
        "name": "CookieStoreDeleteOptions",
        "inheritance": null,
        "members": [
          {
            "type": "field",
            "name": "name",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "USVString"
            },
            "default": null,
            "required": true
          },
          {
            "type": "field",
            "name": "domain",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": true,
              "union": false,
              "idlType": "USVString"
            },
            "default": {
              "type": "null"
            },
            "required": false
          },
          {
            "type": "field",
            "name": "path",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "USVString"
            },
            "default": {
              "type": "string",
              "value": "/"
            },
            "required": false
          }
        ],
        "extAttrs": [],
        "partial": false
      },
      "CookieListItem": {
        "fragment": "dictionary CookieListItem {\n  USVString name;\n  USVString value;\n  USVString? domain;\n  USVString path;\n  EpochTimeStamp? expires;\n  boolean secure;\n  CookieSameSite sameSite;\n};",
        "type": "dictionary",
        "name": "CookieListItem",
        "inheritance": null,
        "members": [
          {
            "type": "field",
            "name": "name",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "USVString"
            },
            "default": null,
            "required": false
          },
          {
            "type": "field",
            "name": "value",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "USVString"
            },
            "default": null,
            "required": false
          },
          {
            "type": "field",
            "name": "domain",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": true,
              "union": false,
              "idlType": "USVString"
            },
            "default": null,
            "required": false
          },
          {
            "type": "field",
            "name": "path",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "USVString"
            },
            "default": null,
            "required": false
          },
          {
            "type": "field",
            "name": "expires",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": true,
              "union": false,
              "idlType": "EpochTimeStamp"
            },
            "default": null,
            "required": false
          },
          {
            "type": "field",
            "name": "secure",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "boolean"
            },
            "default": null,
            "required": false
          },
          {
            "type": "field",
            "name": "sameSite",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "CookieSameSite"
            },
            "default": null,
            "required": false
          }
        ],
        "extAttrs": [],
        "partial": false
      },
      "CookieList": {
        "fragment": "typedef sequence<CookieListItem> CookieList;",
        "type": "typedef",
        "name": "CookieList",
        "idlType": {
          "type": "typedef-type",
          "extAttrs": [],
          "generic": "sequence",
          "nullable": false,
          "union": false,
          "idlType": [
            {
              "type": "typedef-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "CookieListItem"
            }
          ]
        },
        "extAttrs": []
      },
      "CookieStoreManager": {
        "fragment": "[Exposed=(ServiceWorker,Window),\n SecureContext]\ninterface CookieStoreManager {\n  Promise<undefined> subscribe(sequence<CookieStoreGetOptions> subscriptions);\n  Promise<sequence<CookieStoreGetOptions>> getSubscriptions();\n  Promise<undefined> unsubscribe(sequence<CookieStoreGetOptions> subscriptions);\n};",
        "type": "interface",
        "name": "CookieStoreManager",
        "inheritance": null,
        "members": [
          {
            "type": "operation",
            "name": "subscribe",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "Promise",
              "nullable": false,
              "union": false,
              "idlType": [
                {
                  "type": "return-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "undefined"
                }
              ]
            },
            "arguments": [
              {
                "type": "argument",
                "name": "subscriptions",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "sequence",
                  "nullable": false,
                  "union": false,
                  "idlType": [
                    {
                      "type": "argument-type",
                      "extAttrs": [],
                      "generic": "",
                      "nullable": false,
                      "union": false,
                      "idlType": "CookieStoreGetOptions"
                    }
                  ]
                },
                "default": null,
                "optional": false,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": ""
          },
          {
            "type": "operation",
            "name": "getSubscriptions",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "Promise",
              "nullable": false,
              "union": false,
              "idlType": [
                {
                  "type": "return-type",
                  "extAttrs": [],
                  "generic": "sequence",
                  "nullable": false,
                  "union": false,
                  "idlType": [
                    {
                      "type": "return-type",
                      "extAttrs": [],
                      "generic": "",
                      "nullable": false,
                      "union": false,
                      "idlType": "CookieStoreGetOptions"
                    }
                  ]
                }
              ]
            },
            "arguments": [],
            "extAttrs": [],
            "special": ""
          },
          {
            "type": "operation",
            "name": "unsubscribe",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "Promise",
              "nullable": false,
              "union": false,
              "idlType": [
                {
                  "type": "return-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "undefined"
                }
              ]
            },
            "arguments": [
              {
                "type": "argument",
                "name": "subscriptions",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "sequence",
                  "nullable": false,
                  "union": false,
                  "idlType": [
                    {
                      "type": "argument-type",
                      "extAttrs": [],
                      "generic": "",
                      "nullable": false,
                      "union": false,
                      "idlType": "CookieStoreGetOptions"
                    }
                  ]
                },
                "default": null,
                "optional": false,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": ""
          }
        ],
        "extAttrs": [
          {
            "type": "extended-attribute",
            "name": "Exposed",
            "rhs": {
              "type": "identifier-list",
              "value": [
                {
                  "value": "ServiceWorker"
                },
                {
                  "value": "Window"
                }
              ]
            },
            "arguments": []
          },
          {
            "type": "extended-attribute",
            "name": "SecureContext",
            "rhs": null,
            "arguments": []
          }
        ],
        "partial": false,
        "deprecated": false,
        "experimental": false,
        "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  interface of the [Cookie Store] API allows service workers to subscribe to events for cookie changes. By using the [subscribe()] method a particular service worker registration can indicate that it is interested in change events.\nA  has an associated [ServiceWorkerRegistration]. Each service worker registration has a cookie change subscription list, which is a list of cookie change subscriptions each containing a name and url. The methods in this interface allow the service worker to add and remove subscriptions from this list, and to get a list of all subscriptions.\nTo get a , call [ServiceWorkerRegistration.cookies].",
        "mdn": "/en-US/docs/Web/API/CookieStoreManager"
      },
      "CookieChangeEvent": {
        "fragment": "[Exposed=Window,\n SecureContext]\ninterface CookieChangeEvent : Event {\n  constructor(DOMString type, optional CookieChangeEventInit eventInitDict = {});\n  [SameObject] readonly attribute FrozenArray<CookieListItem> changed;\n  [SameObject] readonly attribute FrozenArray<CookieListItem> deleted;\n};",
        "type": "interface",
        "name": "CookieChangeEvent",
        "inheritance": "Event",
        "members": [
          {
            "type": "constructor",
            "arguments": [
              {
                "type": "argument",
                "name": "type",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "DOMString"
                },
                "default": null,
                "optional": false,
                "variadic": false
              },
              {
                "type": "argument",
                "name": "eventInitDict",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "CookieChangeEventInit"
                },
                "default": {
                  "type": "dictionary"
                },
                "optional": true,
                "variadic": false
              }
            ],
            "extAttrs": []
          },
          {
            "type": "attribute",
            "name": "changed",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "FrozenArray",
              "nullable": false,
              "union": false,
              "idlType": [
                {
                  "type": "attribute-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "CookieListItem"
                }
              ]
            },
            "extAttrs": [
              {
                "type": "extended-attribute",
                "name": "SameObject",
                "rhs": null,
                "arguments": []
              }
            ],
            "special": "",
            "readonly": true
          },
          {
            "type": "attribute",
            "name": "deleted",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "FrozenArray",
              "nullable": false,
              "union": false,
              "idlType": [
                {
                  "type": "attribute-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "CookieListItem"
                }
              ]
            },
            "extAttrs": [
              {
                "type": "extended-attribute",
                "name": "SameObject",
                "rhs": null,
                "arguments": []
              }
            ],
            "special": "",
            "readonly": true
          }
        ],
        "extAttrs": [
          {
            "type": "extended-attribute",
            "name": "Exposed",
            "rhs": {
              "type": "identifier",
              "value": "Window"
            },
            "arguments": []
          },
          {
            "type": "extended-attribute",
            "name": "SecureContext",
            "rhs": null,
            "arguments": []
          }
        ],
        "partial": false,
        "deprecated": false,
        "experimental": false,
        "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  interface of the [Cookie Store API] is the event type passed to [CookieStore.onchange()] when any cookie changes have occurred. A cookie change consists of a cookie and a type (either \"changed\" or \"deleted\").\nCookie changes that will cause the  to be dispatched are:\n\n  A cookie is newly created and not immediately removed. In this case [type] is \"changed\".\n  A cookie is newly created and immediately removed. In this case [type] is \"deleted\"\n  A cookie is removed. In this case [type] is \"deleted\".\n\n\n  Note: A cookie that is replaced due to the insertion of another cookie with the same name, domain, and path, is ignored and does not trigger a change event.\n\n  \n    \n    \n      Event\n    \n  \n  \n    \n    \n      CookieChangeEvent\n    \n  ",
        "mdn": "/en-US/docs/Web/API/CookieChangeEvent"
      },
      "CookieChangeEventInit": {
        "fragment": "dictionary CookieChangeEventInit : EventInit {\n  CookieList changed;\n  CookieList deleted;\n};",
        "type": "dictionary",
        "name": "CookieChangeEventInit",
        "inheritance": "EventInit",
        "members": [
          {
            "type": "field",
            "name": "changed",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "CookieList"
            },
            "default": null,
            "required": false
          },
          {
            "type": "field",
            "name": "deleted",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "CookieList"
            },
            "default": null,
            "required": false
          }
        ],
        "extAttrs": [],
        "partial": false
      },
      "ExtendableCookieChangeEvent": {
        "fragment": "[Exposed=ServiceWorker]\ninterface ExtendableCookieChangeEvent : ExtendableEvent {\n  constructor(DOMString type, optional ExtendableCookieChangeEventInit eventInitDict = {});\n  [SameObject] readonly attribute FrozenArray<CookieListItem> changed;\n  [SameObject] readonly attribute FrozenArray<CookieListItem> deleted;\n};",
        "type": "interface",
        "name": "ExtendableCookieChangeEvent",
        "inheritance": "ExtendableEvent",
        "members": [
          {
            "type": "constructor",
            "arguments": [
              {
                "type": "argument",
                "name": "type",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "DOMString"
                },
                "default": null,
                "optional": false,
                "variadic": false
              },
              {
                "type": "argument",
                "name": "eventInitDict",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "ExtendableCookieChangeEventInit"
                },
                "default": {
                  "type": "dictionary"
                },
                "optional": true,
                "variadic": false
              }
            ],
            "extAttrs": []
          },
          {
            "type": "attribute",
            "name": "changed",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "FrozenArray",
              "nullable": false,
              "union": false,
              "idlType": [
                {
                  "type": "attribute-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "CookieListItem"
                }
              ]
            },
            "extAttrs": [
              {
                "type": "extended-attribute",
                "name": "SameObject",
                "rhs": null,
                "arguments": []
              }
            ],
            "special": "",
            "readonly": true
          },
          {
            "type": "attribute",
            "name": "deleted",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "FrozenArray",
              "nullable": false,
              "union": false,
              "idlType": [
                {
                  "type": "attribute-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "CookieListItem"
                }
              ]
            },
            "extAttrs": [
              {
                "type": "extended-attribute",
                "name": "SameObject",
                "rhs": null,
                "arguments": []
              }
            ],
            "special": "",
            "readonly": true
          }
        ],
        "extAttrs": [
          {
            "type": "extended-attribute",
            "name": "Exposed",
            "rhs": {
              "type": "identifier",
              "value": "ServiceWorker"
            },
            "arguments": []
          }
        ],
        "partial": false,
        "deprecated": false,
        "experimental": false,
        "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  interface of the [Cookie Store API] is the event type passed to [ServiceWorkerRegistration.oncookiechange()] when any cookie changes have occurred. A cookie change event consists of a cookie and a type (either \"changed\" or \"deleted\".)\nCookie changes that cause the  to be dispatched are:\n\n  A cookie is newly created and not immediately removed. In this case [type] is \"changed\".\n  A cookie is newly created and immediately removed. In this case [type] is \"deleted\"\n  A cookie is removed. In this case [type] is \"deleted\".\n\n\n  Note: A cookie that is replaced due to the insertion of another cookie with the same name, domain, and path, is ignored and does not trigger a change event.\n\n  \n    \n    \n      Event\n    \n  \n  \n    \n    \n      ExtendableEvent\n    \n  \n  \n    \n    \n      ExtendableCookieChangeEvent\n    \n  ",
        "mdn": "/en-US/docs/Web/API/ExtendableCookieChangeEvent"
      },
      "ExtendableCookieChangeEventInit": {
        "fragment": "dictionary ExtendableCookieChangeEventInit : ExtendableEventInit {\n  CookieList changed;\n  CookieList deleted;\n};",
        "type": "dictionary",
        "name": "ExtendableCookieChangeEventInit",
        "inheritance": "ExtendableEventInit",
        "members": [
          {
            "type": "field",
            "name": "changed",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "CookieList"
            },
            "default": null,
            "required": false
          },
          {
            "type": "field",
            "name": "deleted",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "CookieList"
            },
            "default": null,
            "required": false
          }
        ],
        "extAttrs": [],
        "partial": false
      }
    },
    "idlExtendedNames": {
      "ServiceWorkerRegistration": [
        {
          "fragment": "[Exposed=(ServiceWorker,Window)]\npartial interface ServiceWorkerRegistration {\n  [SameObject] readonly attribute CookieStoreManager cookies;\n};",
          "type": "interface",
          "name": "ServiceWorkerRegistration",
          "inheritance": null,
          "members": [
            {
              "type": "attribute",
              "name": "cookies",
              "idlType": {
                "type": "attribute-type",
                "extAttrs": [],
                "generic": "",
                "nullable": false,
                "union": false,
                "idlType": "CookieStoreManager"
              },
              "extAttrs": [
                {
                  "type": "extended-attribute",
                  "name": "SameObject",
                  "rhs": null,
                  "arguments": []
                }
              ],
              "special": "",
              "readonly": true
            }
          ],
          "extAttrs": [
            {
              "type": "extended-attribute",
              "name": "Exposed",
              "rhs": {
                "type": "identifier-list",
                "value": [
                  {
                    "value": "ServiceWorker"
                  },
                  {
                    "value": "Window"
                  }
                ]
              },
              "arguments": []
            }
          ],
          "partial": true
        }
      ],
      "Window": [
        {
          "fragment": "[SecureContext]\npartial interface Window {\n  [SameObject] readonly attribute CookieStore cookieStore;\n};",
          "type": "interface",
          "name": "Window",
          "inheritance": null,
          "members": [
            {
              "type": "attribute",
              "name": "cookieStore",
              "idlType": {
                "type": "attribute-type",
                "extAttrs": [],
                "generic": "",
                "nullable": false,
                "union": false,
                "idlType": "CookieStore"
              },
              "extAttrs": [
                {
                  "type": "extended-attribute",
                  "name": "SameObject",
                  "rhs": null,
                  "arguments": []
                }
              ],
              "special": "",
              "readonly": true
            }
          ],
          "extAttrs": [
            {
              "type": "extended-attribute",
              "name": "SecureContext",
              "rhs": null,
              "arguments": []
            }
          ],
          "partial": true
        }
      ],
      "ServiceWorkerGlobalScope": [
        {
          "fragment": "partial interface ServiceWorkerGlobalScope {\n  [SameObject] readonly attribute CookieStore cookieStore;\n\n  attribute EventHandler oncookiechange;\n};",
          "type": "interface",
          "name": "ServiceWorkerGlobalScope",
          "inheritance": null,
          "members": [
            {
              "type": "attribute",
              "name": "cookieStore",
              "idlType": {
                "type": "attribute-type",
                "extAttrs": [],
                "generic": "",
                "nullable": false,
                "union": false,
                "idlType": "CookieStore"
              },
              "extAttrs": [
                {
                  "type": "extended-attribute",
                  "name": "SameObject",
                  "rhs": null,
                  "arguments": []
                }
              ],
              "special": "",
              "readonly": true
            },
            {
              "type": "attribute",
              "name": "oncookiechange",
              "idlType": {
                "type": "attribute-type",
                "extAttrs": [],
                "generic": "",
                "nullable": false,
                "union": false,
                "idlType": "EventHandler"
              },
              "extAttrs": [],
              "special": "",
              "readonly": false
            }
          ],
          "extAttrs": [],
          "partial": true
        }
      ]
    },
    "globals": {},
    "exposed": {
      "ServiceWorker": [
        "CookieStore",
        "CookieStoreManager",
        "ServiceWorkerRegistration",
        "ExtendableCookieChangeEvent"
      ],
      "Window": [
        "CookieStore",
        "CookieStoreManager",
        "ServiceWorkerRegistration",
        "CookieChangeEvent"
      ]
    },
    "dependencies": {
      "CookieStore": [
        "EventTarget",
        "CookieListItem",
        "CookieStoreGetOptions",
        "CookieList",
        "CookieInit",
        "CookieStoreDeleteOptions",
        "EventHandler"
      ],
      "CookieStoreGetOptions": [],
      "CookieInit": [
        "EpochTimeStamp",
        "CookieSameSite"
      ],
      "CookieStoreDeleteOptions": [],
      "CookieListItem": [
        "EpochTimeStamp",
        "CookieSameSite"
      ],
      "CookieStoreManager": [
        "CookieStoreGetOptions"
      ],
      "ServiceWorkerRegistration": [
        "CookieStoreManager"
      ],
      "CookieChangeEvent": [
        "Event",
        "CookieChangeEventInit",
        "CookieListItem"
      ],
      "CookieChangeEventInit": [
        "EventInit",
        "CookieList"
      ],
      "ExtendableCookieChangeEvent": [
        "ExtendableEvent",
        "ExtendableCookieChangeEventInit",
        "CookieListItem"
      ],
      "ExtendableCookieChangeEventInit": [
        "ExtendableEventInit",
        "CookieList"
      ],
      "Window": [
        "CookieStore"
      ],
      "ServiceWorkerGlobalScope": [
        "CookieStore",
        "EventHandler"
      ]
    },
    "externalDependencies": [
      "EventTarget",
      "EventHandler",
      "EpochTimeStamp",
      "ServiceWorkerRegistration",
      "Event",
      "EventInit",
      "ExtendableEvent",
      "ExtendableEventInit",
      "Window",
      "ServiceWorkerGlobalScope"
    ],
    "hasObsoleteIdl": false
  },
  "path": "./../webIDL/merged/cookie-store.json",
  "basename": "cookie-store.json",
  "name": "cookie-store",
  "libraryName": "cookie_store"
}