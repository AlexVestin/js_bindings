{
  "spec": {
    "title": "Media Capture and Streams",
    "url": "https://w3c.github.io/mediacapture-main/"
  },
  "idlparsed": {
    "jsNames": {
      "constructors": {
        "Window": [
          "MediaStream",
          "MediaStreamTrackEvent",
          "OverconstrainedError"
        ]
      },
      "functions": {
        "Window": [
          "MediaStreamTrack",
          "MediaDevices",
          "MediaDeviceInfo",
          "InputDeviceInfo"
        ]
      }
    },
    "idlNames": {
      "MediaStream": {
        "fragment": "[Exposed=Window]\ninterface MediaStream : EventTarget {\n  constructor();\n  constructor(MediaStream stream);\n  constructor(sequence<MediaStreamTrack> tracks);\n  readonly attribute DOMString id;\n  sequence<MediaStreamTrack> getAudioTracks();\n  sequence<MediaStreamTrack> getVideoTracks();\n  sequence<MediaStreamTrack> getTracks();\n  MediaStreamTrack? getTrackById(DOMString trackId);\n  undefined addTrack(MediaStreamTrack track);\n  undefined removeTrack(MediaStreamTrack track);\n  MediaStream clone();\n  readonly attribute boolean active;\n  attribute EventHandler onaddtrack;\n  attribute EventHandler onremovetrack;\n};",
        "type": "interface",
        "name": "MediaStream",
        "inheritance": "EventTarget",
        "members": [
          {
            "type": "constructor",
            "arguments": [],
            "extAttrs": []
          },
          {
            "type": "constructor",
            "arguments": [
              {
                "type": "argument",
                "name": "stream",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "MediaStream"
                },
                "default": null,
                "optional": false,
                "variadic": false
              }
            ],
            "extAttrs": []
          },
          {
            "type": "constructor",
            "arguments": [
              {
                "type": "argument",
                "name": "tracks",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "sequence",
                  "nullable": false,
                  "union": false,
                  "idlType": [
                    {
                      "type": "argument-type",
                      "extAttrs": [],
                      "generic": "",
                      "nullable": false,
                      "union": false,
                      "idlType": "MediaStreamTrack"
                    }
                  ]
                },
                "default": null,
                "optional": false,
                "variadic": false
              }
            ],
            "extAttrs": []
          },
          {
            "type": "attribute",
            "name": "id",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "DOMString"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true
          },
          {
            "type": "operation",
            "name": "getAudioTracks",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "sequence",
              "nullable": false,
              "union": false,
              "idlType": [
                {
                  "type": "return-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "MediaStreamTrack"
                }
              ]
            },
            "arguments": [],
            "extAttrs": [],
            "special": ""
          },
          {
            "type": "operation",
            "name": "getVideoTracks",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "sequence",
              "nullable": false,
              "union": false,
              "idlType": [
                {
                  "type": "return-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "MediaStreamTrack"
                }
              ]
            },
            "arguments": [],
            "extAttrs": [],
            "special": ""
          },
          {
            "type": "operation",
            "name": "getTracks",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "sequence",
              "nullable": false,
              "union": false,
              "idlType": [
                {
                  "type": "return-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "MediaStreamTrack"
                }
              ]
            },
            "arguments": [],
            "extAttrs": [],
            "special": ""
          },
          {
            "type": "operation",
            "name": "getTrackById",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": true,
              "union": false,
              "idlType": "MediaStreamTrack"
            },
            "arguments": [
              {
                "type": "argument",
                "name": "trackId",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "DOMString"
                },
                "default": null,
                "optional": false,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": ""
          },
          {
            "type": "operation",
            "name": "addTrack",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "undefined"
            },
            "arguments": [
              {
                "type": "argument",
                "name": "track",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "MediaStreamTrack"
                },
                "default": null,
                "optional": false,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": ""
          },
          {
            "type": "operation",
            "name": "removeTrack",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "undefined"
            },
            "arguments": [
              {
                "type": "argument",
                "name": "track",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "MediaStreamTrack"
                },
                "default": null,
                "optional": false,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": ""
          },
          {
            "type": "operation",
            "name": "clone",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "MediaStream"
            },
            "arguments": [],
            "extAttrs": [],
            "special": ""
          },
          {
            "type": "attribute",
            "name": "active",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "boolean"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true
          },
          {
            "type": "attribute",
            "name": "onaddtrack",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "EventHandler"
            },
            "extAttrs": [],
            "special": "",
            "readonly": false
          },
          {
            "type": "attribute",
            "name": "onremovetrack",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "EventHandler"
            },
            "extAttrs": [],
            "special": "",
            "readonly": false
          }
        ],
        "extAttrs": [
          {
            "type": "extended-attribute",
            "name": "Exposed",
            "rhs": {
              "type": "identifier",
              "value": "Window"
            },
            "arguments": []
          }
        ],
        "partial": false,
        "deprecated": false,
        "experimental": false,
        "desc": "The  interface represents a stream of media content. A stream consists of several tracks, such as video or audio tracks. Each track is specified as an instance of [MediaStreamTrack].\nYou can obtain a  object either by using the constructor or by calling functions such as [MediaDevices.getUserMedia()], [MediaDevices.getDisplayMedia()], or [HTMLCanvasElement.captureStream()].\nSome user agents subclass this interface to provide more precise information or functionality, like in [CanvasCaptureMediaStreamTrack].\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      MediaStream\n    \n  ",
        "mdn": "/en-US/docs/Web/API/MediaStream"
      },
      "MediaStreamTrack": {
        "fragment": "[Exposed=Window]\ninterface MediaStreamTrack : EventTarget {\n  readonly attribute DOMString kind;\n  readonly attribute DOMString id;\n  readonly attribute DOMString label;\n  attribute boolean enabled;\n  readonly attribute boolean muted;\n  attribute EventHandler onmute;\n  attribute EventHandler onunmute;\n  readonly attribute MediaStreamTrackState readyState;\n  attribute EventHandler onended;\n  MediaStreamTrack clone();\n  undefined stop();\n  MediaTrackCapabilities getCapabilities();\n  MediaTrackConstraints getConstraints();\n  MediaTrackSettings getSettings();\n  Promise<undefined> applyConstraints(optional MediaTrackConstraints constraints = {});\n};",
        "type": "interface",
        "name": "MediaStreamTrack",
        "inheritance": "EventTarget",
        "members": [
          {
            "type": "attribute",
            "name": "kind",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "DOMString"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true
          },
          {
            "type": "attribute",
            "name": "id",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "DOMString"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true
          },
          {
            "type": "attribute",
            "name": "label",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "DOMString"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true
          },
          {
            "type": "attribute",
            "name": "enabled",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "boolean"
            },
            "extAttrs": [],
            "special": "",
            "readonly": false
          },
          {
            "type": "attribute",
            "name": "muted",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "boolean"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true
          },
          {
            "type": "attribute",
            "name": "onmute",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "EventHandler"
            },
            "extAttrs": [],
            "special": "",
            "readonly": false
          },
          {
            "type": "attribute",
            "name": "onunmute",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "EventHandler"
            },
            "extAttrs": [],
            "special": "",
            "readonly": false
          },
          {
            "type": "attribute",
            "name": "readyState",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "MediaStreamTrackState"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true
          },
          {
            "type": "attribute",
            "name": "onended",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "EventHandler"
            },
            "extAttrs": [],
            "special": "",
            "readonly": false
          },
          {
            "type": "operation",
            "name": "clone",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "MediaStreamTrack"
            },
            "arguments": [],
            "extAttrs": [],
            "special": ""
          },
          {
            "type": "operation",
            "name": "stop",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "undefined"
            },
            "arguments": [],
            "extAttrs": [],
            "special": ""
          },
          {
            "type": "operation",
            "name": "getCapabilities",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "MediaTrackCapabilities"
            },
            "arguments": [],
            "extAttrs": [],
            "special": ""
          },
          {
            "type": "operation",
            "name": "getConstraints",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "MediaTrackConstraints"
            },
            "arguments": [],
            "extAttrs": [],
            "special": ""
          },
          {
            "type": "operation",
            "name": "getSettings",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "MediaTrackSettings"
            },
            "arguments": [],
            "extAttrs": [],
            "special": ""
          },
          {
            "type": "operation",
            "name": "applyConstraints",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "Promise",
              "nullable": false,
              "union": false,
              "idlType": [
                {
                  "type": "return-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "undefined"
                }
              ]
            },
            "arguments": [
              {
                "type": "argument",
                "name": "constraints",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "MediaTrackConstraints"
                },
                "default": {
                  "type": "dictionary"
                },
                "optional": true,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": ""
          }
        ],
        "extAttrs": [
          {
            "type": "extended-attribute",
            "name": "Exposed",
            "rhs": {
              "type": "identifier",
              "value": "Window"
            },
            "arguments": []
          }
        ],
        "partial": false,
        "deprecated": false,
        "experimental": false,
        "desc": "The  interface represents a single media track within a stream; typically, these are audio or video tracks, but other track types may exist as well.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      MediaStreamTrack\n    \n  ",
        "mdn": "/en-US/docs/Web/API/MediaStreamTrack"
      },
      "MediaStreamTrackState": {
        "fragment": "enum MediaStreamTrackState {\n  \"live\",\n  \"ended\"\n};",
        "type": "enum",
        "name": "MediaStreamTrackState",
        "values": [
          {
            "type": "enum-value",
            "value": "live"
          },
          {
            "type": "enum-value",
            "value": "ended"
          }
        ],
        "extAttrs": []
      },
      "MediaTrackSupportedConstraints": {
        "fragment": "dictionary MediaTrackSupportedConstraints {\n  boolean width = true;\n  boolean height = true;\n  boolean aspectRatio = true;\n  boolean frameRate = true;\n  boolean facingMode = true;\n  boolean resizeMode = true;\n  boolean sampleRate = true;\n  boolean sampleSize = true;\n  boolean echoCancellation = true;\n  boolean autoGainControl = true;\n  boolean noiseSuppression = true;\n  boolean latency = true;\n  boolean channelCount = true;\n  boolean deviceId = true;\n  boolean groupId = true;\n};",
        "type": "dictionary",
        "name": "MediaTrackSupportedConstraints",
        "inheritance": null,
        "members": [
          {
            "type": "field",
            "name": "width",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "boolean"
            },
            "default": {
              "type": "boolean",
              "value": true
            },
            "required": false
          },
          {
            "type": "field",
            "name": "height",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "boolean"
            },
            "default": {
              "type": "boolean",
              "value": true
            },
            "required": false
          },
          {
            "type": "field",
            "name": "aspectRatio",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "boolean"
            },
            "default": {
              "type": "boolean",
              "value": true
            },
            "required": false
          },
          {
            "type": "field",
            "name": "frameRate",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "boolean"
            },
            "default": {
              "type": "boolean",
              "value": true
            },
            "required": false
          },
          {
            "type": "field",
            "name": "facingMode",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "boolean"
            },
            "default": {
              "type": "boolean",
              "value": true
            },
            "required": false
          },
          {
            "type": "field",
            "name": "resizeMode",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "boolean"
            },
            "default": {
              "type": "boolean",
              "value": true
            },
            "required": false
          },
          {
            "type": "field",
            "name": "sampleRate",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "boolean"
            },
            "default": {
              "type": "boolean",
              "value": true
            },
            "required": false
          },
          {
            "type": "field",
            "name": "sampleSize",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "boolean"
            },
            "default": {
              "type": "boolean",
              "value": true
            },
            "required": false
          },
          {
            "type": "field",
            "name": "echoCancellation",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "boolean"
            },
            "default": {
              "type": "boolean",
              "value": true
            },
            "required": false
          },
          {
            "type": "field",
            "name": "autoGainControl",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "boolean"
            },
            "default": {
              "type": "boolean",
              "value": true
            },
            "required": false
          },
          {
            "type": "field",
            "name": "noiseSuppression",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "boolean"
            },
            "default": {
              "type": "boolean",
              "value": true
            },
            "required": false
          },
          {
            "type": "field",
            "name": "latency",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "boolean"
            },
            "default": {
              "type": "boolean",
              "value": true
            },
            "required": false
          },
          {
            "type": "field",
            "name": "channelCount",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "boolean"
            },
            "default": {
              "type": "boolean",
              "value": true
            },
            "required": false
          },
          {
            "type": "field",
            "name": "deviceId",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "boolean"
            },
            "default": {
              "type": "boolean",
              "value": true
            },
            "required": false
          },
          {
            "type": "field",
            "name": "groupId",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "boolean"
            },
            "default": {
              "type": "boolean",
              "value": true
            },
            "required": false
          }
        ],
        "extAttrs": [],
        "partial": false,
        "deprecated": false,
        "experimental": false,
        "desc": "The  dictionary establishes the list of constrainable properties recognized by the user agent or browser in its implementation of the [MediaStreamTrack] object. An object conforming to  is returned by [MediaDevices.getSupportedConstraints()].\nBecause of the way interface definitions in WebIDL work, if a constraint is requested but not supported, no error will occur. Instead, the specified constraints will be applied, with any unrecognized constraints stripped from the request.That can lead to confusing and hard to debug errors, so be sure to use [getSupportedConstraints()] to retrieve this information before attempting to establish constraints if you need to know the difference between silently ignoring a constraint and a constraint being accepted.\nAn actual constraint set is described using an object based on the [MediaTrackConstraints] dictionary.\nTo learn more about how constraints work, see Capabilities, constraints, and settings.",
        "mdn": "/en-US/docs/Web/API/MediaTrackSupportedConstraints"
      },
      "MediaTrackCapabilities": {
        "fragment": "dictionary MediaTrackCapabilities {\n  ULongRange width;\n  ULongRange height;\n  DoubleRange aspectRatio;\n  DoubleRange frameRate;\n  sequence<DOMString> facingMode;\n  sequence<DOMString> resizeMode;\n  ULongRange sampleRate;\n  ULongRange sampleSize;\n  sequence<boolean> echoCancellation;\n  sequence<boolean> autoGainControl;\n  sequence<boolean> noiseSuppression;\n  DoubleRange latency;\n  ULongRange channelCount;\n  DOMString deviceId;\n  DOMString groupId;\n};",
        "type": "dictionary",
        "name": "MediaTrackCapabilities",
        "inheritance": null,
        "members": [
          {
            "type": "field",
            "name": "width",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "ULongRange"
            },
            "default": null,
            "required": false
          },
          {
            "type": "field",
            "name": "height",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "ULongRange"
            },
            "default": null,
            "required": false
          },
          {
            "type": "field",
            "name": "aspectRatio",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "DoubleRange"
            },
            "default": null,
            "required": false
          },
          {
            "type": "field",
            "name": "frameRate",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "DoubleRange"
            },
            "default": null,
            "required": false
          },
          {
            "type": "field",
            "name": "facingMode",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "sequence",
              "nullable": false,
              "union": false,
              "idlType": [
                {
                  "type": "dictionary-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "DOMString"
                }
              ]
            },
            "default": null,
            "required": false
          },
          {
            "type": "field",
            "name": "resizeMode",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "sequence",
              "nullable": false,
              "union": false,
              "idlType": [
                {
                  "type": "dictionary-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "DOMString"
                }
              ]
            },
            "default": null,
            "required": false
          },
          {
            "type": "field",
            "name": "sampleRate",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "ULongRange"
            },
            "default": null,
            "required": false
          },
          {
            "type": "field",
            "name": "sampleSize",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "ULongRange"
            },
            "default": null,
            "required": false
          },
          {
            "type": "field",
            "name": "echoCancellation",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "sequence",
              "nullable": false,
              "union": false,
              "idlType": [
                {
                  "type": "dictionary-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "boolean"
                }
              ]
            },
            "default": null,
            "required": false
          },
          {
            "type": "field",
            "name": "autoGainControl",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "sequence",
              "nullable": false,
              "union": false,
              "idlType": [
                {
                  "type": "dictionary-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "boolean"
                }
              ]
            },
            "default": null,
            "required": false
          },
          {
            "type": "field",
            "name": "noiseSuppression",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "sequence",
              "nullable": false,
              "union": false,
              "idlType": [
                {
                  "type": "dictionary-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "boolean"
                }
              ]
            },
            "default": null,
            "required": false
          },
          {
            "type": "field",
            "name": "latency",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "DoubleRange"
            },
            "default": null,
            "required": false
          },
          {
            "type": "field",
            "name": "channelCount",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "ULongRange"
            },
            "default": null,
            "required": false
          },
          {
            "type": "field",
            "name": "deviceId",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "DOMString"
            },
            "default": null,
            "required": false
          },
          {
            "type": "field",
            "name": "groupId",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "DOMString"
            },
            "default": null,
            "required": false
          }
        ],
        "extAttrs": [],
        "partial": false
      },
      "MediaTrackConstraints": {
        "fragment": "dictionary MediaTrackConstraints : MediaTrackConstraintSet {\n  sequence<MediaTrackConstraintSet> advanced;\n};",
        "type": "dictionary",
        "name": "MediaTrackConstraints",
        "inheritance": "MediaTrackConstraintSet",
        "members": [
          {
            "type": "field",
            "name": "advanced",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "sequence",
              "nullable": false,
              "union": false,
              "idlType": [
                {
                  "type": "dictionary-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "MediaTrackConstraintSet"
                }
              ]
            },
            "default": null,
            "required": false
          }
        ],
        "extAttrs": [],
        "partial": false,
        "deprecated": false,
        "experimental": false,
        "desc": "The  dictionary is used to describe a set of capabilities and the value or values each can take on. A constraints dictionary is passed into [applyConstraints()] to allow a script to establish a set of exact (required) values or ranges and/or preferred values or ranges of values for the track, and the most recently-requested set of custom constraints can be retrieved by calling [getConstraints()].",
        "mdn": "/en-US/docs/Web/API/MediaTrackConstraints"
      },
      "MediaTrackConstraintSet": {
        "fragment": "dictionary MediaTrackConstraintSet {\n  ConstrainULong width;\n  ConstrainULong height;\n  ConstrainDouble aspectRatio;\n  ConstrainDouble frameRate;\n  ConstrainDOMString facingMode;\n  ConstrainDOMString resizeMode;\n  ConstrainULong sampleRate;\n  ConstrainULong sampleSize;\n  ConstrainBoolean echoCancellation;\n  ConstrainBoolean autoGainControl;\n  ConstrainBoolean noiseSuppression;\n  ConstrainDouble latency;\n  ConstrainULong channelCount;\n  ConstrainDOMString deviceId;\n  ConstrainDOMString groupId;\n};",
        "type": "dictionary",
        "name": "MediaTrackConstraintSet",
        "inheritance": null,
        "members": [
          {
            "type": "field",
            "name": "width",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "ConstrainULong"
            },
            "default": null,
            "required": false
          },
          {
            "type": "field",
            "name": "height",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "ConstrainULong"
            },
            "default": null,
            "required": false
          },
          {
            "type": "field",
            "name": "aspectRatio",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "ConstrainDouble"
            },
            "default": null,
            "required": false
          },
          {
            "type": "field",
            "name": "frameRate",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "ConstrainDouble"
            },
            "default": null,
            "required": false
          },
          {
            "type": "field",
            "name": "facingMode",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "ConstrainDOMString"
            },
            "default": null,
            "required": false
          },
          {
            "type": "field",
            "name": "resizeMode",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "ConstrainDOMString"
            },
            "default": null,
            "required": false
          },
          {
            "type": "field",
            "name": "sampleRate",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "ConstrainULong"
            },
            "default": null,
            "required": false
          },
          {
            "type": "field",
            "name": "sampleSize",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "ConstrainULong"
            },
            "default": null,
            "required": false
          },
          {
            "type": "field",
            "name": "echoCancellation",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "ConstrainBoolean"
            },
            "default": null,
            "required": false
          },
          {
            "type": "field",
            "name": "autoGainControl",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "ConstrainBoolean"
            },
            "default": null,
            "required": false
          },
          {
            "type": "field",
            "name": "noiseSuppression",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "ConstrainBoolean"
            },
            "default": null,
            "required": false
          },
          {
            "type": "field",
            "name": "latency",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "ConstrainDouble"
            },
            "default": null,
            "required": false
          },
          {
            "type": "field",
            "name": "channelCount",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "ConstrainULong"
            },
            "default": null,
            "required": false
          },
          {
            "type": "field",
            "name": "deviceId",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "ConstrainDOMString"
            },
            "default": null,
            "required": false
          },
          {
            "type": "field",
            "name": "groupId",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "ConstrainDOMString"
            },
            "default": null,
            "required": false
          }
        ],
        "extAttrs": [],
        "partial": false
      },
      "MediaTrackSettings": {
        "fragment": "dictionary MediaTrackSettings {\n  long width;\n  long height;\n  double aspectRatio;\n  double frameRate;\n  DOMString facingMode;\n  DOMString resizeMode;\n  long sampleRate;\n  long sampleSize;\n  boolean echoCancellation;\n  boolean autoGainControl;\n  boolean noiseSuppression;\n  double latency;\n  long channelCount;\n  DOMString deviceId;\n  DOMString groupId;\n};",
        "type": "dictionary",
        "name": "MediaTrackSettings",
        "inheritance": null,
        "members": [
          {
            "type": "field",
            "name": "width",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "long"
            },
            "default": null,
            "required": false
          },
          {
            "type": "field",
            "name": "height",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "long"
            },
            "default": null,
            "required": false
          },
          {
            "type": "field",
            "name": "aspectRatio",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "double"
            },
            "default": null,
            "required": false
          },
          {
            "type": "field",
            "name": "frameRate",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "double"
            },
            "default": null,
            "required": false
          },
          {
            "type": "field",
            "name": "facingMode",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "DOMString"
            },
            "default": null,
            "required": false
          },
          {
            "type": "field",
            "name": "resizeMode",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "DOMString"
            },
            "default": null,
            "required": false
          },
          {
            "type": "field",
            "name": "sampleRate",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "long"
            },
            "default": null,
            "required": false
          },
          {
            "type": "field",
            "name": "sampleSize",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "long"
            },
            "default": null,
            "required": false
          },
          {
            "type": "field",
            "name": "echoCancellation",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "boolean"
            },
            "default": null,
            "required": false
          },
          {
            "type": "field",
            "name": "autoGainControl",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "boolean"
            },
            "default": null,
            "required": false
          },
          {
            "type": "field",
            "name": "noiseSuppression",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "boolean"
            },
            "default": null,
            "required": false
          },
          {
            "type": "field",
            "name": "latency",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "double"
            },
            "default": null,
            "required": false
          },
          {
            "type": "field",
            "name": "channelCount",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "long"
            },
            "default": null,
            "required": false
          },
          {
            "type": "field",
            "name": "deviceId",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "DOMString"
            },
            "default": null,
            "required": false
          },
          {
            "type": "field",
            "name": "groupId",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "DOMString"
            },
            "default": null,
            "required": false
          }
        ],
        "extAttrs": [],
        "partial": false,
        "deprecated": false,
        "experimental": false,
        "desc": "The  dictionary is used to return the current values configured for each of a [MediaStreamTrack]'s settings. These values will adhere as closely as possible to any constraints previously described using a [MediaTrackConstraints] object and set using [applyConstraints()], and will adhere to the default constraints for any properties whose constraints haven't been changed, or whose customized constraints couldn't be matched.\nTo learn more about how constraints and settings work, see Capabilities, constraints, and settings.",
        "mdn": "/en-US/docs/Web/API/MediaTrackSettings"
      },
      "VideoFacingModeEnum": {
        "fragment": "enum VideoFacingModeEnum {\n  \"user\",\n  \"environment\",\n  \"left\",\n  \"right\"\n};",
        "type": "enum",
        "name": "VideoFacingModeEnum",
        "values": [
          {
            "type": "enum-value",
            "value": "user"
          },
          {
            "type": "enum-value",
            "value": "environment"
          },
          {
            "type": "enum-value",
            "value": "left"
          },
          {
            "type": "enum-value",
            "value": "right"
          }
        ],
        "extAttrs": []
      },
      "VideoResizeModeEnum": {
        "fragment": "enum VideoResizeModeEnum {\n  \"none\",\n  \"crop-and-scale\"\n};",
        "type": "enum",
        "name": "VideoResizeModeEnum",
        "values": [
          {
            "type": "enum-value",
            "value": "none"
          },
          {
            "type": "enum-value",
            "value": "crop-and-scale"
          }
        ],
        "extAttrs": []
      },
      "MediaStreamTrackEvent": {
        "fragment": "[Exposed=Window]\ninterface MediaStreamTrackEvent : Event {\n  constructor(DOMString type, MediaStreamTrackEventInit eventInitDict);\n  [SameObject] readonly attribute MediaStreamTrack track;\n};",
        "type": "interface",
        "name": "MediaStreamTrackEvent",
        "inheritance": "Event",
        "members": [
          {
            "type": "constructor",
            "arguments": [
              {
                "type": "argument",
                "name": "type",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "DOMString"
                },
                "default": null,
                "optional": false,
                "variadic": false
              },
              {
                "type": "argument",
                "name": "eventInitDict",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "MediaStreamTrackEventInit"
                },
                "default": null,
                "optional": false,
                "variadic": false
              }
            ],
            "extAttrs": []
          },
          {
            "type": "attribute",
            "name": "track",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "MediaStreamTrack"
            },
            "extAttrs": [
              {
                "type": "extended-attribute",
                "name": "SameObject",
                "rhs": null,
                "arguments": []
              }
            ],
            "special": "",
            "readonly": true
          }
        ],
        "extAttrs": [
          {
            "type": "extended-attribute",
            "name": "Exposed",
            "rhs": {
              "type": "identifier",
              "value": "Window"
            },
            "arguments": []
          }
        ],
        "partial": false,
        "deprecated": false,
        "experimental": false,
        "desc": "The  interface represents events which indicate that a [MediaStream] has had tracks added to or removed from the stream through calls to Media Stream API methods. These events are sent to the stream when these changes occur.\n  \n    \n    \n      Event\n    \n  \n  \n    \n    \n      MediaStreamTrackEvent\n    \n  \nThe events based on this interface are [addtrack] and [removetrack].",
        "mdn": "/en-US/docs/Web/API/MediaStreamTrackEvent"
      },
      "MediaStreamTrackEventInit": {
        "fragment": "dictionary MediaStreamTrackEventInit : EventInit {\n  required MediaStreamTrack track;\n};",
        "type": "dictionary",
        "name": "MediaStreamTrackEventInit",
        "inheritance": "EventInit",
        "members": [
          {
            "type": "field",
            "name": "track",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "MediaStreamTrack"
            },
            "default": null,
            "required": true
          }
        ],
        "extAttrs": [],
        "partial": false
      },
      "OverconstrainedError": {
        "fragment": "[Exposed=Window]\ninterface OverconstrainedError : DOMException {\n  constructor(DOMString constraint, optional DOMString message = \"\");\n  readonly attribute DOMString constraint;\n};",
        "type": "interface",
        "name": "OverconstrainedError",
        "inheritance": "DOMException",
        "members": [
          {
            "type": "constructor",
            "arguments": [
              {
                "type": "argument",
                "name": "constraint",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "DOMString"
                },
                "default": null,
                "optional": false,
                "variadic": false
              },
              {
                "type": "argument",
                "name": "message",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "DOMString"
                },
                "default": {
                  "type": "string",
                  "value": ""
                },
                "optional": true,
                "variadic": false
              }
            ],
            "extAttrs": []
          },
          {
            "type": "attribute",
            "name": "constraint",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "DOMString"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true
          }
        ],
        "extAttrs": [
          {
            "type": "extended-attribute",
            "name": "Exposed",
            "rhs": {
              "type": "identifier",
              "value": "Window"
            },
            "arguments": []
          }
        ],
        "partial": false,
        "deprecated": false,
        "experimental": false,
        "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  interface of the Media Capture and Streams API indicates that the set of desired capabilities for the current [MediaStreamTrack] cannot currently be met. When this event is thrown on a MediaStreamTrack, it is muted until either the current constraints can be established or until satisfiable constraints are applied.\n  \n    \n    \n      DOMException\n    \n  \n  \n    \n    \n      OverconstrainedError\n    \n  ",
        "mdn": "/en-US/docs/Web/API/OverconstrainedError"
      },
      "MediaDevices": {
        "fragment": "[Exposed=Window, SecureContext]\ninterface MediaDevices : EventTarget {\n  attribute EventHandler ondevicechange;\n  Promise<sequence<MediaDeviceInfo>> enumerateDevices();\n};",
        "type": "interface",
        "name": "MediaDevices",
        "inheritance": "EventTarget",
        "members": [
          {
            "type": "attribute",
            "name": "ondevicechange",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "EventHandler"
            },
            "extAttrs": [],
            "special": "",
            "readonly": false
          },
          {
            "type": "operation",
            "name": "enumerateDevices",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "Promise",
              "nullable": false,
              "union": false,
              "idlType": [
                {
                  "type": "return-type",
                  "extAttrs": [],
                  "generic": "sequence",
                  "nullable": false,
                  "union": false,
                  "idlType": [
                    {
                      "type": "return-type",
                      "extAttrs": [],
                      "generic": "",
                      "nullable": false,
                      "union": false,
                      "idlType": "MediaDeviceInfo"
                    }
                  ]
                }
              ]
            },
            "arguments": [],
            "extAttrs": [],
            "special": ""
          }
        ],
        "extAttrs": [
          {
            "type": "extended-attribute",
            "name": "Exposed",
            "rhs": {
              "type": "identifier",
              "value": "Window"
            },
            "arguments": []
          },
          {
            "type": "extended-attribute",
            "name": "SecureContext",
            "rhs": null,
            "arguments": []
          }
        ],
        "partial": false,
        "deprecated": false,
        "experimental": false,
        "desc": "The  interface provides access to connected media input devices like cameras and microphones, as well as screen sharing. In essence, it lets you obtain access to any hardware source of media data.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      MediaDevices\n    \n  ",
        "mdn": "/en-US/docs/Web/API/MediaDevices"
      },
      "MediaDeviceInfo": {
        "fragment": "[Exposed=Window, SecureContext]\ninterface MediaDeviceInfo {\n  readonly attribute DOMString deviceId;\n  readonly attribute MediaDeviceKind kind;\n  readonly attribute DOMString label;\n  readonly attribute DOMString groupId;\n  [Default] object toJSON();\n};",
        "type": "interface",
        "name": "MediaDeviceInfo",
        "inheritance": null,
        "members": [
          {
            "type": "attribute",
            "name": "deviceId",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "DOMString"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true
          },
          {
            "type": "attribute",
            "name": "kind",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "MediaDeviceKind"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true
          },
          {
            "type": "attribute",
            "name": "label",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "DOMString"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true
          },
          {
            "type": "attribute",
            "name": "groupId",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "DOMString"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true
          },
          {
            "type": "operation",
            "name": "toJSON",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "object"
            },
            "arguments": [],
            "extAttrs": [
              {
                "type": "extended-attribute",
                "name": "Default",
                "rhs": null,
                "arguments": []
              }
            ],
            "special": ""
          }
        ],
        "extAttrs": [
          {
            "type": "extended-attribute",
            "name": "Exposed",
            "rhs": {
              "type": "identifier",
              "value": "Window"
            },
            "arguments": []
          },
          {
            "type": "extended-attribute",
            "name": "SecureContext",
            "rhs": null,
            "arguments": []
          }
        ],
        "partial": false,
        "deprecated": false,
        "experimental": false,
        "desc": "The  interface contains information that describes a single media input or output device.\nThe list of devices obtained by calling [navigator.mediaDevices.enumerateDevices()] is an array of  objects, one per media device.",
        "mdn": "/en-US/docs/Web/API/MediaDeviceInfo"
      },
      "MediaDeviceKind": {
        "fragment": "enum MediaDeviceKind {\n  \"audioinput\",\n  \"audiooutput\",\n  \"videoinput\"\n};",
        "type": "enum",
        "name": "MediaDeviceKind",
        "values": [
          {
            "type": "enum-value",
            "value": "audioinput"
          },
          {
            "type": "enum-value",
            "value": "audiooutput"
          },
          {
            "type": "enum-value",
            "value": "videoinput"
          }
        ],
        "extAttrs": []
      },
      "InputDeviceInfo": {
        "fragment": "[Exposed=Window]\ninterface InputDeviceInfo : MediaDeviceInfo {\n  MediaTrackCapabilities getCapabilities();\n};",
        "type": "interface",
        "name": "InputDeviceInfo",
        "inheritance": "MediaDeviceInfo",
        "members": [
          {
            "type": "operation",
            "name": "getCapabilities",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "MediaTrackCapabilities"
            },
            "arguments": [],
            "extAttrs": [],
            "special": ""
          }
        ],
        "extAttrs": [
          {
            "type": "extended-attribute",
            "name": "Exposed",
            "rhs": {
              "type": "identifier",
              "value": "Window"
            },
            "arguments": []
          }
        ],
        "partial": false,
        "deprecated": false,
        "experimental": false,
        "desc": "The  interface of the Media Streams API gives access to the capabilities of the input device that it represents.\n objects are returned by [MediaDevices.enumerateDevices()] if the returned device is an audio or video input device.\n  \n    \n    \n      MediaDeviceInfo\n    \n  \n  \n    \n    \n      InputDeviceInfo\n    \n  ",
        "mdn": "/en-US/docs/Web/API/InputDeviceInfo"
      },
      "MediaStreamConstraints": {
        "fragment": "dictionary MediaStreamConstraints {\n  (boolean or MediaTrackConstraints) video = false;\n  (boolean or MediaTrackConstraints) audio = false;\n};",
        "type": "dictionary",
        "name": "MediaStreamConstraints",
        "inheritance": null,
        "members": [
          {
            "type": "field",
            "name": "video",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": true,
              "idlType": [
                {
                  "type": null,
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "boolean"
                },
                {
                  "type": null,
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "MediaTrackConstraints"
                }
              ]
            },
            "default": {
              "type": "boolean",
              "value": false
            },
            "required": false
          },
          {
            "type": "field",
            "name": "audio",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": true,
              "idlType": [
                {
                  "type": null,
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "boolean"
                },
                {
                  "type": null,
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "MediaTrackConstraints"
                }
              ]
            },
            "default": {
              "type": "boolean",
              "value": false
            },
            "required": false
          }
        ],
        "extAttrs": [],
        "partial": false
      },
      "NavigatorUserMediaSuccessCallback": {
        "fragment": "callback NavigatorUserMediaSuccessCallback = undefined (MediaStream stream);",
        "type": "callback",
        "name": "NavigatorUserMediaSuccessCallback",
        "idlType": {
          "type": "return-type",
          "extAttrs": [],
          "generic": "",
          "nullable": false,
          "union": false,
          "idlType": "undefined"
        },
        "arguments": [
          {
            "type": "argument",
            "name": "stream",
            "extAttrs": [],
            "idlType": {
              "type": "argument-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "MediaStream"
            },
            "default": null,
            "optional": false,
            "variadic": false
          }
        ],
        "extAttrs": []
      },
      "NavigatorUserMediaErrorCallback": {
        "fragment": "callback NavigatorUserMediaErrorCallback = undefined (DOMException error);",
        "type": "callback",
        "name": "NavigatorUserMediaErrorCallback",
        "idlType": {
          "type": "return-type",
          "extAttrs": [],
          "generic": "",
          "nullable": false,
          "union": false,
          "idlType": "undefined"
        },
        "arguments": [
          {
            "type": "argument",
            "name": "error",
            "extAttrs": [],
            "idlType": {
              "type": "argument-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "DOMException"
            },
            "default": null,
            "optional": false,
            "variadic": false
          }
        ],
        "extAttrs": []
      },
      "DoubleRange": {
        "fragment": "dictionary DoubleRange {\n  double max;\n  double min;\n};",
        "type": "dictionary",
        "name": "DoubleRange",
        "inheritance": null,
        "members": [
          {
            "type": "field",
            "name": "max",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "double"
            },
            "default": null,
            "required": false
          },
          {
            "type": "field",
            "name": "min",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "double"
            },
            "default": null,
            "required": false
          }
        ],
        "extAttrs": [],
        "partial": false
      },
      "ConstrainDoubleRange": {
        "fragment": "dictionary ConstrainDoubleRange : DoubleRange {\n  double exact;\n  double ideal;\n};",
        "type": "dictionary",
        "name": "ConstrainDoubleRange",
        "inheritance": "DoubleRange",
        "members": [
          {
            "type": "field",
            "name": "exact",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "double"
            },
            "default": null,
            "required": false
          },
          {
            "type": "field",
            "name": "ideal",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "double"
            },
            "default": null,
            "required": false
          }
        ],
        "extAttrs": [],
        "partial": false
      },
      "ULongRange": {
        "fragment": "dictionary ULongRange {\n  [Clamp] unsigned long max;\n  [Clamp] unsigned long min;\n};",
        "type": "dictionary",
        "name": "ULongRange",
        "inheritance": null,
        "members": [
          {
            "type": "field",
            "name": "max",
            "extAttrs": [
              {
                "type": "extended-attribute",
                "name": "Clamp",
                "rhs": null,
                "arguments": []
              }
            ],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "unsigned long"
            },
            "default": null,
            "required": false
          },
          {
            "type": "field",
            "name": "min",
            "extAttrs": [
              {
                "type": "extended-attribute",
                "name": "Clamp",
                "rhs": null,
                "arguments": []
              }
            ],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "unsigned long"
            },
            "default": null,
            "required": false
          }
        ],
        "extAttrs": [],
        "partial": false
      },
      "ConstrainULongRange": {
        "fragment": "dictionary ConstrainULongRange : ULongRange {\n  [Clamp] unsigned long exact;\n  [Clamp] unsigned long ideal;\n};",
        "type": "dictionary",
        "name": "ConstrainULongRange",
        "inheritance": "ULongRange",
        "members": [
          {
            "type": "field",
            "name": "exact",
            "extAttrs": [
              {
                "type": "extended-attribute",
                "name": "Clamp",
                "rhs": null,
                "arguments": []
              }
            ],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "unsigned long"
            },
            "default": null,
            "required": false
          },
          {
            "type": "field",
            "name": "ideal",
            "extAttrs": [
              {
                "type": "extended-attribute",
                "name": "Clamp",
                "rhs": null,
                "arguments": []
              }
            ],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "unsigned long"
            },
            "default": null,
            "required": false
          }
        ],
        "extAttrs": [],
        "partial": false
      },
      "ConstrainBooleanParameters": {
        "fragment": "dictionary ConstrainBooleanParameters {\n  boolean exact;\n  boolean ideal;\n};",
        "type": "dictionary",
        "name": "ConstrainBooleanParameters",
        "inheritance": null,
        "members": [
          {
            "type": "field",
            "name": "exact",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "boolean"
            },
            "default": null,
            "required": false
          },
          {
            "type": "field",
            "name": "ideal",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "boolean"
            },
            "default": null,
            "required": false
          }
        ],
        "extAttrs": [],
        "partial": false
      },
      "ConstrainDOMStringParameters": {
        "fragment": "dictionary ConstrainDOMStringParameters {\n  (DOMString or sequence<DOMString>) exact;\n  (DOMString or sequence<DOMString>) ideal;\n};",
        "type": "dictionary",
        "name": "ConstrainDOMStringParameters",
        "inheritance": null,
        "members": [
          {
            "type": "field",
            "name": "exact",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": true,
              "idlType": [
                {
                  "type": null,
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "DOMString"
                },
                {
                  "type": null,
                  "extAttrs": [],
                  "generic": "sequence",
                  "nullable": false,
                  "union": false,
                  "idlType": [
                    {
                      "type": null,
                      "extAttrs": [],
                      "generic": "",
                      "nullable": false,
                      "union": false,
                      "idlType": "DOMString"
                    }
                  ]
                }
              ]
            },
            "default": null,
            "required": false
          },
          {
            "type": "field",
            "name": "ideal",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": true,
              "idlType": [
                {
                  "type": null,
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "DOMString"
                },
                {
                  "type": null,
                  "extAttrs": [],
                  "generic": "sequence",
                  "nullable": false,
                  "union": false,
                  "idlType": [
                    {
                      "type": null,
                      "extAttrs": [],
                      "generic": "",
                      "nullable": false,
                      "union": false,
                      "idlType": "DOMString"
                    }
                  ]
                }
              ]
            },
            "default": null,
            "required": false
          }
        ],
        "extAttrs": [],
        "partial": false
      },
      "ConstrainULong": {
        "fragment": "typedef ([Clamp] unsigned long or ConstrainULongRange) ConstrainULong;",
        "type": "typedef",
        "name": "ConstrainULong",
        "idlType": {
          "type": "typedef-type",
          "extAttrs": [],
          "generic": "",
          "nullable": false,
          "union": true,
          "idlType": [
            {
              "type": null,
              "extAttrs": [
                {
                  "type": "extended-attribute",
                  "name": "Clamp",
                  "rhs": null,
                  "arguments": []
                }
              ],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "unsigned long"
            },
            {
              "type": null,
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "ConstrainULongRange"
            }
          ]
        },
        "extAttrs": []
      },
      "ConstrainDouble": {
        "fragment": "typedef (double or ConstrainDoubleRange) ConstrainDouble;",
        "type": "typedef",
        "name": "ConstrainDouble",
        "idlType": {
          "type": "typedef-type",
          "extAttrs": [],
          "generic": "",
          "nullable": false,
          "union": true,
          "idlType": [
            {
              "type": null,
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "double"
            },
            {
              "type": null,
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "ConstrainDoubleRange"
            }
          ]
        },
        "extAttrs": []
      },
      "ConstrainBoolean": {
        "fragment": "typedef (boolean or ConstrainBooleanParameters) ConstrainBoolean;",
        "type": "typedef",
        "name": "ConstrainBoolean",
        "idlType": {
          "type": "typedef-type",
          "extAttrs": [],
          "generic": "",
          "nullable": false,
          "union": true,
          "idlType": [
            {
              "type": null,
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "boolean"
            },
            {
              "type": null,
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "ConstrainBooleanParameters"
            }
          ]
        },
        "extAttrs": []
      },
      "ConstrainDOMString": {
        "fragment": "typedef (DOMString or\nsequence<DOMString> or\nConstrainDOMStringParameters) ConstrainDOMString;",
        "type": "typedef",
        "name": "ConstrainDOMString",
        "idlType": {
          "type": "typedef-type",
          "extAttrs": [],
          "generic": "",
          "nullable": false,
          "union": true,
          "idlType": [
            {
              "type": null,
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "DOMString"
            },
            {
              "type": null,
              "extAttrs": [],
              "generic": "sequence",
              "nullable": false,
              "union": false,
              "idlType": [
                {
                  "type": null,
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "DOMString"
                }
              ]
            },
            {
              "type": null,
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "ConstrainDOMStringParameters"
            }
          ]
        },
        "extAttrs": []
      },
      "DevicePermissionDescriptor": {
        "fragment": "dictionary DevicePermissionDescriptor : PermissionDescriptor {\n  DOMString deviceId;\n};",
        "type": "dictionary",
        "name": "DevicePermissionDescriptor",
        "inheritance": "PermissionDescriptor",
        "members": [
          {
            "type": "field",
            "name": "deviceId",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "DOMString"
            },
            "default": null,
            "required": false
          }
        ],
        "extAttrs": [],
        "partial": false
      },
      "CameraDevicePermissionDescriptor": {
        "fragment": "dictionary CameraDevicePermissionDescriptor : DevicePermissionDescriptor {\n  boolean panTiltZoom = false;\n};",
        "type": "dictionary",
        "name": "CameraDevicePermissionDescriptor",
        "inheritance": "DevicePermissionDescriptor",
        "members": [
          {
            "type": "field",
            "name": "panTiltZoom",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "boolean"
            },
            "default": {
              "type": "boolean",
              "value": false
            },
            "required": false
          }
        ],
        "extAttrs": [],
        "partial": false
      }
    },
    "idlExtendedNames": {
      "Navigator": [
        {
          "fragment": "partial interface Navigator {\n  [SameObject, SecureContext] readonly attribute MediaDevices mediaDevices;\n};",
          "type": "interface",
          "name": "Navigator",
          "inheritance": null,
          "members": [
            {
              "type": "attribute",
              "name": "mediaDevices",
              "idlType": {
                "type": "attribute-type",
                "extAttrs": [],
                "generic": "",
                "nullable": false,
                "union": false,
                "idlType": "MediaDevices"
              },
              "extAttrs": [
                {
                  "type": "extended-attribute",
                  "name": "SameObject",
                  "rhs": null,
                  "arguments": []
                },
                {
                  "type": "extended-attribute",
                  "name": "SecureContext",
                  "rhs": null,
                  "arguments": []
                }
              ],
              "special": "",
              "readonly": true
            }
          ],
          "extAttrs": [],
          "partial": true
        },
        {
          "fragment": "partial interface Navigator {\n  [SecureContext] undefined getUserMedia(MediaStreamConstraints constraints,\n                                    NavigatorUserMediaSuccessCallback successCallback,\n                                    NavigatorUserMediaErrorCallback errorCallback);\n};",
          "type": "interface",
          "name": "Navigator",
          "inheritance": null,
          "members": [
            {
              "type": "operation",
              "name": "getUserMedia",
              "idlType": {
                "type": "return-type",
                "extAttrs": [],
                "generic": "",
                "nullable": false,
                "union": false,
                "idlType": "undefined"
              },
              "arguments": [
                {
                  "type": "argument",
                  "name": "constraints",
                  "extAttrs": [],
                  "idlType": {
                    "type": "argument-type",
                    "extAttrs": [],
                    "generic": "",
                    "nullable": false,
                    "union": false,
                    "idlType": "MediaStreamConstraints"
                  },
                  "default": null,
                  "optional": false,
                  "variadic": false
                },
                {
                  "type": "argument",
                  "name": "successCallback",
                  "extAttrs": [],
                  "idlType": {
                    "type": "argument-type",
                    "extAttrs": [],
                    "generic": "",
                    "nullable": false,
                    "union": false,
                    "idlType": "NavigatorUserMediaSuccessCallback"
                  },
                  "default": null,
                  "optional": false,
                  "variadic": false
                },
                {
                  "type": "argument",
                  "name": "errorCallback",
                  "extAttrs": [],
                  "idlType": {
                    "type": "argument-type",
                    "extAttrs": [],
                    "generic": "",
                    "nullable": false,
                    "union": false,
                    "idlType": "NavigatorUserMediaErrorCallback"
                  },
                  "default": null,
                  "optional": false,
                  "variadic": false
                }
              ],
              "extAttrs": [
                {
                  "type": "extended-attribute",
                  "name": "SecureContext",
                  "rhs": null,
                  "arguments": []
                }
              ],
              "special": ""
            }
          ],
          "extAttrs": [],
          "partial": true
        }
      ],
      "MediaDevices": [
        {
          "fragment": "partial interface MediaDevices {\n  MediaTrackSupportedConstraints getSupportedConstraints();\n  Promise<MediaStream> getUserMedia(optional MediaStreamConstraints constraints = {});\n};",
          "type": "interface",
          "name": "MediaDevices",
          "inheritance": null,
          "members": [
            {
              "type": "operation",
              "name": "getSupportedConstraints",
              "idlType": {
                "type": "return-type",
                "extAttrs": [],
                "generic": "",
                "nullable": false,
                "union": false,
                "idlType": "MediaTrackSupportedConstraints"
              },
              "arguments": [],
              "extAttrs": [],
              "special": ""
            },
            {
              "type": "operation",
              "name": "getUserMedia",
              "idlType": {
                "type": "return-type",
                "extAttrs": [],
                "generic": "Promise",
                "nullable": false,
                "union": false,
                "idlType": [
                  {
                    "type": "return-type",
                    "extAttrs": [],
                    "generic": "",
                    "nullable": false,
                    "union": false,
                    "idlType": "MediaStream"
                  }
                ]
              },
              "arguments": [
                {
                  "type": "argument",
                  "name": "constraints",
                  "extAttrs": [],
                  "idlType": {
                    "type": "argument-type",
                    "extAttrs": [],
                    "generic": "",
                    "nullable": false,
                    "union": false,
                    "idlType": "MediaStreamConstraints"
                  },
                  "default": {
                    "type": "dictionary"
                  },
                  "optional": true,
                  "variadic": false
                }
              ],
              "extAttrs": [],
              "special": ""
            }
          ],
          "extAttrs": [],
          "partial": true
        }
      ]
    },
    "globals": {},
    "exposed": {
      "Window": [
        "MediaStream",
        "MediaStreamTrack",
        "MediaStreamTrackEvent",
        "OverconstrainedError",
        "MediaDevices",
        "MediaDeviceInfo",
        "InputDeviceInfo"
      ]
    },
    "dependencies": {
      "MediaStream": [
        "EventTarget",
        "MediaStream",
        "MediaStreamTrack",
        "EventHandler"
      ],
      "MediaStreamTrack": [
        "EventTarget",
        "EventHandler",
        "MediaStreamTrackState",
        "MediaStreamTrack",
        "MediaTrackCapabilities",
        "MediaTrackConstraints",
        "MediaTrackSettings"
      ],
      "MediaTrackSupportedConstraints": [],
      "MediaTrackCapabilities": [
        "ULongRange",
        "DoubleRange"
      ],
      "MediaTrackConstraints": [
        "MediaTrackConstraintSet"
      ],
      "MediaTrackConstraintSet": [
        "ConstrainULong",
        "ConstrainDouble",
        "ConstrainDOMString",
        "ConstrainBoolean"
      ],
      "MediaTrackSettings": [],
      "MediaStreamTrackEvent": [
        "Event",
        "MediaStreamTrackEventInit",
        "MediaStreamTrack"
      ],
      "MediaStreamTrackEventInit": [
        "EventInit",
        "MediaStreamTrack"
      ],
      "OverconstrainedError": [
        "DOMException"
      ],
      "Navigator": [
        "MediaDevices",
        "MediaStreamConstraints",
        "NavigatorUserMediaSuccessCallback",
        "NavigatorUserMediaErrorCallback"
      ],
      "MediaDevices": [
        "EventTarget",
        "EventHandler",
        "MediaDeviceInfo",
        "MediaTrackSupportedConstraints",
        "MediaStream",
        "MediaStreamConstraints"
      ],
      "MediaDeviceInfo": [
        "MediaDeviceKind"
      ],
      "InputDeviceInfo": [
        "MediaDeviceInfo",
        "MediaTrackCapabilities"
      ],
      "MediaStreamConstraints": [
        "MediaTrackConstraints"
      ],
      "DoubleRange": [],
      "ConstrainDoubleRange": [
        "DoubleRange"
      ],
      "ULongRange": [],
      "ConstrainULongRange": [
        "ULongRange"
      ],
      "ConstrainBooleanParameters": [],
      "ConstrainDOMStringParameters": [],
      "DevicePermissionDescriptor": [
        "PermissionDescriptor"
      ],
      "CameraDevicePermissionDescriptor": [
        "DevicePermissionDescriptor"
      ]
    },
    "externalDependencies": [
      "EventTarget",
      "EventHandler",
      "Event",
      "EventInit",
      "DOMException",
      "Navigator",
      "PermissionDescriptor"
    ],
    "hasObsoleteIdl": false
  },
  "path": "./../webIDL/merged/mediacapture-streams.json",
  "basename": "mediacapture-streams.json",
  "name": "mediacapture-streams",
  "libraryName": "mediacapture_streams"
}