{
  "AbortController": {
    "name": "AbortController",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/AbortController\"><code>AbortController</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/AbortController",
    "desc": "The  interface represents a controller object that allows you to abort one or more Web requests as and when desired.\nYou can create a new  object using the [AbortController()] constructor. Communicating with a DOM request is done using an [AbortSignal] object.",
    "members": []
  },
  "AbortSignal": {
    "name": "AbortSignal",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/AbortSignal\"><code>AbortSignal</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/AbortSignal",
    "desc": "The  interface represents a signal object that allows you to communicate with a DOM request (such as a fetch request) and abort it if required via an [AbortController] object.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      AbortSignal\n    \n  ",
    "members": []
  },
  "AbsoluteOrientationSensor": {
    "name": "AbsoluteOrientationSensor",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/AbsoluteOrientationSensor\"><code>AbsoluteOrientationSensor</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/AbsoluteOrientationSensor",
    "desc": "The  interface of the Sensor APIs describes the device's physical orientation in relation to the Earth's reference coordinate system.\nTo use this sensor, the user must grant permission to the ['accelerometer'], ['gyroscope'], and ['magnetometer'] device sensors through the Permissions API.\nIf a feature policy blocks use of a feature it is because your code is inconsistent with the policies set on your server. This is not something that would ever be shown to a user. The [Feature-Policy] HTTP header article contains implementation instructions.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Sensor\n    \n  \n  \n    \n    \n      OrientationSensor\n    \n  \n  \n    \n    \n      AbsoluteOrientationSensor\n    \n  ",
    "members": []
  },
  "AbstractRange": {
    "name": "AbstractRange",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/AbstractRange\"><code>AbstractRange</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/AbstractRange",
    "desc": "The  abstract interface is the base class upon which all DOM range types are defined. A range is an object that indicates the start and end points of a section of content within the document.\n\n  Note: As an abstract interface, you will not directly instantiate an object of type . Instead, you will use the [Range] or [StaticRange] interfaces. To understand the difference between those two interfaces, and how to choose which is appropriate for your needs.\n",
    "members": []
  },
  "Accelerometer": {
    "name": "Accelerometer",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/Accelerometer\"><code>Accelerometer</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/Accelerometer",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  interface of the Sensor APIs provides on each reading the acceleration applied to the device along all three axes.\nTo use this sensor, the user must grant permission to the ['accelerometer'], device sensor through the Permissions API.\nIf a feature policy blocks the use of a feature, it is because your code is inconsistent with the policies set on your server. This is not something that would ever be shown to a user. The [Feature-Policy] HTTP header article contains implementation instructions.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Sensor\n    \n  \n  \n    \n    \n      Accelerometer\n    \n  ",
    "members": []
  },
  "AddressErrors": {
    "name": "AddressErrors",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/AddressErrors\"><code>AddressErrors</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/AddressErrors",
    "desc": "The  dictionary is used by the Payment Request API to report validation errors in a physical address (typically a billing address or a shipping address). Any members which are present indicate that a validation error occurred for the member of the same name in an address described using [PaymentAddress].\n is the type of the object returned by [shippingAddressErrors] in the object passed into [PaymentRequestUpdateEvent.updateWith()] by the [shippingaddresschange] event handler if a change to the address resulted in a validation error occurring.\nSee the examples below to see how this works.",
    "members": []
  },
  "AesCbcParams": {
    "name": "AesCbcParams",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/AesCbcParams\"><code>AesCbcParams</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/AesCbcParams",
    "desc": "The  dictionary of the Web Crypto API represents the object that should be passed as the [algorithm] parameter into [SubtleCrypto.encrypt()], [SubtleCrypto.decrypt()], [SubtleCrypto.wrapKey()], or [SubtleCrypto.unwrapKey()], when using the AES-CBC algorithm.",
    "members": []
  },
  "AesCtrParams": {
    "name": "AesCtrParams",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/AesCtrParams\"><code>AesCtrParams</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/AesCtrParams",
    "desc": "The  dictionary of the Web Crypto API represents the object that should be passed as the [algorithm] parameter into [SubtleCrypto.encrypt()], [SubtleCrypto.decrypt()], [SubtleCrypto.wrapKey()], or [SubtleCrypto.unwrapKey()], when using the AES-CTR algorithm.\nAES is a block cipher, meaning that it splits the message into blocks and encrypts it a block at a time. In CTR mode, every time a block of the message is encrypted, an extra block of data is mixed in. This extra block is called the \"counter block\".\nA given counter block value must never be used more than once with the same key:\n\n  Given a message n blocks long, a different counter block must be used for every block.\n  If the same key is used to encrypt more than one message, a different counter block must be used for all blocks across all messages.\n\nTypically this is achieved by splitting the initial counter block value into two concatenated parts:\n\n  A nonce (that is, a number that may only be used once). The nonce part of the block stays the same for every block in the message. Each time a new message is to be encrypted, a new nonce is chosen. Nonces don't have to be secret, but they must not be reused with the same key.\n  A counter. This part of the block gets incremented each time a block is encrypted.\n\nEssentially: the nonce should ensure that counter blocks are not reused from one message to the next, while the counter should ensure that counter blocks are not reused within a single message.\n\n  Note: See Appendix B of the NIST SP800-38A standard for more information.\n",
    "members": []
  },
  "AesGcmParams": {
    "name": "AesGcmParams",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/AesGcmParams\"><code>AesGcmParams</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/AesGcmParams",
    "desc": "The  dictionary of the Web Crypto API represents the object that should be passed as the [algorithm] parameter into [SubtleCrypto.encrypt()], [SubtleCrypto.decrypt()], [SubtleCrypto.wrapKey()], or [SubtleCrypto.unwrapKey()], when using the AES-GCM algorithm.\nFor details of how to supply appropriate values for this parameter, see the specification for AES-GCM: NIST SP800-38D, in particular section 5.2.1.1 on Input Data.",
    "members": []
  },
  "AesKeyGenParams": {
    "name": "AesKeyGenParams",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/AesKeyGenParams\"><code>AesKeyGenParams</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/AesKeyGenParams",
    "desc": "The  dictionary of the Web Crypto API represents the object that should be passed as the [algorithm] parameter into [SubtleCrypto.generateKey()], when generating an AES key: that is, when the algorithm is identified as any of AES-CBC, AES-CTR, AES-GCM, or AES-KW.",
    "members": []
  },
  "AmbientLightSensor": {
    "name": "AmbientLightSensor",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/AmbientLightSensor\"><code>AmbientLightSensor</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/AmbientLightSensor",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  interface of the Sensor APIs returns the current light level or illuminance of the ambient light around the hosting device.\nTo use this sensor, the user must grant permission to the ['ambient-light-sensor'] device sensor through the Permissions API.\nIf a feature policy blocks use of a feature it is because your code is inconsistent with the policies set on your server. This is not something that would ever be shown to a user. The [Feature-Policy] HTTP header article contains implementation instructions.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Sensor\n    \n  \n  \n    \n    \n      AmbientLightSensor\n    \n  ",
    "members": []
  },
  "AnalyserNode": {
    "name": "AnalyserNode",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/AnalyserNode\"><code>AnalyserNode</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/AnalyserNode",
    "desc": "The  interface represents a node able to provide real-time frequency and time-domain analysis information. It is an [AudioNode] that passes the audio stream unchanged from the input to the output, but allows you to take the generated data, process it, and create audio visualizations.\nAn  has exactly one input and one output. The node works even if the output is not connected.\n\n  \n\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      AudioNode\n    \n  \n  \n    \n    \n      AnalyserNode\n    \n  \n\n  \n    \n      Number of inputs\n      [1]\n    \n    \n      Number of outputs\n      [1] (but may be left unconnected)\n    \n    \n      Channel count mode\n      [\"max\"]\n    \n    \n      Channel count\n      [2]\n    \n    \n      Channel interpretation\n      [\"speakers\"]\n    \n  \n",
    "members": []
  },
  "ANGLE_instanced_arrays": {
    "name": "ANGLE_instanced_arrays",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/ANGLE_instanced_arrays\"><code>ANGLE_instanced_arrays</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/ANGLE_instanced_arrays",
    "desc": "The  extension is part of the WebGL API and allows to draw the same object, or groups of similar objects multiple times, if they share the same vertex data, primitive count and type.\nWebGL extensions are available using the [WebGLRenderingContext.getExtension()] method. For more information, see also Using Extensions in the WebGL tutorial.\n\n  Note: This extension is only available to WebGL1 contexts. In WebGL2, the functionality of this extension is available on the WebGL2 context by default and the constants and methods are available without the \"[ANGLE]\" suffix.\n  Despite the name \"ANGLE\", this extension works on any device if the hardware supports it and not just on Windows when using the ANGLE library. \"ANGLE\" just indicates that this extension has been written by the ANGLE library authors.\n",
    "members": []
  },
  "Animation": {
    "name": "Animation",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/Animation\"><code>Animation</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/Animation",
    "desc": "The  interface of the Web Animations API represents a single animation player and provides playback controls and a timeline for an animation node or source.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Animation\n    \n  ",
    "members": []
  },
  "AnimationEffect": {
    "name": "AnimationEffect",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/AnimationEffect\"><code>AnimationEffect</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/AnimationEffect",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  interface of the Web Animations API defines current and future animation effects like [KeyframeEffect], which can be passed to [Animation] objects for playing, and [KeyframeEffect] (which is used by CSS Animations and Transitions).",
    "members": []
  },
  "AnimationEvent": {
    "name": "AnimationEvent",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/AnimationEvent\"><code>AnimationEvent</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/AnimationEvent",
    "desc": "The  interface represents events providing information related to animations.\n  \n    \n    \n      Event\n    \n  \n  \n    \n    \n      AnimationEvent\n    \n  ",
    "members": []
  },
  "AnimationPlaybackEvent": {
    "name": "AnimationPlaybackEvent",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/AnimationPlaybackEvent\"><code>AnimationPlaybackEvent</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/AnimationPlaybackEvent",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe AnimationPlaybackEvent interface of the Web Animations API represents animation events.\nAs animations play, they report changes to their [playState] through animation events.\n  \n    \n    \n      Event\n    \n  \n  \n    \n    \n      AnimationPlaybackEvent\n    \n  ",
    "members": []
  },
  "AnimationTimeline": {
    "name": "AnimationTimeline",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/AnimationTimeline\"><code>AnimationTimeline</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/AnimationTimeline",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  interface of the Web Animations API represents the timeline of an animation. This interface exists to define timeline features (inherited by [DocumentTimeline] and future timeline types) and is not itself directly used by developers. Anywhere you see , you should use [DocumentTimeline] or any other timeline type instead.",
    "members": []
  },
  "ArrayBufferView": {
    "name": "ArrayBufferView",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/ArrayBufferView\"><code>ArrayBufferView</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/ArrayBufferView",
    "desc": " is a helper type representing any of the following JavaScript types:\n\n  [Int8Array],\n  [Uint8Array],\n  [Uint8ClampedArray],\n  [Int16Array],\n  [Uint16Array],\n  [Int32Array],\n  [Uint32Array],\n  [Float32Array],\n  [Float64Array],\n  [BigInt64Array],\n  [BigUint64Array] or\n  [DataView].\n\nAll of them, except for [DataView], are [TypedArray] objects.\nThis is a helper type to simplify the specification; it isn't an interface, and there are no objects implementing it.",
    "members": []
  },
  "atob": {
    "name": "atob",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/atob\"><code>atob()</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/atob",
    "desc": "\n  The [atob()] function decodes a\n  string of data which has been encoded using Base64 encoding. You can use\n  the [btoa()] method to encode and transmit\n  data which may otherwise cause communication problems, then transmit it and use the\n  [atob()] method to decode the data again. For example, you can encode,\n  transmit, and decode control characters such as ASCII values 0 through 31.\n\n\n  For use with Unicode or UTF-8 strings, see the note on \"Unicode strings\" in the page\n  for [btoa()].\n",
    "members": []
  },
  "Attr": {
    "name": "Attr",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/Attr\"><code>Attr</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/Attr",
    "desc": "The  interface represents one of an element's attributes as an object. In most situations, you will directly retrieve the attribute value as a string (e.g., [Element.getAttribute()]), but certain functions (e.g., [Element.getAttributeNode()]) or means of iterating return  instances.\nThe core idea of an object of type  is the association between a name and a value. An attribute may also be part of a namespace and, in this case, it also has a URI identifying the namespace, and a prefix that is an abbreviation for the namespace.\nThe name is deemed local when it ignores the eventual namespace prefix and deemed qualified when it includes the prefix of the namespace, if any, separated from the local name by a colon ([:]). We have three cases: an attribute outside of a namespace, an attribute inside a namespace without a prefix defined, an attribute inside a namespace with a prefix:\n\n  \n    \n      Attribute\n      Namespace name\n      Namespace prefix\n      Attribute local name\n      Attribute qualified name\n    \n  \n  \n    \n      [myAttr]\n      none\n      none\n      [myAttr]\n      [myAttr]\n    \n    \n      [myAttr]\n      [mynamespace]\n      none\n      [myAttr]\n      [myAttr]\n    \n    \n      [myAttr]\n      [mynamespace]\n      [myns]\n      [myAttr]\n      [myns:myAttr]\n    \n  \n\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Attr\n    \n  \n\n  Note: This interface represents only attributes present in the tree representation of the [Element], being a SVG, an HTML or a MathML element. It doesn't represent the property of an interface associated with such element, such as [HTMLTableElement] for a [<table>] element. (See this article for more information about attributes and how they are reflected into properties.)\n",
    "members": []
  },
  "AudioBuffer": {
    "name": "AudioBuffer",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/AudioBuffer\"><code>AudioBuffer</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/AudioBuffer",
    "desc": "The  interface represents a short audio asset residing in memory, created from an audio file using the [AudioContext.decodeAudioData()] method, or from raw data using [AudioContext.createBuffer()]. Once put into an AudioBuffer, the audio can then be played by being passed into an [AudioBufferSourceNode].\nObjects of these types are designed to hold small audio snippets, typically less than 45 s. For longer sounds, objects implementing the [MediaElementAudioSourceNode] are more suitable. The buffer contains data in the following format: non-interleaved IEEE754 32-bit linear PCM with a nominal range between [-1] and [+1], that is, a 32-bit floating point buffer, with each sample between -1.0 and 1.0. If the  has multiple channels, they are stored in separate buffers.",
    "members": []
  },
  "AudioBufferSourceNode": {
    "name": "AudioBufferSourceNode",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/AudioBufferSourceNode\"><code>AudioBufferSourceNode</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/AudioBufferSourceNode",
    "desc": "The  interface is an [AudioScheduledSourceNode] which represents an audio source consisting of in-memory audio data, stored in an [AudioBuffer].\nThis interface is especially useful for playing back audio which has particularly stringent timing accuracy requirements, such as for sounds that must match a specific rhythm and can be kept in memory rather than being played from disk or the network. To play sounds which require accurate timing but must be streamed from the network or played from disk, use a [AudioWorkletNode] to implement its playback.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      AudioNode\n    \n  \n  \n    \n    \n      AudioScheduledSourceNode\n    \n  \n  \n    \n    \n      AudioBufferSourceNode\n    \n  \nAn  has no inputs and exactly one output, which has the same number of channels as the [AudioBuffer] indicated by its [buffer] property. If there's no buffer set—that is, if [buffer] is [null]—the output contains a single channel of silence (every sample is 0).\nAn  can only be played once; after each call to [start()], you have to create a new node if you want to play the same sound again. Fortunately, these nodes are very inexpensive to create, and the actual [AudioBuffer]s can be reused for multiple plays of the sound. Indeed, you can use these nodes in a \"fire and forget\" manner: create the node, call [start()] to begin playing the sound, and don't even bother to hold a reference to it. It will automatically be garbage-collected at an appropriate time, which won't be until sometime after the sound has finished playing.\nMultiple calls to [stop()] are allowed. The most recent call replaces the previous one, if the  has not already reached the end of the buffer.\n\n  \n\n\n  \n    \n      Number of inputs\n      [0]\n    \n    \n      Number of outputs\n      [1]\n    \n    \n      Channel count\n      defined by the associated [AudioBuffer]\n    \n  \n",
    "members": []
  },
  "AudioConfiguration": {
    "name": "AudioConfiguration",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/AudioConfiguration\"><code>AudioConfiguration</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/AudioConfiguration",
    "desc": "The  dictionary of the Media Capabilities API defines the audio file being tested when calling [MediaCapabilities.encodingInfo()] or [MediaCapabilities.decodingInfo()] to query whether a specific audio configuration is supported, smooth, and/or power efficient.",
    "members": []
  },
  "AudioContext": {
    "name": "AudioContext",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/AudioContext\"><code>AudioContext</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/AudioContext",
    "desc": "The  interface represents an audio-processing graph built from audio modules linked together, each represented by an [AudioNode].\nAn audio context controls both the creation of the nodes it contains and the execution of the audio processing, or decoding. You need to create an  before you do anything else, as everything happens inside a context. It's recommended to create one AudioContext and reuse it instead of initializing a new one each time, and it's OK to use a single  for several different audio sources and pipeline concurrently.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      BaseAudioContext\n    \n  \n  \n    \n    \n      AudioContext\n    \n  ",
    "members": []
  },
  "AudioData": {
    "name": "AudioData",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/AudioData\"><code>AudioData</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/AudioData",
    "desc": "The  interface of the [WebCodecs API] represents an audio sample.",
    "members": []
  },
  "AudioDecoder": {
    "name": "AudioDecoder",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/AudioDecoder\"><code>AudioDecoder</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/AudioDecoder",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  interface of the WebCodecs API decodes chunks of audio.",
    "members": []
  },
  "AudioDestinationNode": {
    "name": "AudioDestinationNode",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/AudioDestinationNode\"><code>AudioDestinationNode</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/AudioDestinationNode",
    "desc": "The  interface represents the end destination of an audio graph in a given context — usually the speakers of your device. It can also be the node that will \"record\" the audio data when used with an [OfflineAudioContext].\n has no output (as it is the output, no more [AudioNode] can be linked after it in the audio graph) and one input. The number of channels in the input must be between [0] and the [maxChannelCount] value or an exception is raised.\nThe  of a given [AudioContext] can be retrieved using the [AudioContext.destination] property.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      AudioNode\n    \n  \n  \n    \n    \n      AudioDestinationNode\n    \n  \n\n  \n    \n      Number of inputs\n      [1]\n    \n    \n      Number of outputs\n      [0]\n    \n    \n      Channel count mode\n      [\"explicit\"]\n    \n    \n      Channel count\n      [2]\n    \n    \n      Channel interpretation\n      [\"speakers\"]\n    \n  \n",
    "members": []
  },
  "AudioEncoder": {
    "name": "AudioEncoder",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/AudioEncoder\"><code>AudioEncoder</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/AudioEncoder",
    "desc": "The  interface of the WebCodecs API encodes [AudioData] objects.",
    "members": []
  },
  "AudioListener": {
    "name": "AudioListener",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/AudioListener\"><code>AudioListener</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/AudioListener",
    "desc": "The  interface represents the position and orientation of the unique person listening to the audio scene, and is used in audio spatialization. All [PannerNode]s spatialize in relation to the  stored in the [BaseAudioContext.listener] attribute.\nIt is important to note that there is only one listener per context and that it isn't an [AudioNode].\n\n  \n",
    "members": []
  },
  "AudioNode": {
    "name": "AudioNode",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/AudioNode\"><code>AudioNode</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/AudioNode",
    "desc": "The  interface is a generic interface for representing an audio processing module.\nExamples include:\n\n  an audio source (e.g. an HTML [<audio>] or [<video>] element, an [OscillatorNode], etc.),\n  the audio destination,\n  intermediate processing module (e.g. a filter like [BiquadFilterNode] or [ConvolverNode]), or\n  volume control (like [GainNode])\n\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      AudioNode\n    \n  \n\n  Note: An  can be target of events, therefore it implements the [EventTarget] interface.\n",
    "members": []
  },
  "AudioParam": {
    "name": "AudioParam",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/AudioParam\"><code>AudioParam</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/AudioParam",
    "desc": "The Web Audio API's  interface represents an audio-related parameter, usually a parameter of an [AudioNode] (such as [GainNode.gain]).\nAn  can be set to a specific value or a change in value, and can be scheduled to happen at a specific time and following a specific pattern.\nEach  has a list of events, initially empty, that define when and how values change. When this list is not empty, changes using the [AudioParam.value] attributes are ignored. This list of events allows us to schedule changes that have to happen at very precise times, using arbitrary timeline-based automation curves. The time used is the one defined in [AudioContext.currentTime].",
    "members": []
  },
  "AudioParamDescriptor": {
    "name": "AudioParamDescriptor",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/AudioParamDescriptor\"><code>AudioParamDescriptor</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/AudioParamDescriptor",
    "desc": "The  dictionary of the Web Audio API specifies properties for [AudioParam] objects.\nIt is used to create custom [AudioParam]s on an [AudioWorkletNode]. If the underlying [AudioWorkletProcessor] has a [parameterDescriptors] static getter, then the returned array of objects based on this dictionary is used internally by [AudioWorkletNode] constructor to populate its [parameters] property accordingly.",
    "members": []
  },
  "AudioParamMap": {
    "name": "AudioParamMap",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/AudioParamMap\"><code>AudioParamMap</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/AudioParamMap",
    "desc": "The Web Audio API interface  represents a set of multiple audio parameters, each described as a mapping of a [DOMString] identifying the parameter to the [AudioParam] object representing its value.",
    "members": []
  },
  "AudioProcessingEvent": {
    "name": "AudioProcessingEvent",
    "experimental": false,
    "deprecated": true,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/AudioProcessingEvent\"><code>AudioProcessingEvent</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/AudioProcessingEvent",
    "desc": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.\nThe Web Audio API  represents events that occur when a [ScriptProcessorNode] input buffer is ready to be processed.\n\n  Note: As of the August 29 2014 Web Audio API spec publication, this feature has been marked as deprecated, and is soon to be replaced by AudioWorklet.\n\n  \n    \n    \n      Event\n    \n  \n  \n    \n    \n      AudioProcessingEvent\n    \n  ",
    "members": []
  },
  "AudioScheduledSourceNode": {
    "name": "AudioScheduledSourceNode",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/AudioScheduledSourceNode\"><code>AudioScheduledSourceNode</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/AudioScheduledSourceNode",
    "desc": "The  interface—part of the Web Audio API—is a parent interface for several types of audio source node interfaces which share the ability to be started and stopped, optionally at specified times. Specifically, this interface defines the [start()] and [stop()] methods, as well as the [onended] event handler.\n\n  Note: You can't create an  object directly. Instead, use the interface which extends it, such as [AudioBufferSourceNode], [OscillatorNode], and [ConstantSourceNode].\n\nUnless stated otherwise, nodes based upon  output silence when not playing (that is, before [start()] is called and after [stop()] is called). Silence is represented, as always, by a stream of samples with the value zero (0).\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      AudioNode\n    \n  \n  \n    \n    \n      AudioScheduledSourceNode\n    \n  ",
    "members": []
  },
  "AudioTrack": {
    "name": "AudioTrack",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/AudioTrack\"><code>AudioTrack</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/AudioTrack",
    "desc": "The  interface represents a single audio track from one of the HTML media elements, [<audio>] or [<video>].\nThe most common use for accessing an  object is to toggle its [enabled] property in order to mute and unmute the track.",
    "members": []
  },
  "AudioTrackList": {
    "name": "AudioTrackList",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/AudioTrackList\"><code>AudioTrackList</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/AudioTrackList",
    "desc": "The  interface is used to represent a list of the audio tracks contained within a given HTML media element, with each track represented by a separate [AudioTrack] object in the list.\nRetrieve an instance of this object with [HTMLMediaElement.audioTracks]. The individual tracks can be accessed using array syntax.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      AudioTrackList\n    \n  ",
    "members": []
  },
  "AudioWorklet": {
    "name": "AudioWorklet",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/AudioWorklet\"><code>AudioWorklet</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/AudioWorklet",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  interface of the Web Audio API is used to supply custom audio processing scripts that execute in a separate thread to provide very low latency audio processing.\nThe worklet's code is run in the [AudioWorkletGlobalScope] global execution context, using a separate Web Audio thread which is shared by the worklet and other audio nodes.\nAccess the audio context's instance of  through the [BaseAudioContext.audioWorklet] property.\n  \n    \n    \n      Worklet\n    \n  \n  \n    \n    \n      AudioWorklet\n    \n  ",
    "members": []
  },
  "AudioWorkletGlobalScope": {
    "name": "AudioWorkletGlobalScope",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/AudioWorkletGlobalScope\"><code>AudioWorkletGlobalScope</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/AudioWorkletGlobalScope",
    "desc": "The  interface of the Web Audio API represents a global execution context for user-supplied code, which defines custom [AudioWorkletProcessor]-derived classes.\nEach [BaseAudioContext] has a single [AudioWorklet] available under the [audioWorklet] property, which runs its code in a single .\nAs the global execution context is shared across the current [BaseAudioContext], it's possible to define any other variables and perform any actions allowed in worklets — apart from defining [AudioWorkletProcessor]-derived classes.\n  \n    \n    \n      WorkletGlobalScope\n    \n  \n  \n    \n    \n      AudioWorkletGlobalScope\n    \n  ",
    "members": []
  },
  "AudioWorkletNode": {
    "name": "AudioWorkletNode",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/AudioWorkletNode\"><code>AudioWorkletNode</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/AudioWorkletNode",
    "desc": "\n  Note: Although the interface is available outside secure contexts, the [BaseAudioContext.audioWorklet] property is not, thus custom [AudioWorkletProcessor]s cannot be defined outside them.\n\nThe  interface of the Web Audio API represents a base class for a user-defined [AudioNode], which can be connected to an audio routing graph along with other nodes. It has an associated [AudioWorkletProcessor], which does the actual audio processing in a Web Audio rendering thread.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      AudioNode\n    \n  \n  \n    \n    \n      AudioWorkletNode\n    \n  ",
    "members": []
  },
  "AudioWorkletProcessor": {
    "name": "AudioWorkletProcessor",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/AudioWorkletProcessor\"><code>AudioWorkletProcessor</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/AudioWorkletProcessor",
    "desc": "The  interface of the Web Audio API represents an audio processing code behind a custom [AudioWorkletNode]. It lives in the [AudioWorkletGlobalScope] and runs on the Web Audio rendering thread. In turn, an [AudioWorkletNode] based on it runs on the main thread.",
    "members": []
  },
  "AuthenticatorAssertionResponse": {
    "name": "AuthenticatorAssertionResponse",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/AuthenticatorAssertionResponse\"><code>AuthenticatorAssertionResponse</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/AuthenticatorAssertionResponse",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  interface of the Web Authentication API is returned by [CredentialsContainer.get()] when a [PublicKeyCredential] is passed, and provides proof to a service that it has a key pair and that the authentication request is valid and approved.\nThis interface inherits from [AuthenticatorResponse].\n  \n    \n    \n      AuthenticatorResponse\n    \n  \n  \n    \n    \n      AuthenticatorAssertionResponse\n    \n  \n\n  Note: This interface is restricted to top-level contexts. Use from within an [<iframe>] element will not have any effect.\n",
    "members": []
  },
  "AuthenticatorAttestationResponse": {
    "name": "AuthenticatorAttestationResponse",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/AuthenticatorAttestationResponse\"><code>AuthenticatorAttestationResponse</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/AuthenticatorAttestationResponse",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  interface of the Web Authentication API is returned by [CredentialsContainer.create()] when a [PublicKeyCredential] is passed, and provides a cryptographic root of trust for the new key pair that has been generated. This response should be sent to the relying party's server to complete the creation of the credential.\nThis interface inherits from [AuthenticatorResponse].\n  \n    \n    \n      AuthenticatorResponse\n    \n  \n  \n    \n    \n      AuthenticatorAttestationResponse\n    \n  \n\n  Note: This interface is restricted to top-level contexts. Use from within an [<iframe>] element will not have any effect.\n",
    "members": []
  },
  "AuthenticatorResponse": {
    "name": "AuthenticatorResponse",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/AuthenticatorResponse\"><code>AuthenticatorResponse</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/AuthenticatorResponse",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  interface of the Web Authentication API is the base interface for interfaces that provide a cryptographic root of trust for a key pair. The child interfaces include information from the browser such as the challenge origin and either may be returned from [PublicKeyCredential.response].",
    "members": []
  },
  "BackgroundFetchEvent": {
    "name": "BackgroundFetchEvent",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/BackgroundFetchEvent\"><code>BackgroundFetchEvent</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/BackgroundFetchEvent",
    "desc": "The  interface of the Background Fetch API is the event type for background fetch events dispatched on the [service worker global scope].\nIt is the event type passed to [onbackgroundfetchabort] and [onbackgroundfetchclick].\n  \n    \n    \n      Event\n    \n  \n  \n    \n    \n      ExtendableEvent\n    \n  \n  \n    \n    \n      BackgroundFetchEvent\n    \n  ",
    "members": []
  },
  "BackgroundFetchManager": {
    "name": "BackgroundFetchManager",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/BackgroundFetchManager\"><code>BackgroundFetchManager</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/BackgroundFetchManager",
    "desc": "The  interface of the Background Fetch API is a map where the keys are background fetch IDs and the values are [BackgroundFetchRegistration] objects.",
    "members": []
  },
  "BackgroundFetchRecord": {
    "name": "BackgroundFetchRecord",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/BackgroundFetchRecord\"><code>BackgroundFetchRecord</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/BackgroundFetchRecord",
    "desc": "The  interface of the Background Fetch API represents an individual request and response.\nA  is created by the [BackgroundFetchManager.fetch()] method, therefore there is no constructor for this interface.\nThere will be one  for each resource requested by [fetch()].",
    "members": []
  },
  "BackgroundFetchRegistration": {
    "name": "BackgroundFetchRegistration",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/BackgroundFetchRegistration\"><code>BackgroundFetchRegistration</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/BackgroundFetchRegistration",
    "desc": "The  interface of the Background Fetch API represents an individual background fetch.\nA  instance is returned by the [BackgroundFetchManager.fetch()] or [BackgroundFetchManager.get()] methods, and therefore there has no constructor.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      BackgroundFetchRegistration\n    \n  ",
    "members": []
  },
  "BackgroundFetchUpdateUIEvent": {
    "name": "BackgroundFetchUpdateUIEvent",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/BackgroundFetchUpdateUIEvent\"><code>BackgroundFetchUpdateUIEvent</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/BackgroundFetchUpdateUIEvent",
    "desc": "The  interface of the Background Fetch API is an event type passed to [ServiceWorkerGlobalScope.onbackgroundfetchsuccess] and [ServiceWorkerGlobalScope.onbackgroundfetchfail], and provides a method for updating the title and icon of the app to inform a user of the success or failure of a background fetch.\n  \n    \n    \n      Event\n    \n  \n  \n    \n    \n      ExtendableEvent\n    \n  \n  \n    \n    \n      BackgroundFetchEvent\n    \n  \n  \n    \n    \n      BackgroundFetchUpdateUIEvent\n    \n  ",
    "members": []
  },
  "BarcodeDetector": {
    "name": "BarcodeDetector",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/BarcodeDetector\"><code>BarcodeDetector</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/BarcodeDetector",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  interface of the [Barcode Detection API] allows detection of linear and two dimensional barcodes in images.",
    "members": []
  },
  "BarProp": {
    "name": "BarProp",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/BarProp\"><code>BarProp</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/BarProp",
    "desc": "The  interface of the [Document Object Model] represents the web browser user interface elements that are exposed to scripts in web pages. Each of the following interface elements are represented by a  object.\n\n  [Window.locationbar]\n  \n    The browser location bar.\n  \n  [Window.menubar]\n  \n    The browser menu bar.\n  \n  [Window.personalbar]\n  \n    The browser personal bar.\n  \n  [Window.scrollbars]\n  \n    The browser scrollbars.\n  \n  [Window.statusbar]\n  \n    The browser status bar.\n  \n  [Window.toolbar]\n  \n    The browser toolbar.\n  \n\nThe  interface is not accessed directly, but via one of these elements.",
    "members": []
  },
  "BaseAudioContext": {
    "name": "BaseAudioContext",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/BaseAudioContext\"><code>BaseAudioContext</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/BaseAudioContext",
    "desc": "The  interface of the Web Audio API acts as a base definition for online and offline audio-processing graphs, as represented by [AudioContext] and [OfflineAudioContext] respectively. You wouldn't use  directly — you'd use its features via one of these two inheriting interfaces.\nA  can be a target of events, therefore it implements the [EventTarget] interface.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      BaseAudioContext\n    \n  ",
    "members": []
  },
  "BatteryManager": {
    "name": "BatteryManager",
    "experimental": false,
    "deprecated": true,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/BatteryManager\"><code>BatteryManager</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/BatteryManager",
    "desc": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.\nThe  interface of the Battery Status API provides information about the system's battery charge level. The [navigator.getBattery()] method returns a promise that resolves with a  interface.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      BatteryManager\n    \n  ",
    "members": []
  },
  "BeforeInstallPromptEvent": {
    "name": "BeforeInstallPromptEvent",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/BeforeInstallPromptEvent\"><code>BeforeInstallPromptEvent</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/BeforeInstallPromptEvent",
    "desc": "The  is fired at the [Window.onbeforeinstallprompt] handler before a user is prompted to \"install\" a web site to a home screen on mobile.\nThis interface inherits from the [Event] interface.",
    "members": []
  },
  "BeforeUnloadEvent": {
    "name": "BeforeUnloadEvent",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/BeforeUnloadEvent\"><code>BeforeUnloadEvent</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/BeforeUnloadEvent",
    "desc": "The [beforeunload] event is fired when the window, the document and its resources are about to be unloaded.\nWhen a non-empty string is assigned to the [returnValue] Event property, a dialog box appears, asking the users for confirmation to leave the page (see example below). When no value is provided, the event is processed silently. Some implementations only show the dialog box if the frame or any embedded frame receives a user gesture or user interaction. See Browser compatibility for more information.\n  \n    \n    \n      Event\n    \n  \n  \n    \n    \n      BeforeUnloadEvent\n    \n  \n\n  \n    \n      Bubbles\n      No\n    \n    \n      Cancelable\n      Yes\n    \n    \n      Target objects\n      defaultView\n    \n    \n      Interface\n      [Event]\n    \n  \n",
    "members": []
  },
  "BiquadFilterNode": {
    "name": "BiquadFilterNode",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/BiquadFilterNode\"><code>BiquadFilterNode</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/BiquadFilterNode",
    "desc": "The  interface represents a simple low-order filter, and is created using the [BaseAudioContext/createBiquadFilter] method. It is an [AudioNode] that can represent different kinds of filters, tone control devices, and graphic equalizers. A  always has exactly one input and one output.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      AudioNode\n    \n  \n  \n    \n    \n      BiquadFilterNode\n    \n  \n\n  \n    \n      Number of inputs\n      [1]\n    \n    \n      Number of outputs\n      [1]\n    \n    \n      Channel count mode\n      [\"max\"]\n    \n    \n      Channel count\n      [2] (not used in the default count mode)\n    \n    \n      Channel interpretation\n      [\"speakers\"]\n    \n  \n",
    "members": []
  },
  "Blob": {
    "name": "Blob",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/Blob\"><code>Blob</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/Blob",
    "desc": "The  object represents a blob, which is a file-like object of immutable, raw data; they can be read as text or binary data, or converted into a [ReadableStream] so its methods can be used for processing the data.\nBlobs can represent data that isn't necessarily in a JavaScript-native format. The [File] interface is based on , inheriting blob functionality and expanding it to support files on the user's system.",
    "members": []
  },
  "BlobBuilder": {
    "name": "BlobBuilder",
    "experimental": false,
    "deprecated": true,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/BlobBuilder\"><code>BlobBuilder</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/BlobBuilder",
    "desc": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.\n\n  \n    Note: The  interface has been\n    deprecated in favor of the newly introduced [Blob] constructor.\n  \n\n\n  The  interface provides an easy way to\n  construct [Blob] objects. Just create a  and append\n  chunks of data to it by calling the [append()] method. When you're done\n  building your blob, call [getBlob()] to retrieve a [Blob]\n  containing the data you sent into the blob builder.\n",
    "members": []
  },
  "BlobEvent": {
    "name": "BlobEvent",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/BlobEvent\"><code>BlobEvent</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/BlobEvent",
    "desc": "The  interface represents events associated with a [Blob]. These blobs are typically, but not necessarily,  associated with media content.\n  \n    \n    \n      Event\n    \n  \n  \n    \n    \n      BlobEvent\n    \n  ",
    "members": []
  },
  "Bluetooth": {
    "name": "Bluetooth",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/Bluetooth\"><code>Bluetooth</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/Bluetooth",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\n\n  The  interface of the Web Bluetooth API returns a\n  [Promise] to a [BluetoothDevice] object with the specified\n  options.\n\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Bluetooth\n    \n  ",
    "members": []
  },
  "BluetoothCharacteristicProperties": {
    "name": "BluetoothCharacteristicProperties",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/BluetoothCharacteristicProperties\"><code>BluetoothCharacteristicProperties</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/BluetoothCharacteristicProperties",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  interface of the Web Bluetooth API provides the operations that are valid on the given [BluetoothRemoteGATTCharacteristic].\nThis interface is returned by calling [BluetoothRemoteGATTCharacteristic.properties].",
    "members": []
  },
  "BluetoothDevice": {
    "name": "BluetoothDevice",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/BluetoothDevice\"><code>BluetoothDevice</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/BluetoothDevice",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\n\n  The BluetoothDevice interface of the Web Bluetooth\nAPI represents a Bluetooth device inside a particular script execution\n  environment.\n\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      BluetoothDevice\n    \n  ",
    "members": []
  },
  "BluetoothRemoteGATTCharacteristic": {
    "name": "BluetoothRemoteGATTCharacteristic",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/BluetoothRemoteGATTCharacteristic\"><code>BluetoothRemoteGATTCharacteristic</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/BluetoothRemoteGATTCharacteristic",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe [BluetoothRemoteGattCharacteristic] interface of the Web Bluetooth API represents a GATT Characteristic, which is a basic data element that provides further information about a peripheral’s service.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      BluetoothRemoteGATTCharacteristic\n    \n  ",
    "members": []
  },
  "BluetoothRemoteGATTDescriptor": {
    "name": "BluetoothRemoteGATTDescriptor",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/BluetoothRemoteGATTDescriptor\"><code>BluetoothRemoteGATTDescriptor</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/BluetoothRemoteGATTDescriptor",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\n\n  The  interface of the Web Bluetooth API provides a GATT Descriptor,\n  which provides further information about a characteristic’s value.\n\n\n  \n    Note: This page describes the W3C Community Group Web Bluetooth API. For the Firefox OS\n    Bluetooth API, see [BluetoothGattDescriptor]\n(Firefox OS).\n  \n",
    "members": []
  },
  "BluetoothRemoteGATTServer": {
    "name": "BluetoothRemoteGATTServer",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/BluetoothRemoteGATTServer\"><code>BluetoothRemoteGATTServer</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/BluetoothRemoteGATTServer",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\n\n  The  interface of the Web Bluetooth API represents a GATT\n  Server on a remote device.\n\n\n  \n    Note: This page describes the W3C Community Group Web Bluetooth API. For the Firefox OS\n    Bluetooth API, see [BluetoothGattServer]\n(Firefox OS).\n  \n",
    "members": []
  },
  "BluetoothRemoteGATTService": {
    "name": "BluetoothRemoteGATTService",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/BluetoothRemoteGATTService\"><code>BluetoothRemoteGATTService</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/BluetoothRemoteGATTService",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\n\n  \n    Note: This page describes the W3C Community Group BluetoothRemoteGATTService, formerly\n    called BluetoothGATTService. For the Firefox OS interface of the same name,\n    see [BluetoothGattService].\n  \n\n\n  The  interface of the Web Bluetooth API represents a\n  service provided by a GATT server, including a device, a list of referenced services,\n  and a list of the characteristics of this service.\n\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      BluetoothRemoteGATTService\n    \n  ",
    "members": []
  },
  "BluetoothUUID": {
    "name": "BluetoothUUID",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/BluetoothUUID\"><code>BluetoothUUID</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/BluetoothUUID",
    "desc": "\n  The  interface of the [Web Bluetooth API] provides a way to look up Universally Unique Identifier (UUID) values by name in the\n  registry maintained by the Bluetooth SIG.\n",
    "members": []
  },
  "BroadcastChannel": {
    "name": "BroadcastChannel",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/BroadcastChannel\"><code>BroadcastChannel</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/BroadcastChannel",
    "desc": "The  interface represents a named channel that any browsing context of a given origin can subscribe to. It allows communication between different documents (in different windows, tabs, frames or iframes) of the same origin. Messages are broadcasted via a [message] event fired at all  objects listening to the channel.\n  Note: This feature is available in Web Workers\n\n\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      BroadcastChannel\n    \n  ",
    "members": []
  },
  "btoa": {
    "name": "btoa",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/btoa\"><code>btoa()</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/btoa",
    "desc": "\n  The [btoa()] method creates a\n  Base64-encoded ASCII string from a binary string (i.e., a\n  [String] object in which each character in the string is treated as a byte\n  of binary data).\n\n\n  You can use this method to encode data which may otherwise cause communication\n  problems, transmit it, then use the [atob()] method to decode the data again. For example, you can encode control\n  characters such as ASCII values 0 through 31.\n",
    "members": []
  },
  "BufferSource": {
    "name": "BufferSource",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/BufferSource\"><code>BufferSource</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/BufferSource",
    "desc": " is a typedef used to represent objects that are either themselves an [ArrayBuffer], or which are a [TypedArray] providing an [ArrayBufferView].\nThis is a helper type to simplify the specification. It isn't an interface and there are no objects implementing it.",
    "members": []
  },
  "ByteLengthQueuingStrategy": {
    "name": "ByteLengthQueuingStrategy",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/ByteLengthQueuingStrategy\"><code>ByteLengthQueuingStrategy</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/ByteLengthQueuingStrategy",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  interface of the Streams API provides a built-in byte length queuing strategy that can be used when constructing streams.",
    "members": []
  },
  "Cache": {
    "name": "Cache",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/Cache\"><code>Cache</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/Cache",
    "desc": "The  interface provides a persistent storage mechanism for [[Request]] / [[Response]] object pairs that are cached in long lived memory. How long a Cache lives is browser dependent, but a single origin's scripts can typically rely on the presence of a previously populated Cache. Note that the  interface is exposed to windowed scopes as well as workers. You don't have to use it in conjunction with service workers, even though it is defined in the service worker spec.\nAn origin can have multiple, named  objects. You are responsible for implementing how your script (e.g. in a [ServiceWorker]) handles  updates. Items in a  do not get updated unless explicitly requested; they don’t expire unless deleted. Use [CacheStorage.open()] to open a specific named  object and then call any of the  methods to maintain the .\nYou are also responsible for periodically purging cache entries. Each browser has a hard limit on the amount of cache storage that a given origin can use. Cache quota usage estimates are available via the [StorageManager.estimate()] method. The browser does its best to manage disk space, but it may delete the Cache storage for an origin. The browser will generally delete all of the data for an origin or none of the data for an origin. Make sure to version caches by name and use the caches only from the version of the script that they can safely operate on. See Deleting old caches for more information.\n\n  Note: The key matching algorithm depends on the VARY header in the value. So matching a new key requires looking at both key and value for entries in the Cache.\n\n\n  Note: The caching API doesn't honor HTTP caching headers.\n\n  Note: This feature is available in Web Workers\n\nSecure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.",
    "members": []
  },
  "caches": {
    "name": "caches",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/caches\"><code>caches</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/caches",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\n\n  The global  read-only property returns the\n  [CacheStorage] object associated with the current context. This object\n  enables functionality such as storing assets for offline use, and generating custom\n  responses to requests.\n",
    "members": []
  },
  "CacheStorage": {
    "name": "CacheStorage",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/CacheStorage\"><code>CacheStorage</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/CacheStorage",
    "desc": "The  interface represents the storage for [Cache] objects.\nThe interface:\n\n  Provides a master directory of all the named caches that can be accessed by a [ServiceWorker] or other type of worker or [window] scope (you’re not limited to only using it with service workers).\n    \n      Note: Chrome and Safari only expose `CacheStorage` to the windowed context over HTTPS. [caches] will be undefined unless an SSL certificate is configured.\n    \n  \n  Maintains a mapping of string names to corresponding [Cache] objects.\n\nUse [CacheStorage.open()] to obtain a [Cache] instance.\nUse [CacheStorage.match()] to check if a given [Request] is a key in any of the [Cache] objects that the  object tracks.\nYou can access  through the global [caches] property.\n\n  Note:  always rejects with a [SecurityError] on untrusted origins (i.e. those that aren't using HTTPS, although this definition will likely become more complex in the future.) When testing on Firefox, you can get around this by checking the Enable Service Workers over HTTP (when toolbox is open) option in the Firefox Devtools options/gear menu. Furthermore, because  requires file-system access, it may be unavailable in private mode in Firefox.\n\n\n  Note: [CacheStorage.match()] is a convenience method. Equivalent functionality to match a cache entry can be implemented by returning an array of cache names from [CacheStorage.keys()], opening each cache with [CacheStorage.open()], and matching the one you want with [Cache.match()].\n\n  Note: This feature is available in Web Workers\n\nSecure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.",
    "members": []
  },
  "CanvasCaptureMediaStreamTrack": {
    "name": "CanvasCaptureMediaStreamTrack",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/CanvasCaptureMediaStreamTrack\"><code>CanvasCaptureMediaStreamTrack</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/CanvasCaptureMediaStreamTrack",
    "desc": "The  interface represents the video track contained in a [MediaStream] being generated from a [<canvas>] following a call to [HTMLCanvasElement.captureStream()].\nPart of the Media Capture and Streams API.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      MediaStreamTrack\n    \n  \n  \n    \n    \n      CanvasCaptureMediaStreamTrack\n    \n  ",
    "members": []
  },
  "CanvasGradient": {
    "name": "CanvasGradient",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/CanvasGradient\"><code>CanvasGradient</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/CanvasGradient",
    "desc": "The  interface represents an opaque object describing a gradient. It is returned by the methods [CanvasRenderingContext2D.createLinearGradient()], [CanvasRenderingContext2D.createConicGradient()] or [CanvasRenderingContext2D.createRadialGradient()].\nIt can be used as a [fillStyle] or [strokeStyle].",
    "members": []
  },
  "CanvasImageSource": {
    "name": "CanvasImageSource",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/CanvasImageSource\"><code>CanvasImageSource</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/CanvasImageSource",
    "desc": " provides a mechanism for other interfaces to be used as image sources for some methods of the [CanvasDrawImage] and [CanvasFillStrokeStyles] interfaces. It’s just an internal helper type to simplify the specification. It’s not an interface and there are no objects implementing it.\nThe interfaces that it allows to be used as image sources are the following:\n\n  [HTMLImageElement]\n  [SVGImageElement]\n  [HTMLVideoElement]\n  [HTMLCanvasElement]\n  [ImageBitmap]\n  [OffscreenCanvas]\n",
    "members": []
  },
  "CanvasPattern": {
    "name": "CanvasPattern",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/CanvasPattern\"><code>CanvasPattern</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/CanvasPattern",
    "desc": "The  interface represents an opaque object describing a pattern, based on an image, a canvas, or a video, created by the [CanvasRenderingContext2D.createPattern()] method.\nIt can be used as a [fillStyle] or [strokeStyle].",
    "members": []
  },
  "CanvasRenderingContext2D": {
    "name": "CanvasRenderingContext2D",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D\"><code>CanvasRenderingContext2D</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/CanvasRenderingContext2D",
    "desc": "The  interface, part of the Canvas API, provides the 2D rendering context for the drawing surface of a [<canvas>] element. It is used for drawing shapes, text, images, and other objects.\nSee the interface's properties and methods in the sidebar and below. The Canvas tutorial has more explanation, examples, and resources, as well.",
    "members": []
  },
  "CaretPosition": {
    "name": "CaretPosition",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/CaretPosition\"><code>CaretPosition</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/CaretPosition",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production. \nThe  interface represents the caret position, an indicator for the text insertion point. You can get a  using the [Document.caretPositionFromPoint()] method.",
    "members": []
  },
  "CDATASection": {
    "name": "CDATASection",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/CDATASection\"><code>CDATASection</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/CDATASection",
    "desc": "\n  The  interface represents a CDATA section\n  that can be used within XML to include extended portions of unescaped text.\n  When inside a CDATA section, the symbols [<] and [&] don't need escaping\n  as they normally do.\n\nIn XML, a CDATA section looks like:\n[<![CDATA[ ... ]]>\n]\nFor example:\n[<foo>Here is a CDATA section: <![CDATA[ < > & ]]> with all kinds of unescaped text.</foo>\n]\n\n  The only sequence which is not allowed within a CDATA section is the closing sequence\n  of a CDATA section itself, []]>].\n\n\n  Note: CDATA sections should not be used within HTML they are considered as comments and not displayed.\n\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      CharacterData\n    \n  \n  \n    \n    \n      Text\n    \n  \n  \n    \n    \n      CDATASection\n    \n  ",
    "members": []
  },
  "ChannelMergerNode": {
    "name": "ChannelMergerNode",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/ChannelMergerNode\"><code>ChannelMergerNode</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/ChannelMergerNode",
    "desc": "The  interface, often used in conjunction with its opposite, [ChannelSplitterNode], reunites different mono inputs into a single output. Each input is used to fill a channel of the output. This is useful for accessing each channels separately, e.g. for performing channel mixing where gain must be separately controlled on each channel.\n\n  \n\nIf  has one single output, but as many inputs as there are channels to merge; the number of inputs is defined as a parameter of its constructor and the call to [AudioContext.createChannelMerger()]. In the case that no value is given, it will default to [6].\nUsing a , it is possible to create outputs with more channels than the rendering hardware is able to process. In that case, when the signal is sent to the [AudioContext.listener] object, supernumerary channels will be ignored.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      AudioNode\n    \n  \n  \n    \n    \n      ChannelMergerNode\n    \n  \n\n  \n    \n      Number of inputs\n      variable; default to [6].\n    \n    \n      Number of outputs\n      [1]\n    \n    \n      Channel count mode\n      [\"max\"]\n    \n    \n      Channel count\n      [2 ](not used in the default count mode)\n    \n    \n      Channel interpretation\n      [\"speakers\"]\n    \n  \n",
    "members": []
  },
  "ChannelSplitterNode": {
    "name": "ChannelSplitterNode",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/ChannelSplitterNode\"><code>ChannelSplitterNode</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/ChannelSplitterNode",
    "desc": "The  interface, often used in conjunction with its opposite, [ChannelMergerNode], separates the different channels of an audio source into a set of mono outputs. This is useful for accessing each channel separately, e.g. for performing channel mixing where gain must be separately controlled on each channel.\n\n  \n\nIf your  always has one single input, the amount of outputs is defined by a parameter on its constructor and the call to [AudioContext.createChannelSplitter()]. In the case that no value is given, it will default to [6]. If there are fewer channels in the input than there are outputs, supernumerary outputs are silent.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      AudioNode\n    \n  \n  \n    \n    \n      ChannelSplitterNode\n    \n  \n\n  \n    \n      Number of inputs\n      [1]\n    \n    \n      Number of outputs\n      variable; default to [6].\n    \n    \n      Channel count mode\n      \n        [\"explicit]\" Older implementations, as per earlier versions\n        of the spec use [\"max\"].\n      \n    \n    \n      Channel count\n      \n        Fixed to the number of outputs. Older implementations, as per earlier\n        versions of the spec use [2 ](not used in the default count\n        mode).\n      \n    \n    \n      Channel interpretation\n      [\"discrete\"]\n    \n  \n",
    "members": []
  },
  "CharacterData": {
    "name": "CharacterData",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/CharacterData\"><code>CharacterData</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/CharacterData",
    "desc": "The  abstract interface represents a [Node] object that contains characters. This is an abstract interface, meaning there aren't any objects of type : it is implemented by other interfaces like [Text], [Comment], [CDATASection], or [ProcessingInstruction], which aren't abstract.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      CharacterData\n    \n  ",
    "members": []
  },
  "clearInterval": {
    "name": "clearInterval",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/clearInterval\"><code>clearInterval()</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/clearInterval",
    "desc": "\n  The global [clearInterval()] method cancels a timed, repeating action which\n  was previously established by a call to [setInterval()].\n",
    "members": []
  },
  "clearTimeout": {
    "name": "clearTimeout",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/clearTimeout\"><code>clearTimeout()</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/clearTimeout",
    "desc": "\n  The global [clearTimeout()] method cancels a timeout previously established\n  by calling [setTimeout()].\n",
    "members": []
  },
  "Client": {
    "name": "Client",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/Client\"><code>Client</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/Client",
    "desc": "The  interface represents an executable context such as a [Worker], or a [SharedWorker]. [Window] clients are represented by the more-specific [WindowClient]. You can get /[WindowClient] objects from methods such as [Clients.matchAll()] and [Clients.get()].",
    "members": []
  },
  "Clients": {
    "name": "Clients",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/Clients\"><code>Clients</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/Clients",
    "desc": "The  interface provides access to [Client] objects. Access it via [[self].clients] within a service worker.",
    "members": []
  },
  "Clipboard": {
    "name": "Clipboard",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/Clipboard\"><code>Clipboard</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/Clipboard",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  interface implements the Clipboard API, providing—if the user grants permission—both read and write access to the contents of the system clipboard. The Clipboard API can be used to implement cut, copy, and paste features within a web application.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Clipboard\n    \n  \nThe system clipboard is exposed through the global [Navigator.clipboard] property.\nCalls to the methods of the  object will not succeed if the user hasn't granted the needed permissions using the Permissions API and the [\"clipboard-read\"] or [\"clipboard-write\"] permission as appropriate.\n\n  Note: In reality, at this time browser requirements for access to the clipboard vary significantly. Please see the section Clipboard availability for details.\n\nAll of the Clipboard API methods operate asynchronously; they return a [Promise] which is resolved once the clipboard access has been completed. The promise is rejected if clipboard access is denied.\n\n  \n    Note: The clipboard is a data buffer that is used for short-term, data storage and/or data transfers, this can be between documents or applications\n    It is usually implemented as an anonymous, temporary data buffer, sometimes called the paste buffer, that can be accessed from most or all programs within the environment via defined programming interfaces.\n  \n  A typical application accesses clipboard functionality by mapping user input such as keybindings, menu selections, etc. to these interfaces.\n",
    "members": []
  },
  "ClipboardEvent": {
    "name": "ClipboardEvent",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/ClipboardEvent\"><code>ClipboardEvent</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/ClipboardEvent",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  interface represents events providing information related to modification of the clipboard, that is [cut], [copy], and [paste] events.\n  \n    \n    \n      Event\n    \n  \n  \n    \n    \n      ClipboardEvent\n    \n  ",
    "members": []
  },
  "ClipboardItem": {
    "name": "ClipboardItem",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/ClipboardItem\"><code>ClipboardItem</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/ClipboardItem",
    "desc": "The  interface of the [Clipboard API] represents a single item format, used when reading or writing data via the [Clipboard API]. That is [clipboard.read()] and [clipboard.write()] respectively.\nThe benefit of having the  interface to represent data, is that it enables developers to cope with the varying scope of file types and data easily.\nAccess to the contents of the clipboard is gated behind the Permissions API: The [clipboard-write] permission is granted automatically to pages when they are in the active tab. The [clipboard-read] permission must be requested, which you can do by trying to read data from the clipboard.\n\n  Note: To work with text see the [Clipboard.readText()] and [Clipboard.writeText()] methods of the [Clipboard] interface.\n\n\n  Note: You can only pass in one clipboard item at a time.\n",
    "members": []
  },
  "CloseEvent": {
    "name": "CloseEvent",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/CloseEvent\"><code>CloseEvent</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/CloseEvent",
    "desc": "A  is sent to clients using WebSockets when the connection is closed. This is delivered to the listener indicated by the [WebSocket] object's [onclose] attribute.\n  \n    \n    \n      Event\n    \n  \n  \n    \n    \n      CloseEvent\n    \n  ",
    "members": []
  },
  "Comment": {
    "name": "Comment",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/Comment\"><code>Comment</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/Comment",
    "desc": "The  interface represents textual notations within markup; although it is generally not visually shown, such comments are available to be read in the source view.\nComments are represented in HTML and XML as content between '[<!--]' and '[-->]'. In XML, like inside SVG or MathML markup, the character sequence '[--]' cannot be used within a comment.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      CharacterData\n    \n  \n  \n    \n    \n      Comment\n    \n  ",
    "members": []
  },
  "CompositionEvent": {
    "name": "CompositionEvent",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/CompositionEvent\"><code>CompositionEvent</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/CompositionEvent",
    "desc": "The DOM  represents events that occur due to the user indirectly entering text.\n  \n    \n    \n      Event\n    \n  \n  \n    \n    \n      UIEvent\n    \n  \n  \n    \n    \n      CompositionEvent\n    \n  ",
    "members": []
  },
  "CompressionStream": {
    "name": "CompressionStream",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/CompressionStream\"><code>CompressionStream</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/CompressionStream",
    "desc": "The  interface of the Compression Streams API is an API for compressing a stream of data.",
    "members": []
  },
  "console": {
    "name": "console",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/console\"><code>console</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/console",
    "desc": "\n  The  object provides access to the browser's\n  debugging console (e.g. the Web console in Firefox).\n  The specifics of how it works varies from browser to browser, but there is a de facto\n  set of features that are typically provided.\n\n\n  The  object can be accessed from any global object. [Window] on\n  browsing scopes and [WorkerGlobalScope] as specific variants in workers via the\n  property console. It's exposed as [Window.console], and can be referenced as\n  . For example:\n\n[console.log(\"Failed to open the specified link\")\n]\n\n  This page documents the Methods available on the  object and\n  gives a few Usage examples.\n\n  Note: This feature is available in Web Workers\n",
    "members": []
  },
  "ConstantSourceNode": {
    "name": "ConstantSourceNode",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/ConstantSourceNode\"><code>ConstantSourceNode</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/ConstantSourceNode",
    "desc": "The  interface—part of the Web Audio API—represents an audio source (based upon [AudioScheduledSourceNode]) whose output is single unchanging value. This makes it useful for cases in which you need a constant value coming in from an audio source. In addition, it can be used like a constructible [AudioParam] by automating the value of its [offset] or by connecting another node to it; see Controlling multiple parameters with ConstantSourceNode.\nA  has no inputs and exactly one monaural (one-channel) output. The output's value is always the same as the value of the [offset] parameter.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      AudioNode\n    \n  \n  \n    \n    \n      AudioScheduledSourceNode\n    \n  \n  \n    \n    \n      ConstantSourceNode\n    \n  \n\n  \n    \n      Number of inputs\n      [0]\n    \n    \n      Number of outputs\n      [1]\n    \n  \n",
    "members": []
  },
  "ContactAddress": {
    "name": "ContactAddress",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/ContactAddress\"><code>ContactAddress</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/ContactAddress",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  interface of the Contact Picker API represents a physical address. Instances of this interface are retrieved from the [address] property of the objects returned by [ContactManager.getProperties()].\nIt may be useful to refer to the Universal Postal Union web site's Addressing S42 standard materials, which provide information about international standards for postal addresses.",
    "members": []
  },
  "ContactsManager": {
    "name": "ContactsManager",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/ContactsManager\"><code>ContactsManager</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/ContactsManager",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  interface of the [Contact Picker API] allows users to select entries from their contact list and share limited details of the selected entries with a website or application.\nThe  is available through the global [navigator.contacts] property.",
    "members": []
  },
  "ContentIndex": {
    "name": "ContentIndex",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/ContentIndex\"><code>ContentIndex</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/ContentIndex",
    "desc": "The  interface of the [Content Index API] allows developers to register their offline enabled content with the browser.",
    "members": []
  },
  "ContentIndexEvent": {
    "name": "ContentIndexEvent",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/ContentIndexEvent\"><code>ContentIndexEvent</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/ContentIndexEvent",
    "desc": "The  interface of the [Content Index API] defines the object used to represent the [contentdelete] event.\nThis event is sent to the [global scope] of a [ServiceWorker]. It contains the id of the indexed content to be removed.\nThe [contentdelete] event is only fired when the deletion happens due to interaction with the browser's built-in user interface. It is not fired when the [ContentIndex.delete] method is called.\n  \n    \n    \n      Event\n    \n  \n  \n    \n    \n      ExtendableEvent\n    \n  \n  \n    \n    \n      ContentIndexEvent\n    \n  ",
    "members": []
  },
  "ConvolverNode": {
    "name": "ConvolverNode",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/ConvolverNode\"><code>ConvolverNode</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/ConvolverNode",
    "desc": "The  interface is an [AudioNode] that performs a Linear Convolution on a given [AudioBuffer], often used to achieve a reverb effect. A  always has exactly one input and one output.\n\n  Note: For more information on the theory behind Linear Convolution, see the Convolution article on Wikipedia.\n\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      AudioNode\n    \n  \n  \n    \n    \n      ConvolverNode\n    \n  \n\n  \n    \n      Number of inputs\n      [1]\n    \n    \n      Number of outputs\n      [1]\n    \n    \n      Channel count mode\n      [\"clamped-max\"]\n    \n    \n      Channel count\n      [1], [2], or [4]\n    \n    \n      Channel interpretation\n      [\"speakers\"]\n    \n  \n",
    "members": []
  },
  "CookieChangeEvent": {
    "name": "CookieChangeEvent",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/CookieChangeEvent\"><code>CookieChangeEvent</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/CookieChangeEvent",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  interface of the [Cookie Store API] is the event type passed to [CookieStore.onchange()] when any cookie changes have occurred. A cookie change consists of a cookie and a type (either \"changed\" or \"deleted\").\nCookie changes that will cause the  to be dispatched are:\n\n  A cookie is newly created and not immediately removed. In this case [type] is \"changed\".\n  A cookie is newly created and immediately removed. In this case [type] is \"deleted\"\n  A cookie is removed. In this case [type] is \"deleted\".\n\n\n  Note: A cookie that is replaced due to the insertion of another cookie with the same name, domain, and path, is ignored and does not trigger a change event.\n\n  \n    \n    \n      Event\n    \n  \n  \n    \n    \n      CookieChangeEvent\n    \n  ",
    "members": []
  },
  "CookieStore": {
    "name": "CookieStore",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/CookieStore\"><code>CookieStore</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/CookieStore",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  interface of the [Cookie Store API] provides methods for getting and setting cookies asynchronously from either a page or a service worker.\nThe  is accessed via attributes in the global scope in a [Window] or [ServiceWorkerGlobalScope] context. Therefore there is no constructor.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      CookieStore\n    \n  ",
    "members": []
  },
  "CookieStoreManager": {
    "name": "CookieStoreManager",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/CookieStoreManager\"><code>CookieStoreManager</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/CookieStoreManager",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  interface of the [Cookie Store] API allows service workers to subscribe to events for cookie changes. By using the [subscribe()] method a particular service worker registration can indicate that it is interested in change events.\nA  has an associated [ServiceWorkerRegistration]. Each service worker registration has a cookie change subscription list, which is a list of cookie change subscriptions each containing a name and url. The methods in this interface allow the service worker to add and remove subscriptions from this list, and to get a list of all subscriptions.\nTo get a , call [ServiceWorkerRegistration.cookies].",
    "members": []
  },
  "CountQueuingStrategy": {
    "name": "CountQueuingStrategy",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/CountQueuingStrategy\"><code>CountQueuingStrategy</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/CountQueuingStrategy",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  interface of the Streams API provides a built-in chunk counting queuing strategy that can be used when constructing streams.",
    "members": []
  },
  "CrashReportBody": {
    "name": "CrashReportBody",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/CrashReportBody\"><code>CrashReportBody</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/CrashReportBody",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  interface of the Reporting API represents the body of a crash report (the return value of its [Report.body] property).\nA crash report is generated when a document becomes unusable due to the browser (or one of its processes) crashing. For security reasons, no details of the crash are communicated in the body except for a general crash reason.\n  \n    \n    \n      ReportBody\n    \n  \n  \n    \n    \n      CrashReportBody\n    \n  ",
    "members": []
  },
  "createImageBitmap": {
    "name": "createImageBitmap",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/createImageBitmap\"><code>createImageBitmap()</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/createImageBitmap",
    "desc": "\n  The [createImageBitmap()] method creates a bitmap from a\n  given source, optionally cropped to contain only a portion of that source. The method\n  exists on the global scope in both windows and workers. It accepts a variety of\n  different image sources, and returns a [Promise] which resolves to an\n  [ImageBitmap].\n",
    "members": []
  },
  "Credential": {
    "name": "Credential",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/Credential\"><code>Credential</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/Credential",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  interface of the Credential Management API provides information about an entity (usually a user) as a prerequisite to a trust decision.\n objects may be of 3 different types:\n\n  [PasswordCredential]\n  [PublicKeyCredential]\n  [FederatedCredential]\n",
    "members": []
  },
  "CredentialsContainer": {
    "name": "CredentialsContainer",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/CredentialsContainer\"><code>CredentialsContainer</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/CredentialsContainer",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  interface of the Credential Management API exposes methods to request credentials and notify the user agent when events such as successful sign in or sign out happen. This interface is accessible from [Navigator.credentials].",
    "members": []
  },
  "crossOriginIsolated": {
    "name": "crossOriginIsolated",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/crossOriginIsolated\"><code>crossOriginIsolated</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/crossOriginIsolated",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\n\n  The global  read-only property returns a boolean value that\n  indicates whether a [SharedArrayBuffer] can be sent via a\n  [Window.postMessage()] call.\n\n\n  This value is dependent on any [Cross-Origin-Opener-Policy] and\n  [Cross-Origin-Embedder-Policy] headers present in the response.\n",
    "members": []
  },
  "Crypto": {
    "name": "Crypto",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/Crypto\"><code>Crypto</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/Crypto",
    "desc": "\n  The  interface represents basic cryptography features available in the current context.\n  It allows access to a cryptographically strong random number generator and to cryptographic primitives.\n\n  Note: This feature is available in Web Workers\n\nThe Web Crypto API is accessed through the global [crypto] property, which is a  object.",
    "members": []
  },
  "CryptoKey": {
    "name": "CryptoKey",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/CryptoKey\"><code>CryptoKey</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/CryptoKey",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  interface of the Web Crypto API represents a cryptographic key obtained from one of the [SubtleCrypto] methods [generateKey()], [deriveKey()], [importKey()], or [unwrapKey()].\nFor security reasons, the  interface can only be used in a secure context.",
    "members": []
  },
  "CryptoKeyPair": {
    "name": "CryptoKeyPair",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/CryptoKeyPair\"><code>CryptoKeyPair</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/CryptoKeyPair",
    "desc": "The  dictionary of the Web Crypto API represents a key pair for an asymmetric cryptography algorithm, also known as a public-key algorithm.\nA  object can be obtained using [SubtleCrypto.generateKey()], when the selected algorithm is one of the asymmetric algorithms: RSASSA-PKCS1-v1_5, RSA-PSS, RSA-OAEP, ECDSA, or ECDH.\nIt contains two properties, which are both [CryptoKey] objects: a [privateKey] property containing the private key and a [publicKey] property containing the public key.",
    "members": []
  },
  "CSS": {
    "name": "CSS",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/CSS\"><code>CSS</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/CSS",
    "desc": "The  interface holds useful CSS-related methods. No objects with this interface are implemented: it contains only static methods and is therefore a utilitarian interface.",
    "members": []
  },
  "CSSAnimation": {
    "name": "CSSAnimation",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/CSSAnimation\"><code>CSSAnimation</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/CSSAnimation",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  interface of the Web Animations API represents an [Animation] object.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Animation\n    \n  \n  \n    \n    \n      CSSAnimation\n    \n  ",
    "members": []
  },
  "CSSConditionRule": {
    "name": "CSSConditionRule",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/CSSConditionRule\"><code>CSSConditionRule</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/CSSConditionRule",
    "desc": "An object implementing the  interface represents a single condition CSS [at-rule], which consists of a condition and a statement block.\nTwo objects derive from : [CSSMediaRule] and [CSSSupportsRule].\n  \n    \n    \n      CSSRule\n    \n  \n  \n    \n    \n      CSSGroupingRule\n    \n  \n  \n    \n    \n      CSSConditionRule\n    \n  ",
    "members": []
  },
  "CSSCounterStyleRule": {
    "name": "CSSCounterStyleRule",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/CSSCounterStyleRule\"><code>CSSCounterStyleRule</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/CSSCounterStyleRule",
    "desc": "The  interface represents an [@counter-style] at-rule.\n  \n    \n    \n      CSSRule\n    \n  \n  \n    \n    \n      CSSCounterStyleRule\n    \n  ",
    "members": []
  },
  "CSSFontFaceRule": {
    "name": "CSSFontFaceRule",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/CSSFontFaceRule\"><code>CSSFontFaceRule</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/CSSFontFaceRule",
    "desc": "The  interface represents an [@font-face] [at-rule].\n  \n    \n    \n      CSSRule\n    \n  \n  \n    \n    \n      CSSFontFaceRule\n    \n  ",
    "members": []
  },
  "CSSGroupingRule": {
    "name": "CSSGroupingRule",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/CSSGroupingRule\"><code>CSSGroupingRule</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/CSSGroupingRule",
    "desc": "The  interface of the [CSS Object Model] represents any CSS [at-rule] that contains other rules nested within it.\n  \n    \n    \n      CSSRule\n    \n  \n  \n    \n    \n      CSSGroupingRule\n    \n  ",
    "members": []
  },
  "CSSImageValue": {
    "name": "CSSImageValue",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/CSSImageValue\"><code>CSSImageValue</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/CSSImageValue",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  interface of the CSS Typed Object Model API represents values for properties that take an image, for example [background-image], [list-style-image], or [border-image-source].\nThe CSSImageValue object represents an [<image>] that involves an URL, such as [url()] or [image()], but not [linear-gradient()] or [element()].\n  \n    \n    \n      CSSStyleValue\n    \n  \n  \n    \n    \n      CSSImageValue\n    \n  ",
    "members": []
  },
  "CSSImportRule": {
    "name": "CSSImportRule",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/CSSImportRule\"><code>CSSImportRule</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/CSSImportRule",
    "desc": "The  interface represents an [@import] [at-rule].\n  \n    \n    \n      CSSRule\n    \n  \n  \n    \n    \n      CSSImportRule\n    \n  ",
    "members": []
  },
  "CSSKeyframeRule": {
    "name": "CSSKeyframeRule",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/CSSKeyframeRule\"><code>CSSKeyframeRule</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/CSSKeyframeRule",
    "desc": "The  interface describes an object representing a set of styles for a given keyframe. It corresponds to the contents of a single keyframe of a [@keyframes] [at-rule].\n  \n    \n    \n      CSSRule\n    \n  \n  \n    \n    \n      CSSKeyframeRule\n    \n  ",
    "members": []
  },
  "CSSKeyframesRule": {
    "name": "CSSKeyframesRule",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/CSSKeyframesRule\"><code>CSSKeyframesRule</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/CSSKeyframesRule",
    "desc": "The  interface describes an object representing a complete set of keyframes for a CSS animation. It corresponds to the contents of a whole [@keyframes] [at-rule].\n  \n    \n    \n      CSSRule\n    \n  \n  \n    \n    \n      CSSKeyframesRule\n    \n  ",
    "members": []
  },
  "CSSKeywordValue": {
    "name": "CSSKeywordValue",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/CSSKeywordValue\"><code>CSSKeywordValue</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/CSSKeywordValue",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  interface of the CSS Typed Object Model API creates an object to represent CSS keywords and other identifiers.\nThe interface instance name is a stringifier meaning that when used anywhere a string is expected it will return the value of [CSSKeyword.value].\n  \n    \n    \n      CSSStyleValue\n    \n  \n  \n    \n    \n      CSSKeywordValue\n    \n  ",
    "members": []
  },
  "CSSMathInvert": {
    "name": "CSSMathInvert",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/CSSMathInvert\"><code>CSSMathInvert</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/CSSMathInvert",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  interface of the CSS_Object_Model#css_typed_object_model represents a CSS [calc()] used as [calc(1 / <value>).] It inherits properties and methods from its parent [CSSNumericValue].\n  \n    \n    \n      CSSStyleValue\n    \n  \n  \n    \n    \n      CSSNumericValue\n    \n  \n  \n    \n    \n      CSSMathValue\n    \n  \n  \n    \n    \n      CSSMathInvert\n    \n  ",
    "members": []
  },
  "CSSMathMax": {
    "name": "CSSMathMax",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/CSSMathMax\"><code>CSSMathMax</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/CSSMathMax",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  interface of the CSS_Object_Model#css_typed_object_model represents the CSS [max()] function.  It inherits properties and methods from its parent [CSSNumericValue].\n  \n    \n    \n      CSSStyleValue\n    \n  \n  \n    \n    \n      CSSNumericValue\n    \n  \n  \n    \n    \n      CSSMathValue\n    \n  \n  \n    \n    \n      CSSMathMax\n    \n  ",
    "members": []
  },
  "CSSMathMin": {
    "name": "CSSMathMin",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/CSSMathMin\"><code>CSSMathMin</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/CSSMathMin",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  interface of the CSS_Object_Model#css_typed_object_model represents the CSS [min()] function.  It inherits properties and methods from its parent [CSSNumericValue].\n  \n    \n    \n      CSSStyleValue\n    \n  \n  \n    \n    \n      CSSNumericValue\n    \n  \n  \n    \n    \n      CSSMathValue\n    \n  \n  \n    \n    \n      CSSMathMin\n    \n  ",
    "members": []
  },
  "CSSMathNegate": {
    "name": "CSSMathNegate",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/CSSMathNegate\"><code>CSSMathNegate</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/CSSMathNegate",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  interface of the CSS_Object_Model#css_typed_object_model negates the value passed into it. It inherits properties and methods from its parent [CSSNumericValue].\n  \n    \n    \n      CSSStyleValue\n    \n  \n  \n    \n    \n      CSSNumericValue\n    \n  \n  \n    \n    \n      CSSMathValue\n    \n  \n  \n    \n    \n      CSSMathNegate\n    \n  ",
    "members": []
  },
  "CSSMathProduct": {
    "name": "CSSMathProduct",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/CSSMathProduct\"><code>CSSMathProduct</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/CSSMathProduct",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  interface of the CSS_Object_Model#css_typed_object_model represents the result obtained by calling [add()], [sub()], or [toSum()] on [CSSNumericValue].  It inherits properties and methods from its parent [CSSNumericValue].\n  \n    \n    \n      CSSStyleValue\n    \n  \n  \n    \n    \n      CSSNumericValue\n    \n  \n  \n    \n    \n      CSSMathValue\n    \n  \n  \n    \n    \n      CSSMathProduct\n    \n  ",
    "members": []
  },
  "CSSMathSum": {
    "name": "CSSMathSum",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/CSSMathSum\"><code>CSSMathSum</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/CSSMathSum",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  interface of the CSS_Object_Model#css_typed_object_model represents the result obtained by calling [add()], [sub()], or [toSum()] on [CSSNumericValue].\nA CSSMathSum is the object type returned when the  [StylePropertyMapReadOnly.get()] method is used on a CSS property whose value is created with a [calc()] function.\n  \n    \n    \n      CSSStyleValue\n    \n  \n  \n    \n    \n      CSSNumericValue\n    \n  \n  \n    \n    \n      CSSMathValue\n    \n  \n  \n    \n    \n      CSSMathSum\n    \n  ",
    "members": []
  },
  "CSSMathValue": {
    "name": "CSSMathValue",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/CSSMathValue\"><code>CSSMathValue</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/CSSMathValue",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  interface of the CSS_Object_Model#css_typed_object_model a base class for classes representing complex numeric values.\n  \n    \n    \n      CSSStyleValue\n    \n  \n  \n    \n    \n      CSSNumericValue\n    \n  \n  \n    \n    \n      CSSMathValue\n    \n  ",
    "members": []
  },
  "CSSMatrixComponent": {
    "name": "CSSMatrixComponent",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/CSSMatrixComponent\"><code>CSSMatrixComponent</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/CSSMatrixComponent",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  interface of the CSS_Object_Model#css_typed_object_model represents the matrix() and matrix3d() values of the individual [transform] property in CSS. It inherits properties and methods from its parent [CSSTransformValue].\n  \n    \n    \n      CSSTransformComponent\n    \n  \n  \n    \n    \n      CSSMatrixComponent\n    \n  ",
    "members": []
  },
  "CSSMediaRule": {
    "name": "CSSMediaRule",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/CSSMediaRule\"><code>CSSMediaRule</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/CSSMediaRule",
    "desc": "The  interface represents a single CSS [@media] rule.\n  \n    \n    \n      CSSRule\n    \n  \n  \n    \n    \n      CSSGroupingRule\n    \n  \n  \n    \n    \n      CSSConditionRule\n    \n  \n  \n    \n    \n      CSSMediaRule\n    \n  ",
    "members": []
  },
  "CSSNamespaceRule": {
    "name": "CSSNamespaceRule",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/CSSNamespaceRule\"><code>CSSNamespaceRule</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/CSSNamespaceRule",
    "desc": "The  interface describes an object representing a single CSS [@namespace] [at-rule].\n  \n    \n    \n      CSSRule\n    \n  \n  \n    \n    \n      CSSNamespaceRule\n    \n  ",
    "members": []
  },
  "CSSNumericArray": {
    "name": "CSSNumericArray",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/CSSNumericArray\"><code>CSSNumericArray</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/CSSNumericArray",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  interface of the CSS_Object_Model#css_typed_object_model  contains a list of [CSSNumericValue] objects.",
    "members": []
  },
  "CSSNumericValue": {
    "name": "CSSNumericValue",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/CSSNumericValue\"><code>CSSNumericValue</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/CSSNumericValue",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  interface of the CSS Typed Object Model API represents operations that all numeric values can perform.\n  \n    \n    \n      CSSStyleValue\n    \n  \n  \n    \n    \n      CSSNumericValue\n    \n  ",
    "members": []
  },
  "CSSOMString": {
    "name": "CSSOMString",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/CSSOMString\"><code>CSSOMString</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/CSSOMString",
    "desc": " is used to denote string data in CSSOM specifications and can refer to either [DOMString] or [USVString]. When a specification says , it depends on the browser vendors to choose whether to use [DOMString] or [USVString]. While browser implementations that use UTF-8 internally to represent strings in memory can use [USVString] when the specification says , implementations that already represent strings as 16-bit sequences might choose to use [DOMString] instead.\nImplementation differences\n\n  \n    \n      Browser\n      DOMString or USVString for CSSOMString\n    \n  \n  \n    \n      Firefox (Gecko)\n      USVString\n    \n    \n      Chrome (Blink)\n      USVString\n    \n    \n      Safari (WebKit)\n      USVString\n    \n    \n      Edge (EdgeHTML)\n      -\n    \n    \n      Opera (Blink)\n      USVString\n    \n  \n",
    "members": []
  },
  "CSSPageRule": {
    "name": "CSSPageRule",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/CSSPageRule\"><code>CSSPageRule</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/CSSPageRule",
    "desc": " represents a single CSS [@page] rule.\n  \n    \n    \n      CSSRule\n    \n  \n  \n    \n    \n      CSSGroupingRule\n    \n  \n  \n    \n    \n      CSSPageRule\n    \n  ",
    "members": []
  },
  "CSSPerspective": {
    "name": "CSSPerspective",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/CSSPerspective\"><code>CSSPerspective</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/CSSPerspective",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  interface of the CSS_Object_Model#css_typed_object_model represents the perspective() value of the individual [transform] property in CSS.  It inherits properties and methods from its parent [CSSTransformValue].\n  \n    \n    \n      CSSTransformComponent\n    \n  \n  \n    \n    \n      CSSPerspective\n    \n  ",
    "members": []
  },
  "CSSPositionValue": {
    "name": "CSSPositionValue",
    "experimental": true,
    "deprecated": true,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/CSSPositionValue\"><code>CSSPositionValue</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/CSSPositionValue",
    "desc": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.\nThe  interface of the CSS Typed Object Model API represents values for properties that take a position, for example [object-position].",
    "members": []
  },
  "CSSPrimitiveValue": {
    "name": "CSSPrimitiveValue",
    "experimental": false,
    "deprecated": true,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/CSSPrimitiveValue\"><code>CSSPrimitiveValue</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/CSSPrimitiveValue",
    "desc": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.\nThe  interface derives from the [CSSValue] interface and represents the current computed value of a CSS property.\n\n  \n    Note: This interface was part of an attempt to create a typed CSS Object Model. This attempt has been abandoned, and most browsers do\n    not implement it.\n  \n  To achieve your purpose, you can use:\n  \n    the untyped CSS Object Model, widely supported, or\n    the modern CSS Typed Object Model API, less supported and considered experimental.\n  \n\nThis interface represents a single CSS value. It may be used to determine the value of a specific style property currently set in a block or to set a specific style property explicitly within the block. An instance of this interface might be obtained from the [getPropertyCSSValue()] method of the [CSSStyleDeclaration] interface. A  object only occurs in a context of a CSS property.\nConversions are allowed between absolute values (from millimeters to centimeters, from degrees to radians, and so on) but not between relative values. (For example, a pixel value cannot be converted to a centimeter value.) Percentage values can't be converted since they are relative to the parent value (or another property value). There is one exception for color percentage values: since a color percentage value is relative to the range 0-255, a color percentage value can be converted to a number (see also the [RGBColor] interface).",
    "members": []
  },
  "CSSPropertyRule": {
    "name": "CSSPropertyRule",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/CSSPropertyRule\"><code>CSSPropertyRule</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/CSSPropertyRule",
    "desc": "The  interface of the CSS_Properties_and_Values_API represents a single CSS [@property] rule.\n  \n    \n    \n      CSSRule\n    \n  \n  \n    \n    \n      CSSPropertyRule\n    \n  ",
    "members": []
  },
  "CSSPseudoElement": {
    "name": "CSSPseudoElement",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/CSSPseudoElement\"><code>CSSPseudoElement</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/CSSPseudoElement",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  interface represents a pseudo-element that may be the target of an event or animated using the Web Animations API. Instances of this interface may be obtained by calling [Element.pseudo()].\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      CSSPseudoElement\n    \n  ",
    "members": []
  },
  "CSSRotate": {
    "name": "CSSRotate",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/CSSRotate\"><code>CSSRotate</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/CSSRotate",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  interface of the CSS_Object_Model#css_typed_object_model represents the rotate value of the individual [transform] property in CSS. It inherits properties and methods from its parent [CSSTransformValue].\n  \n    \n    \n      CSSTransformComponent\n    \n  \n  \n    \n    \n      CSSRotate\n    \n  ",
    "members": []
  },
  "CSSRule": {
    "name": "CSSRule",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/CSSRule\"><code>CSSRule</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/CSSRule",
    "desc": "The  interface represents a single CSS rule. There are several types of rules which inherit properties from .\n\n  [CSSStyleRule]\n  [CSSImportRule]\n  [CSSMediaRule]\n  [CSSFontFaceRule]\n  [CSSPageRule]\n  [CSSNamespaceRule]\n  [CSSKeyframesRule]\n  [CSSKeyframeRule]\n  [CSSCounterStyleRule]\n  [CSSDocumentRule]\n  [CSSSupportsRule]\n  [CSSFontFeatureValuesRule]\n  [CSSViewportRule]\n",
    "members": []
  },
  "CSSRuleList": {
    "name": "CSSRuleList",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/CSSRuleList\"><code>CSSRuleList</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/CSSRuleList",
    "desc": "A  represents an ordered collection of read-only [CSSRule] objects.\nWhile the  object is read-only, and cannot be directly modified, it is considered a [live] object, as the content can change over time.\nTo edit the underlying rules returned by [CSSRule] objects, use [CSSStyleSheet.insertRule()] and [CSSStyleSheet.deleteRule()], which are methods of [CSSStyleSheet].\nThe interface has no constructor. An instance of  is returned by [CSSStyleSheet.cssRules] and [CSSKeyframesRule.cssRules].",
    "members": []
  },
  "CSSScale": {
    "name": "CSSScale",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/CSSScale\"><code>CSSScale</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/CSSScale",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  interface of the CSS_Object_Model#css_typed_object_model represents the scale() and scale3d() values of the individual [transform] property in CSS. It inherits properties and methods from its parent [CSSTransformValue].\n  \n    \n    \n      CSSTransformComponent\n    \n  \n  \n    \n    \n      CSSScale\n    \n  ",
    "members": []
  },
  "CSSSkew": {
    "name": "CSSSkew",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/CSSSkew\"><code>CSSSkew</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/CSSSkew",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  interface of the CSS_Object_Model#css_typed_object_model is part of the [CSSTransformValue] interface. It represents the [skew()] value of the individual [transform] property in CSS.\n  \n    \n    \n      CSSTransformComponent\n    \n  \n  \n    \n    \n      CSSSkew\n    \n  ",
    "members": []
  },
  "CSSSkewX": {
    "name": "CSSSkewX",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/CSSSkewX\"><code>CSSSkewX</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/CSSSkewX",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  interface of the CSS_Object_Model#css_typed_object_model represents the [skewX()] value of the individual [transform] property in CSS. It inherits properties and methods from its parent [CSSTransformValue].\n  \n    \n    \n      CSSTransformComponent\n    \n  \n  \n    \n    \n      CSSSkewX\n    \n  ",
    "members": []
  },
  "CSSSkewY": {
    "name": "CSSSkewY",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/CSSSkewY\"><code>CSSSkewY</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/CSSSkewY",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  interface of the CSS_Object_Model#css_typed_object_model represents the [skewY()] value of the individual [transform] property in CSS. It inherits properties and methods from its parent [CSSTransformValue].\n  \n    \n    \n      CSSTransformComponent\n    \n  \n  \n    \n    \n      CSSSkewY\n    \n  ",
    "members": []
  },
  "CSSStyleDeclaration": {
    "name": "CSSStyleDeclaration",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/CSSStyleDeclaration\"><code>CSSStyleDeclaration</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/CSSStyleDeclaration",
    "desc": "The  interface represents an object that is a CSS declaration block, and exposes style information and various style-related methods and properties.\nA  object can be exposed using three different APIs:\n\n  Via [HTMLElement.style], which deals with the inline styles of a single element (e.g., [<div style=\"...\">]).\n  Via the [CSSStyleSheet] API. For example, [document.styleSheets[0].cssRules[0].style] returns a  object on the first CSS rule in the document's first stylesheet.\n  Via [Window.getComputedStyle()], which exposes the  object as a read-only interface.\n",
    "members": []
  },
  "CSSStyleRule": {
    "name": "CSSStyleRule",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/CSSStyleRule\"><code>CSSStyleRule</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/CSSStyleRule",
    "desc": "The  interface represents a single CSS style rule.\n  \n    \n    \n      CSSRule\n    \n  \n  \n    \n    \n      CSSStyleRule\n    \n  ",
    "members": []
  },
  "CSSStyleSheet": {
    "name": "CSSStyleSheet",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/CSSStyleSheet\"><code>CSSStyleSheet</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/CSSStyleSheet",
    "desc": "The  interface represents a single CSS stylesheet, and lets you inspect and modify the list of rules contained in the stylesheet. It inherits properties and methods from its parent, [StyleSheet].\n  \n    \n    \n      StyleSheet\n    \n  \n  \n    \n    \n      CSSStyleSheet\n    \n  \nA stylesheet consists of a collection of [CSSRule] objects representing each of the rules in the stylesheet. The rules are contained in a [CSSRuleList], which can be obtained from the stylesheet's [cssRules] property.\nFor example, one rule might be a [CSSStyleRule] object containing a style such as:\n[h1, h2 {\n  font-size: 16pt;\n}\n]\nAnother rule might be an at-rule such as [@import] or [@media], and so forth.\nSee the Obtaining a StyleSheet section for the various ways a  object can be obtained. A  object can also be directly constructed. The constructor, and the [CSSStyleSheet.replace()], and [CSSStyleSheet.replaceSync()] methods are newer additions to the specification, enabling Constructable Stylesheets.",
    "members": []
  },
  "CSSStyleValue": {
    "name": "CSSStyleValue",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/CSSStyleValue\"><code>CSSStyleValue</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/CSSStyleValue",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  interface of the CSS Typed Object Model API is the base class of all CSS values accessible through the Typed OM API. An instance of this class may be used anywhere a string is expected.",
    "members": []
  },
  "CSSSupportsRule": {
    "name": "CSSSupportsRule",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/CSSSupportsRule\"><code>CSSSupportsRule</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/CSSSupportsRule",
    "desc": "The  interface represents a single CSS [@supports] [at-rule].\n  \n    \n    \n      CSSRule\n    \n  \n  \n    \n    \n      CSSGroupingRule\n    \n  \n  \n    \n    \n      CSSConditionRule\n    \n  \n  \n    \n    \n      CSSSupportsRule\n    \n  ",
    "members": []
  },
  "CSSTransformComponent": {
    "name": "CSSTransformComponent",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/CSSTransformComponent\"><code>CSSTransformComponent</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/CSSTransformComponent",
    "desc": "The  interface of the CSS_Object_Model#css_typed_object_model is part of the [CSSTransformValue] interface.",
    "members": []
  },
  "CSSTransformValue": {
    "name": "CSSTransformValue",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/CSSTransformValue\"><code>CSSTransformValue</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/CSSTransformValue",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  interface of the CSS_Object_Model#css_typed_object_model represents [transform-list] values as used by the CSS [transform] property.\n  \n    \n    \n      CSSStyleValue\n    \n  \n  \n    \n    \n      CSSTransformValue\n    \n  ",
    "members": []
  },
  "CSSTransition": {
    "name": "CSSTransition",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/CSSTransition\"><code>CSSTransition</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/CSSTransition",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  interface of the Web Animations API represents an [Animation] object used for a CSS Transition.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Animation\n    \n  \n  \n    \n    \n      CSSTransition\n    \n  ",
    "members": []
  },
  "CSSTranslate": {
    "name": "CSSTranslate",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/CSSTranslate\"><code>CSSTranslate</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/CSSTranslate",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  interface of the CSS_Object_Model#css_typed_object_model represents the translate() value of the individual [transform] property in CSS. It inherits properties and methods from its parent [CSSTransformValue].\n  \n    \n    \n      CSSTransformComponent\n    \n  \n  \n    \n    \n      CSSTranslate\n    \n  ",
    "members": []
  },
  "CSSUnitValue": {
    "name": "CSSUnitValue",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/CSSUnitValue\"><code>CSSUnitValue</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/CSSUnitValue",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  interface of the CSS_Object_Model#css_typed_object_model represents values that contain a single unit type. For example, \"42px\" would be represented by a [CSSNumericValue].\n  \n    \n    \n      CSSStyleValue\n    \n  \n  \n    \n    \n      CSSNumericValue\n    \n  \n  \n    \n    \n      CSSUnitValue\n    \n  ",
    "members": []
  },
  "CSSUnparsedValue": {
    "name": "CSSUnparsedValue",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/CSSUnparsedValue\"><code>CSSUnparsedValue</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/CSSUnparsedValue",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  interface of the CSS_Object_Model#css_typed_object_model represents property values that reference custom properties. It consists of a list of string fragments and variable references.\nCustom properties are represented by  and [var()] references are represented using [CSSVariableReferenceValue].\n  \n    \n    \n      CSSStyleValue\n    \n  \n  \n    \n    \n      CSSUnparsedValue\n    \n  ",
    "members": []
  },
  "CSSValue": {
    "name": "CSSValue",
    "experimental": false,
    "deprecated": true,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/CSSValue\"><code>CSSValue</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/CSSValue",
    "desc": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.\nThe  interface represents the current computed value of a CSS property.\n\n  \n    Note: This interface was part of an attempt to create a typed CSS Object Model. This attempt has been abandoned, and most browsers do\n    not implement it.\n  \n  To achieve your purpose, you can use:\n  \n    the untyped CSS Object Model, widely supported, or\n    the modern CSS Typed Object Model API, less supported and considered experimental.\n  \n",
    "members": []
  },
  "CSSValueList": {
    "name": "CSSValueList",
    "experimental": false,
    "deprecated": true,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/CSSValueList\"><code>CSSValueList</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/CSSValueList",
    "desc": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.\nThe  interface derives from the [CSSValue] interface and provides the abstraction of an ordered collection of CSS values.\n\n  \n    Note: This interface was part of an attempt to create a typed CSS Object Model. This attempt has been abandoned, and most browsers do\n    not implement it.\n  \n  To achieve your purpose, you can use:\n  \n    the untyped CSS Object Model, widely supported, or\n    the modern CSS Typed Object Model API, less supported and considered experimental.\n  \n\nSome properties allow an empty list in their syntax. In that case, these properties take the [none] identifier. So, an empty list means that the property has the value [none].\nThe items in the  are accessible via an integral index, starting from 0.",
    "members": []
  },
  "CSSVariableReferenceValue": {
    "name": "CSSVariableReferenceValue",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/CSSVariableReferenceValue\"><code>CSSVariableReferenceValue</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/CSSVariableReferenceValue",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  interface of the CSS_Object_Model#css_typed_object_model allows you to create a custom name for a built-in CSS value. This object functionality is sometimes called a \"CSS variable\" and serves the same purpose as the [var()] function. The custom name must begin with two dashes.",
    "members": []
  },
  "CustomElementRegistry": {
    "name": "CustomElementRegistry",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/CustomElementRegistry\"><code>CustomElementRegistry</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/CustomElementRegistry",
    "desc": "The  interface provides methods for registering custom elements and querying registered elements. To get an instance of it, use the [window.customElements] property.",
    "members": []
  },
  "CustomEvent": {
    "name": "CustomEvent",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/CustomEvent\"><code>CustomEvent</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/CustomEvent",
    "desc": "The  interface represents events initialized by an application for any purpose.\n  Note: This feature is available in Web Workers\n\n\n  \n    \n    \n      Event\n    \n  \n  \n    \n    \n      CustomEvent\n    \n  ",
    "members": []
  },
  "CustomStateSet": {
    "name": "CustomStateSet",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/CustomStateSet\"><code>CustomStateSet</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/CustomStateSet",
    "desc": "The  interface of the Document_Object_Model stores a list of possible states for a custom element to be in, and allows states to be added and removed from the set.",
    "members": []
  },
  "DataTransfer": {
    "name": "DataTransfer",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/DataTransfer\"><code>DataTransfer</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/DataTransfer",
    "desc": "The  object is used to hold the data that is being dragged during a drag and drop operation. It may hold one or more data items, each of one or more data types. For more information about drag and drop, see HTML Drag and Drop API.\nThis object is available from the [dataTransfer] property of all [drag events].",
    "members": []
  },
  "DataTransferItem": {
    "name": "DataTransferItem",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/DataTransferItem\"><code>DataTransferItem</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/DataTransferItem",
    "desc": "The  object represents one drag data item. During a drag operation, each [drag event] has a [dataTransfer] property which contains a [list] of drag data items. Each item in the list is a  object.\nThis interface has no constructor.",
    "members": []
  },
  "DataTransferItemList": {
    "name": "DataTransferItemList",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/DataTransferItemList\"><code>DataTransferItemList</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/DataTransferItemList",
    "desc": "The  object is a list of [DataTransferItem] objects representing items being dragged. During a drag operation, each [DragEvent] has a [dataTransfer] property and that property is a .\nThe individual items can be accessed using the array operator [[]].\nThis interface has no constructor.",
    "members": []
  },
  "DecompressionStream": {
    "name": "DecompressionStream",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/DecompressionStream\"><code>DecompressionStream</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/DecompressionStream",
    "desc": "The  interface of the Compression Streams API is an API for decompressing a stream of data.",
    "members": []
  },
  "DedicatedWorkerGlobalScope": {
    "name": "DedicatedWorkerGlobalScope",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/DedicatedWorkerGlobalScope\"><code>DedicatedWorkerGlobalScope</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/DedicatedWorkerGlobalScope",
    "desc": "The  object (the [Worker] global scope) is accessible through the [self] keyword. Some additional global functions, namespaces objects, and constructors, not typically associated with the worker global scope, but available on it, are listed in the JavaScript Reference. See also: Functions available to workers.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      WorkerGlobalScope\n    \n  \n  \n    \n    \n      DedicatedWorkerGlobalScope\n    \n  ",
    "members": []
  },
  "DelayNode": {
    "name": "DelayNode",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/DelayNode\"><code>DelayNode</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/DelayNode",
    "desc": "The  interface represents a delay-line; an [AudioNode] audio-processing module that causes a delay between the arrival of an input data and its propagation to the output.\nA  always has exactly one input and one output, both with the same amount of channels.\n\n  \n\nWhen creating a graph that has a cycle, it is mandatory to have at least one  in the cycle, or the nodes taking part in the cycle will be muted.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      AudioNode\n    \n  \n  \n    \n    \n      DelayNode\n    \n  \n\n  \n    \n      Number of inputs\n      [1]\n    \n    \n      Number of outputs\n      [1]\n    \n    \n      Channel count mode\n      [\"max\"]\n    \n    \n      Channel count\n      [2] (not used in the default count mode)\n    \n    \n      Channel interpretation\n      [\"speakers\"]\n    \n  \n",
    "members": []
  },
  "DeprecationReportBody": {
    "name": "DeprecationReportBody",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/DeprecationReportBody\"><code>DeprecationReportBody</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/DeprecationReportBody",
    "desc": "The  interface of the Reporting API represents the body of a deprecation report.\nA deprecation report is generated when a deprecated feature (for example a deprecated API method) is used on a document being observed by a [ReportingObserver]. In addition to the support of this API, receiving useful deprecation warnings relies on browser vendors adding these warnings for deprecated features.\n  \n    \n    \n      ReportBody\n    \n  \n  \n    \n    \n      DeprecationReportBody\n    \n  ",
    "members": []
  },
  "DeviceMotionEvent": {
    "name": "DeviceMotionEvent",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/DeviceMotionEvent\"><code>DeviceMotionEvent</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/DeviceMotionEvent",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  provides web developers with information about the speed of changes for the device's position and orientation.\n\n  Warning: Currently, Firefox and Chrome do not handle the coordinates the same way. Take care about this while using them.\n\n  \n    \n    \n      Event\n    \n  \n  \n    \n    \n      DeviceMotionEvent\n    \n  ",
    "members": []
  },
  "DeviceMotionEventAcceleration": {
    "name": "DeviceMotionEventAcceleration",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/DeviceMotionEventAcceleration\"><code>DeviceMotionEventAcceleration</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/DeviceMotionEventAcceleration",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nA  object provides information about the amount of acceleration the device is experiencing along all three axes.",
    "members": []
  },
  "DeviceMotionEventRotationRate": {
    "name": "DeviceMotionEventRotationRate",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/DeviceMotionEventRotationRate\"><code>DeviceMotionEventRotationRate</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/DeviceMotionEventRotationRate",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers. Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nA  object provides information about the rate at which the device is rotating around all three axes.",
    "members": []
  },
  "DeviceOrientationEvent": {
    "name": "DeviceOrientationEvent",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/DeviceOrientationEvent\"><code>DeviceOrientationEvent</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/DeviceOrientationEvent",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  provides web developers with information from the physical orientation of the device running the web page.\n  \n    \n    \n      Event\n    \n  \n  \n    \n    \n      DeviceOrientationEvent\n    \n  ",
    "members": []
  },
  "DeviceProximityEvent": {
    "name": "DeviceProximityEvent",
    "experimental": false,
    "deprecated": true,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/DeviceProximityEvent\"><code>DeviceProximityEvent</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/DeviceProximityEvent",
    "desc": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.\n\n  Warning:  is not supported by any current major browser, and should not be used.\n\nThe  interface provides information about the distance of a nearby physical object using the proximity sensor of a device.",
    "members": []
  },
  "DirectoryEntrySync": {
    "name": "DirectoryEntrySync",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/DirectoryEntrySync\"><code>DirectoryEntrySync</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/DirectoryEntrySync",
    "desc": "Non-standard: This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.\nThe  interface of the File System API represents a directory in a file system. It includes methods for creating, reading, looking up, and recursively removing files in a directory.\n\n  Note: This interface has been abandoned: it was on a standard track and it proves not a good idea. Do not use it anymore.\n",
    "members": []
  },
  "DirectoryReaderSync": {
    "name": "DirectoryReaderSync",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/DirectoryReaderSync\"><code>DirectoryReaderSync</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/DirectoryReaderSync",
    "desc": "Non-standard: This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.\nThe  interface of the File System API lets you read the entries in a directory.\n\n  Note: This interface has been abandoned: it was on a standard track and it proves not a good idea. Do not use it anymore.\n",
    "members": []
  },
  "Document": {
    "name": "Document",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/Document\"><code>Document</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/Document",
    "desc": "The  interface represents any web page loaded in the browser and serves as an entry point into the web page's content, which is the DOM tree.\nThe DOM tree includes elements such as [<body>] and [<table>], among many others. It provides functionality globally to the document, like how to obtain the page's URL and create new elements in the document.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Document\n    \n  \nThe  interface describes the common properties and methods for any kind of document. Depending on the document's type (e.g. HTML, XML, SVG, …), a larger API is available: HTML documents, served with the [\"text/html\"] content type, also implement the [HTMLDocument] interface, whereas XML and SVG documents implement the [XMLDocument] interface.",
    "members": []
  },
  "DocumentFragment": {
    "name": "DocumentFragment",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/DocumentFragment\"><code>DocumentFragment</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/DocumentFragment",
    "desc": "The  interface represents a minimal document object that has no parent.\nIt is used as a lightweight version of [Document] that stores a segment of a document structure comprised of nodes just like a standard document. The key difference is due to the fact that the document fragment isn't part of the active document tree structure. Changes made to the fragment don't affect the document (even on reflow) or incur any performance impact when changes are made.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      DocumentFragment\n    \n  ",
    "members": []
  },
  "DocumentTimeline": {
    "name": "DocumentTimeline",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/DocumentTimeline\"><code>DocumentTimeline</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/DocumentTimeline",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  interface of the Web Animations API represents animation timelines, including the default document timeline (accessed via [Document.timeline]).\n  \n    \n    \n      AnimationTimeline\n    \n  \n  \n    \n    \n      DocumentTimeline\n    \n  ",
    "members": []
  },
  "DocumentType": {
    "name": "DocumentType",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/DocumentType\"><code>DocumentType</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/DocumentType",
    "desc": "The  interface represents a [Node] containing a doctype.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      DocumentType\n    \n  ",
    "members": []
  },
  "DOMError": {
    "name": "DOMError",
    "experimental": false,
    "deprecated": true,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/DOMError\"><code>DOMError</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/DOMError",
    "desc": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.\nThe  interface describes an error object that contains an error name.",
    "members": []
  },
  "DOMException": {
    "name": "DOMException",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/DOMException\"><code>DOMException</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/DOMException",
    "desc": "The  interface represents an abnormal event (called an exception) that occurs as a result of calling a method or accessing a property of a web API. This is how error conditions are described in web APIs.\nEach exception has a name, which is a short \"PascalCase\"-style string identifying the error or abnormal condition.",
    "members": []
  },
  "DOMHighResTimeStamp": {
    "name": "DOMHighResTimeStamp",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/DOMHighResTimeStamp\"><code>DOMHighResTimeStamp</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/DOMHighResTimeStamp",
    "desc": "The  type is a [double] and is used to store a time value in milliseconds.\nThis type can be used to describe a discrete point in time or a time interval (the difference in time between two discrete points in time).\nThe time, given in milliseconds, should be accurate to 5 µs (microseconds), with the fractional part of the number indicating fractions of a millisecond. However, if the browser is unable to provide a time value accurate to 5 µs (due, for example, to hardware or software constraints), the browser can represent the value as a time in milliseconds accurate to a millisecond. Also note the section below on reduced time precision controlled by browser preferences to avoid timing attacks and fingerprinting.\nFurther, if the device or operating system the user agent is running on doesn't have a clock accurate to the microsecond level, they may only be accurate to the millisecond.",
    "members": []
  },
  "DOMImplementation": {
    "name": "DOMImplementation",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/DOMImplementation\"><code>DOMImplementation</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/DOMImplementation",
    "desc": "The  interface represents an object providing methods which are not dependent on any particular document. Such an object is returned by the [Document.implementation] property.",
    "members": []
  },
  "DOMMatrix": {
    "name": "DOMMatrix",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/DOMMatrix\"><code>DOMMatrix</code> (WebKitCSSMatrix)</a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/DOMMatrix",
    "desc": "The  interface represents 4×4 matrices, suitable for 2D and 3D operations including rotation and translation. It is a mutable version of the [DOMMatrixReadOnly] interface.\n[WebKitCSSMatrix] is an alias to .\nThis interface should be available inside web workers, though some implementations don't allow it yet.\n  \n    \n    \n      DOMMatrixReadOnly\n    \n  \n  \n    \n    \n      DOMMatrix\n    \n  ",
    "members": []
  },
  "DOMMatrixReadOnly": {
    "name": "DOMMatrixReadOnly",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/DOMMatrixReadOnly\"><code>DOMMatrixReadOnly</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/DOMMatrixReadOnly",
    "desc": "The  interface represents a read-only 4×4 matrix, suitable for 2D and 3D operations. The [DOMMatrix] interface — which is based upon —adds mutability, allowing you to alter the matrix after creating it.\nThis interface should be available inside web workers, though some implementations doesn't allow it yet.",
    "members": []
  },
  "DOMParser": {
    "name": "DOMParser",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/DOMParser\"><code>DOMParser</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/DOMParser",
    "desc": "\n  The  interface provides\n  the ability to parse XML or HTML source code from a\n  string into a DOM [Document].\n\n\n  You can perform the opposite operation—converting a DOM tree into XML or HTML\n  source—using the [XMLSerializer] interface.\n\n\n  In the case of an HTML document, you can also replace portions of the DOM with new DOM\n  trees built from HTML by setting the value of the [Element.innerHTML] and\n  [outerHTML] properties. These properties can also be\n  read to fetch HTML fragments corresponding to the corresponding DOM subtree.\n\n\n  Note that [XMLHttpRequest] can parse XML and HTML directly\n  from a URL-addressable resource, returning a [Document] in its\n  [response] property.\n\n\n  \n    Note: Be aware that block-level elements\n    like [<p>] will be automatically closed if another\n    block-level element is nested inside and therefore parsed before the closing [</p>] tag.\n  \n",
    "members": []
  },
  "DOMPoint": {
    "name": "DOMPoint",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/DOMPoint\"><code>DOMPoint</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/DOMPoint",
    "desc": "A  object represents a 2D or 3D point in a coordinate system; it includes values for the coordinates in up to three dimensions, as well as an optional perspective value.  is based on [DOMPointReadOnly] but allows its properties' values to be changed.\nIn general, a positive [x] component represents a position to the right of the origin, a positive [y] component is downward from the origin, and a positive [z] component extends outward from the screen (in other words, toward the user).\n  \n    \n    \n      DOMPointReadOnly\n    \n  \n  \n    \n    \n      DOMPoint\n    \n  ",
    "members": []
  },
  "DOMPointReadOnly": {
    "name": "DOMPointReadOnly",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/DOMPointReadOnly\"><code>DOMPointReadOnly</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/DOMPointReadOnly",
    "desc": "The  interface specifies the coordinate and perspective fields used by [DOMPoint] to define a 2D or 3D point in a coordinate system.\n  Note: This feature is available in Web Workers\n\nThere are two ways to create a new  instance. First, you can use its constructor, passing in the values of the parameters for each dimension and, optionally, the perspective:\n[/* 2D */\nconst point = new DOMPointReadOnly(50, 50);\n\n/* 3D */\nconst point = new DOMPointReadOnly(50, 50, 25);\n\n/* 3D with perspective */\nconst point = new DOMPointReadOnly(100, 100, 100, 1.0);\n]\nThe other option is to use the static [DOMPointReadOnly.fromPoint()] method:\n[const point = DOMPointReadOnly.fromPoint({x: 100, y: 100, z: 50; w: 1.0});\n]",
    "members": []
  },
  "DOMQuad": {
    "name": "DOMQuad",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/DOMQuad\"><code>DOMQuad</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/DOMQuad",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nA  is a collection of four [DOMPoint]s defining the corners of an arbitrary quadrilateral. Returning s lets [getBoxQuads()] return accurate information even when arbitrary 2D or 3D transforms are present. It has a handy [bounds] attribute returning a [DOMRectReadOnly] for those cases where you just want an axis-aligned bounding rectangle.",
    "members": []
  },
  "DOMRect": {
    "name": "DOMRect",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/DOMRect\"><code>DOMRect</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/DOMRect",
    "desc": "A  describes the size and position of a rectangle.\nThe type of box represented by the  is specified by the method or property that returned it. For example, [VREyeParameters.renderRect] from the WebVR API specifies the viewport of a canvas into which visuals for one eye of a head mounted display should be rendered.\nIt inherits from its parent, [DOMRectReadOnly].\n  \n    \n    \n      DOMRectReadOnly\n    \n  \n  \n    \n    \n      DOMRect\n    \n  ",
    "members": []
  },
  "DOMRectReadOnly": {
    "name": "DOMRectReadOnly",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/DOMRectReadOnly\"><code>DOMRectReadOnly</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/DOMRectReadOnly",
    "desc": "The  interface specifies the standard properties used by [DOMRect] to define a rectangle whose properties are immutable.",
    "members": []
  },
  "DOMString": {
    "name": "DOMString",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/DOMString\"><code>DOMString</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/DOMString",
    "desc": "A  is a sequence of 16-bit unsigned integers, typically interpreted as UTF-16 code units. This corresponds exactly to the JavaScript primitive String type. When a  is provided to JavaScript, it maps directly to the corresponding [String].\nWhen a Web API accepts a , the value provided will be stringified, using the [ToString] abstract operation. (For types other than Symbol, this has the same behavior as the [String()] function.)\nCertain Web APIs accepting a  have an additional legacy behavior, where passing [null] stringifies to the empty string instead of the usual [\"null\"].",
    "members": []
  },
  "DOMStringList": {
    "name": "DOMStringList",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/DOMStringList\"><code>DOMStringList</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/DOMStringList",
    "desc": "A type returned by some APIs which contains a list of DOMString (strings).",
    "members": []
  },
  "DOMStringMap": {
    "name": "DOMStringMap",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/DOMStringMap\"><code>DOMStringMap</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/DOMStringMap",
    "desc": "The  interface is used for the [HTMLElement.dataset]/[SVGElement.dataset] attribute, to represent data for custom attributes added to elements.",
    "members": []
  },
  "DOMTimeStamp": {
    "name": "DOMTimeStamp",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/DOMTimeStamp\"><code>DOMTimeStamp</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/DOMTimeStamp",
    "desc": "The  type represents an absolute or relative number of milliseconds, depending on the specification in which it appears.",
    "members": []
  },
  "DOMTokenList": {
    "name": "DOMTokenList",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/DOMTokenList\"><code>DOMTokenList</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/DOMTokenList",
    "desc": "The  interface represents a set of space-separated tokens. Such a set is returned by [Element.classList] or [HTMLLinkElement.relList], and many others.\nA  is indexed beginning with [0] as with JavaScript [Array] objects.  is always case-sensitive.",
    "members": []
  },
  "DragEvent": {
    "name": "DragEvent",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/DragEvent\"><code>DragEvent</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/DragEvent",
    "desc": "The  interface is a [DOM event] that represents a drag and drop interaction. The user initiates a drag by placing a pointer device (such as a mouse) on the touch surface and then dragging the pointer to a new location (such as another DOM element). Applications are free to interpret a drag and drop interaction in an application-specific way.\nThis interface inherits properties from [MouseEvent] and [Event].\n  \n    \n    \n      Event\n    \n  \n  \n    \n    \n      UIEvent\n    \n  \n  \n    \n    \n      MouseEvent\n    \n  \n  \n    \n    \n      DragEvent\n    \n  ",
    "members": []
  },
  "DynamicsCompressorNode": {
    "name": "DynamicsCompressorNode",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/DynamicsCompressorNode\"><code>DynamicsCompressorNode</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/DynamicsCompressorNode",
    "desc": "The  interface provides a compression effect, which lowers the volume of the loudest parts of the signal in order to help prevent clipping and distortion that can occur when multiple sounds are played and multiplexed together at once. This is often used in musical production and game audio.  is an [AudioNode] that has exactly one input and one output.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      AudioNode\n    \n  \n  \n    \n    \n      DynamicsCompressorNode\n    \n  \n\n  \n    \n      Number of inputs\n      [1]\n    \n    \n      Number of outputs\n      [1]\n    \n    \n      Channel count mode\n      [\"clamped-max\"]\n    \n    \n      Channel count\n      [2]\n    \n    \n      Channel interpretation\n      [\"speakers\"]\n    \n  \n",
    "members": []
  },
  "EcdhKeyDeriveParams": {
    "name": "EcdhKeyDeriveParams",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/EcdhKeyDeriveParams\"><code>EcdhKeyDeriveParams</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/EcdhKeyDeriveParams",
    "desc": "The  dictionary of the Web Crypto API represents the object that should be passed as the [algorithm] parameter into [SubtleCrypto.deriveKey()],  when using the ECDH algorithm.\nECDH enables two people who each have a key pair consisting of a public and a private key to derive a shared secret. They exchange public keys and use the combination of their private key and the other entity's public key to derive a secret key that they — and noone else — share.\nThe parameters for ECDH [deriveKey()] therefore include the other entity's public key, which is combined with this entity's private key to derive the shared secret.",
    "members": []
  },
  "EcdsaParams": {
    "name": "EcdsaParams",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/EcdsaParams\"><code>EcdsaParams</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/EcdsaParams",
    "desc": "The  dictionary of the Web Crypto API represents the object that should be passed as the [algorithm] parameter into [SubtleCrypto.sign()] or [SubtleCrypto.verify()] when using the ECDSA algorithm.",
    "members": []
  },
  "EcKeyGenParams": {
    "name": "EcKeyGenParams",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/EcKeyGenParams\"><code>EcKeyGenParams</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/EcKeyGenParams",
    "desc": "The  dictionary of the Web Crypto API represents the object that should be passed as the [algorithm] parameter into [SubtleCrypto.generateKey()], when generating any elliptic-curve-based key pair: that is, when the algorithm is identified as either of ECDSA or ECDH.",
    "members": []
  },
  "EcKeyImportParams": {
    "name": "EcKeyImportParams",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/EcKeyImportParams\"><code>EcKeyImportParams</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/EcKeyImportParams",
    "desc": "The  dictionary of the Web Crypto API represents the object that should be passed as the [algorithm] parameter into [SubtleCrypto.importKey()] or [SubtleCrypto.unwrapKey()], when generating any elliptic-curve-based key pair: that is, when the algorithm is identified as either of ECDSA or ECDH.",
    "members": []
  },
  "Element": {
    "name": "Element",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/Element\"><code>Element</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/Element",
    "desc": " is the most general base class from which all element objects (i.e. objects that represent elements) in a [Document] inherit. It only has methods and properties common to all kinds of elements. More specific classes inherit from .\nFor example, the [HTMLElement] interface is the base interface for HTML elements, while the [SVGElement] interface is the basis for all SVG elements. Most functionality is specified further down the class hierarchy.\nLanguages outside the realm of the Web platform, like XUL through the [XULElement] interface, also implement .\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  ",
    "members": []
  },
  "ElementInternals": {
    "name": "ElementInternals",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/ElementInternals\"><code>ElementInternals</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/ElementInternals",
    "desc": "The  interface of the Document_Object_Model gives web developers a way to allow custom elements to fully participate in HTML forms. It provides utilities for working with these elements in the same way you would work with any standard HTML form element, and also exposes the Accessibility Object Model to the element.",
    "members": []
  },
  "EncodedAudioChunk": {
    "name": "EncodedAudioChunk",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/EncodedAudioChunk\"><code>EncodedAudioChunk</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/EncodedAudioChunk",
    "desc": "The  interface of the WebCodecs API represents a chunk of encoded audio data.",
    "members": []
  },
  "EncodedVideoChunk": {
    "name": "EncodedVideoChunk",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/EncodedVideoChunk\"><code>EncodedVideoChunk</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/EncodedVideoChunk",
    "desc": "The  interface of the WebCodecs API represents a chunk of encoded video data.",
    "members": []
  },
  "EpochTimeStamp": {
    "name": "EpochTimeStamp",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/EpochTimeStamp\"><code>EpochTimeStamp</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/EpochTimeStamp",
    "desc": "The  type represents a timestamp value in milliseconds (excluding leap seconds), relative to 01 January, 1970 00:00:00 UTC.\nThis was previously known as [DOMTimeStamp].",
    "members": []
  },
  "ErrorEvent": {
    "name": "ErrorEvent",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/ErrorEvent\"><code>ErrorEvent</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/ErrorEvent",
    "desc": "The  interface represents events providing information related to errors in scripts or in files.\n  \n    \n    \n      Event\n    \n  \n  \n    \n    \n      ErrorEvent\n    \n  ",
    "members": []
  },
  "Event": {
    "name": "Event",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/Event\"><code>Event</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/Event",
    "desc": "The  interface represents an event which takes place in the DOM.\nAn event can be triggered by the user action e.g. clicking the mouse button or tapping keyboard, or generated by APIs to represent the progress of an asynchronous task. It can also be triggered programmatically, such as by calling the [HTMLElement.click()] method of an element, or by defining the event, then sending it to a specified target using [EventTarget.dispatchEvent()].\nThere are many types of events, some of which use other interfaces based on the main  interface.  itself contains the properties and methods which are common to all events.\nMany DOM elements can be set up to accept (or \"listen\" for) these events, and execute code in response to process (or \"handle\") them. Event-handlers are usually connected (or \"attached\") to various HTML elements (such as [<button>], [<div>], [<span>], etc.) using [EventTarget.addEventListener()], and this generally replaces using the old HTML event handler attributes. Further, when properly added, such handlers can also be disconnected if needed using [removeEventListener()].\n\n  Note: One element can have several such handlers, even for the exact same event—particularly if separate, independent code modules attach them, each for its own independent purposes. (For example, a webpage with an advertising-module and statistics-module both monitoring video-watching.)\n\nWhen there are many nested elements, each with its own handler(s), event processing can become very complicated—especially where a parent element receives the very same event as its child elements because \"spatially\" they overlap so the event technically occurs in both, and the processing order of such events depends on the Event bubbling and capture settings of each handler triggered.",
    "members": []
  },
  "EventListener": {
    "name": "EventListener",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/EventListener\"><code>EventListener</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/EventListener",
    "desc": "The  interface represents an object that can handle an event dispatched by an [EventTarget] object.\n\n  Note: Due to the need for compatibility with legacy content,  accepts both a function and an object with a [handleEvent()] property function. This is shown in the example below.\n",
    "members": []
  },
  "EventSource": {
    "name": "EventSource",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/EventSource\"><code>EventSource</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/EventSource",
    "desc": "The  interface is web content's interface to server-sent events.\nAn  instance opens a persistent connection to an HTTP server, which sends events in [text/event-stream] format. The connection remains open until closed by calling [EventSource.close()].\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      EventSource\n    \n  \nOnce the connection is opened, incoming messages from the server are delivered to your code in the form of events. If there is an event field in the incoming message, the triggered event is the same as the event field value. If no event field is present, then a generic [message] event is fired.\nUnlike WebSockets, server-sent events are unidirectional; that is, data messages are delivered in one direction, from the server to the client (such as a user's web browser). That makes them an excellent choice when there's no need to send data from the client to the server in message form. For example,  is a useful approach for handling things like social media status updates, news feeds, or delivering data into a client-side storage mechanism like IndexedDB or web storage.\n\n  Warning: When not used over HTTP/2, SSE suffers from a limitation to the maximum number of open connections, which can be specially painful when opening various tabs as the limit is per browser and set to a very low number (6). The issue has been marked as \"Won't fix\" in Chrome and Firefox. This limit is per browser + domain, so that means that you can open 6 SSE connections across all of the tabs to [www.example1.com] and another 6 SSE connections to [www.example2.com.] (from Stackoverflow). When using HTTP/2, the maximum number of simultaneous HTTP streams is negotiated between the server and the client (defaults to 100).\n",
    "members": []
  },
  "EventTarget": {
    "name": "EventTarget",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/EventTarget\"><code>EventTarget</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/EventTarget",
    "desc": "\n  The  interface is implemented by objects that can receive events and may have listeners for them.\n  In other words, any target of events implements the three methods associated with this interface.\n\n\n  [Element], and its children, as well as [Document] and [Window], are the most common event targets,\n  but other objects can be event targets, too.\n  For example [XMLHttpRequest], [AudioNode], and [AudioContext] are also event targets.\n\nMany event targets (including elements, documents, and windows) also support setting event handlers via [onevent] properties and attributes.",
    "members": []
  },
  "EXT_blend_minmax": {
    "name": "EXT_blend_minmax",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/EXT_blend_minmax\"><code>EXT_blend_minmax</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/EXT_blend_minmax",
    "desc": "The  extension is part of the WebGL API and extends blending capabilities by adding two new blend equations: the minimum or maximum color components of the source and destination colors.\nWebGL extensions are available using the [WebGLRenderingContext.getExtension()] method. For more information, see also Using Extensions in the WebGL tutorial.\n\n  Note: This extension is only available to WebGL1 contexts. In WebGL2, the functionality of this extension is available on the WebGL2 context by default. The constants in WebGL2 are [gl.MIN] and [gl.MAX].\n",
    "members": []
  },
  "EXT_color_buffer_float": {
    "name": "EXT_color_buffer_float",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/EXT_color_buffer_float\"><code>EXT_color_buffer_float</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/EXT_color_buffer_float",
    "desc": "The  extension is part of WebGL and adds the ability to render a variety of floating point formats.\nWebGL extensions are available using the [WebGLRenderingContext.getExtension()] method. For more information, see also Using Extensions in the WebGL tutorial.\n\n  Note: This extension is available to WebGL 2 contexts only.\n  For WebGL 1, see the [EXT_color_buffer_half_float] and [WEBGL_color_buffer_float] extensions.\n",
    "members": []
  },
  "EXT_color_buffer_half_float": {
    "name": "EXT_color_buffer_half_float",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/EXT_color_buffer_half_float\"><code>EXT_color_buffer_half_float</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/EXT_color_buffer_half_float",
    "desc": "The  extension is part of the WebGL API and adds the ability to render to 16-bit floating-point color buffers.\nWebGL extensions are available using the [WebGLRenderingContext.getExtension()] method. For more information, see also Using Extensions in the WebGL tutorial.\n\n  Note: This extension is available to both, WebGL1 and WebGL2 contexts. On WebGL 2, it's an alternative to using the [EXT_color_buffer_float] extension on platforms that support 16-bit floating point render targets but not 32-bit floating point render targets.\n  The [OES_texture_half_float] extension implicitly enables this extension.\n",
    "members": []
  },
  "EXT_disjoint_timer_query": {
    "name": "EXT_disjoint_timer_query",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/EXT_disjoint_timer_query\"><code>EXT_disjoint_timer_query</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/EXT_disjoint_timer_query",
    "desc": "The EXT_disjoint_timer_query extension is part of the WebGL API and provides a way to measure the duration of a set of GL commands, without stalling the rendering pipeline.\nWebGL extensions are available using the [WebGLRenderingContext.getExtension()] method. For more information, see also Using Extensions in the WebGL tutorial.\n\n  Note: This extension should be available in WebGL1 contexts only. [EXT_disjoint_timer_query_webgl2] is available in WebGL 2 contexts .\n  \n    In WebGL 2, the [getQueryObject] was renamed to [getQueryParameter].\n    In WebGL 2, other queries (such as occlusion queries and primitive queries) are possible using [WebGLQuery] objects.\n  \n",
    "members": []
  },
  "EXT_float_blend": {
    "name": "EXT_float_blend",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/EXT_float_blend\"><code>EXT_float_blend</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/EXT_float_blend",
    "desc": "The WebGL API's  extension allows blending and draw buffers with 32-bit floating-point components.\nWebGL extensions are available using the [WebGLRenderingContext.getExtension()] method. For more information, see also Using Extensions in the WebGL tutorial.\n\n  Note: This extension is available to both, WebGL1 and WebGL2 contexts. However, to use it, you need to enable the use of 32-bit floating-point draw buffers by  enabling the extension [WEBGL_color_buffer_float] (for WebGL1) or [EXT_color_buffer_float] (for WebGL2). Doing so automatically enables  as well.\n\nWith this extension enabled, calling [drawArrays()] or [drawElements()] with blending enabled and a draw buffer with 32-bit floating-point components will no longer result in an [INVALID_OPERATION] error.",
    "members": []
  },
  "EXT_frag_depth": {
    "name": "EXT_frag_depth",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/EXT_frag_depth\"><code>EXT_frag_depth</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/EXT_frag_depth",
    "desc": "The  extension is part of the WebGL API and enables to set a depth value of a fragment from within the fragment shader.\nWebGL extensions are available using the [WebGLRenderingContext.getExtension()] method. For more information, see also Using Extensions in the WebGL tutorial.\n\n  Note: This extension is only available to WebGL1 contexts. In WebGL2, the functionality of this extension is available on the WebGL2 context by default. It requires GLSL [#version 300 es].\n",
    "members": []
  },
  "EXT_shader_texture_lod": {
    "name": "EXT_shader_texture_lod",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/EXT_shader_texture_lod\"><code>EXT_shader_texture_lod</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/EXT_shader_texture_lod",
    "desc": "The  extension is part of the WebGL API and adds additional texture functions to the OpenGL ES Shading Language which provide the shader writer with explicit control of LOD (Level of detail).\nWebGL extensions are available using the [WebGLRenderingContext.getExtension()] method. For more information, see also Using Extensions in the WebGL tutorial.\n\n  Note: This extension is only available to WebGL1 contexts. In WebGL2, the functionality of this extension is available on the WebGL2 context by default. It requires GLSL [#version 300 es].\n",
    "members": []
  },
  "EXT_sRGB": {
    "name": "EXT_sRGB",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/EXT_sRGB\"><code>EXT_sRGB</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/EXT_sRGB",
    "desc": "The  extension is part of the WebGL API and adds sRGB support to textures and framebuffer objects.\nWebGL extensions are available using the [WebGLRenderingContext.getExtension()] method. For more information, see also Using Extensions in the WebGL tutorial.\n\n  Note: This extension is only available to WebGL1 contexts. In WebGL2, the functionality of this extension is available on the WebGL2 context by default. The constants in WebGL2 are: [gl.SRGB], [gl.SRGB8], [gl.SRGB8_ALPHA8] and [gl.FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING].\n",
    "members": []
  },
  "EXT_texture_compression_bptc": {
    "name": "EXT_texture_compression_bptc",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/EXT_texture_compression_bptc\"><code>EXT_texture_compression_bptc</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/EXT_texture_compression_bptc",
    "desc": "The  extension is part of the WebGL API and exposes 4 BPTC compressed texture formats. These compression formats are called BC7 and BC6H in Microsoft's DirectX API.\nWebGL extensions are available using the [WebGLRenderingContext.getExtension()] method. For more information, see also Using Extensions in the WebGL tutorial.\n\n  Note: Support depends on the system's graphics driver. There is no support on Windows.\n  This extension is available to both, WebGL1 and WebGL2 contexts.\n",
    "members": []
  },
  "EXT_texture_compression_rgtc": {
    "name": "EXT_texture_compression_rgtc",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/EXT_texture_compression_rgtc\"><code>EXT_texture_compression_rgtc</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/EXT_texture_compression_rgtc",
    "desc": "The  extension is part of the WebGL API and exposes 4 RGTC compressed texture formats. RGTC is a block-based texture compression format suited for unsigned and signed red and red-green textures (Red-Green Texture Compression).\nWebGL extensions are available using the [WebGLRenderingContext.getExtension()] method. For more information, see also Using Extensions in the WebGL tutorial.\n\n  Note: Support depends on the system's graphics driver. There is no support on Windows.\n  This extension is available to both, WebGL1 and WebGL2 contexts.\n",
    "members": []
  },
  "EXT_texture_filter_anisotropic": {
    "name": "EXT_texture_filter_anisotropic",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/EXT_texture_filter_anisotropic\"><code>EXT_texture_filter_anisotropic</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/EXT_texture_filter_anisotropic",
    "desc": "The  extension is part of the WebGL API and exposes two constants for anisotropic filtering (AF).\nAF improves the quality of mipmapped texture access when viewing a textured primitive at an oblique angle. Using just mipmapping, these lookups have a tendency to average to grey.\nWebGL extensions are available using the [WebGLRenderingContext.getExtension()] method. For more information, see also Using Extensions in the WebGL tutorial.\n\n  Note: This extension is available to both, WebGL1 and WebGL2 contexts.\n",
    "members": []
  },
  "EXT_texture_norm16": {
    "name": "EXT_texture_norm16",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/EXT_texture_norm16\"><code>EXT_texture_norm16</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/EXT_texture_norm16",
    "desc": "The  extension is part of the WebGL API and provides a set of new 16-bit signed normalized and unsigned normalized formats (fixed-point texture, renderbuffer and texture buffer).\nWhen this extension is enabled:\n\n  The [WebGLRenderingContext.texImage2D()] and [WebGLRenderingContext.texSubImage2D()] methods accept new formats provided by this extension.\n  The 16-bit normalized fixed-point types [ext.R16_EXT], [ext.RG16_EXT] and [ext.RGBA16_EXT] become available as color-renderable formats and renderbuffers and be created in these formats.\n\nWebGL extensions are available using the [WebGLRenderingContext.getExtension()] method. For more information, see also Using Extensions in the WebGL tutorial.\n\n  Note: This extension is only available to WebGL 2 contexts.\n",
    "members": []
  },
  "ExtendableCookieChangeEvent": {
    "name": "ExtendableCookieChangeEvent",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/ExtendableCookieChangeEvent\"><code>ExtendableCookieChangeEvent</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/ExtendableCookieChangeEvent",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  interface of the [Cookie Store API] is the event type passed to [ServiceWorkerRegistration.oncookiechange()] when any cookie changes have occurred. A cookie change event consists of a cookie and a type (either \"changed\" or \"deleted\".)\nCookie changes that cause the  to be dispatched are:\n\n  A cookie is newly created and not immediately removed. In this case [type] is \"changed\".\n  A cookie is newly created and immediately removed. In this case [type] is \"deleted\"\n  A cookie is removed. In this case [type] is \"deleted\".\n\n\n  Note: A cookie that is replaced due to the insertion of another cookie with the same name, domain, and path, is ignored and does not trigger a change event.\n\n  \n    \n    \n      Event\n    \n  \n  \n    \n    \n      ExtendableEvent\n    \n  \n  \n    \n    \n      ExtendableCookieChangeEvent\n    \n  ",
    "members": []
  },
  "ExtendableEvent": {
    "name": "ExtendableEvent",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/ExtendableEvent\"><code>ExtendableEvent</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/ExtendableEvent",
    "desc": "The  interface extends the lifetime of the [install] and [activate] events dispatched on the global scope as part of the service worker lifecycle. This ensures that any functional events (like [FetchEvent]) are not dispatched until it upgrades database schemas and deletes the outdated cache entries.\nIf [waitUntil()] is called outside of the  handler, the browser should throw an [InvalidStateError]; note also that multiple calls will stack up, and the resulting promises will be added to the list of extend lifetime promises.\n\n  Note: The behavior described in the above paragraph was fixed in Firefox 43 (see bug 1180274.)\n\nThis interface inherits from the [Event] interface.\n  \n    \n    \n      Event\n    \n  \n  \n    \n    \n      ExtendableEvent\n    \n  \n\n  Note: This interface is only available when the global scope is a [ServiceWorkerGlobalScope]. It is not available when it is a [Window], or the scope of another kind of worker.\n",
    "members": []
  },
  "ExtendableMessageEvent": {
    "name": "ExtendableMessageEvent",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/ExtendableMessageEvent\"><code>ExtendableMessageEvent</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/ExtendableMessageEvent",
    "desc": "The  interface of the Service Worker API represents the event object of a [message] event fired on a service worker (when a message is received on the [ServiceWorkerGlobalScope] from another context) — extends the lifetime of such events.\nThis interface inherits from the [ExtendableEvent] interface.\n  \n    \n    \n      Event\n    \n  \n  \n    \n    \n      ExtendableEvent\n    \n  \n  \n    \n    \n      ExtendableMessageEvent\n    \n  ",
    "members": []
  },
  "EyeDropper": {
    "name": "EyeDropper",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/EyeDropper\"><code>EyeDropper</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/EyeDropper",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  interface represents an instance of an eyedropper tool that can be opened and used by the user to select colors from the screen.",
    "members": []
  },
  "FeaturePolicy": {
    "name": "FeaturePolicy",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/FeaturePolicy\"><code>FeaturePolicy</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/FeaturePolicy",
    "desc": "The  interface of the Feature Policy API represents the set of policies applied to the current execution context.",
    "members": []
  },
  "FederatedCredential": {
    "name": "FederatedCredential",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/FederatedCredential\"><code>FederatedCredential</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/FederatedCredential",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  interface of the Credential Management API provides information about credentials from a federated identity provider. A federated identity provider is an entity that a website trusts to correctly authenticate a user, and that provides an API for that purpose. OpenID Connect is an example of a federated identity provider framework.\nIn browsers that support it, an instance of this interface may be passed in the [credential] member of the [init] object for global [fetch()].\n  \n    \n    \n      Credential\n    \n  \n  \n    \n    \n      FederatedCredential\n    \n  ",
    "members": []
  },
  "fetch": {
    "name": "fetch",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/fetch\"><code>fetch()</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/fetch",
    "desc": "\n  The global [fetch()] method starts the process of fetching a\n  resource from the network, returning a promise which is fulfilled once the response is\n  available.\n\n\n  The promise resolves to the [Response] object\n  representing the response to your request.\n\n\n  A [fetch()] promise only rejects when a\n  network error is encountered (which is usually when there’s a permissions issue or\n  similar). A [fetch()] promise does\nnot reject on HTTP errors ([404], etc.). Instead, a\n  [then()] handler must check the [Response.ok] and/or\n  [Response.status] properties.\n\n\n  [WindowOrWorkerGlobalScope] is implemented by both [Window] and\n  [WorkerGlobalScope], which means that the [fetch()] method is\n  available in pretty much any context in which you might want to fetch resources.\n\n\n  The [fetch()] method is controlled by the [connect-src] directive\n  of Content Security Policy\n  rather than the directive of the resources it's retrieving.\n\n\n  \n    Note: The [fetch()] method's parameters are identical to\n    those of the [Request()] constructor.\n  \n",
    "members": []
  },
  "FetchEvent": {
    "name": "FetchEvent",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/FetchEvent\"><code>FetchEvent</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/FetchEvent",
    "desc": "This is the event type for [fetch] events dispatched on the service worker global scope. It contains information about the fetch, including the request and how the receiver will treat the response. It provides the [event.respondWith()] method, which allows us to provide a response to this fetch.\n  \n    \n    \n      Event\n    \n  \n  \n    \n    \n      ExtendableEvent\n    \n  \n  \n    \n    \n      FetchEvent\n    \n  ",
    "members": []
  },
  "File": {
    "name": "File",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/File\"><code>File</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/File",
    "desc": "The  interface provides information about files and allows JavaScript in a web page to access their content.\n objects are generally retrieved from a [FileList] object returned as a result of a user selecting files using the [<input>] element, from a drag and drop operation's [DataTransfer] object, or from the [mozGetAsFile()] API on an [HTMLCanvasElement].\nA  object is a specific kind of a [Blob], and can be used in any context that a Blob can. In particular, [FileReader], [URL.createObjectURL()], [createImageBitmap()], and [XMLHttpRequest.send()] accept both [Blob]s and s.\nSee Using files from web applications for more information and examples.\n  \n    \n    \n      Blob\n    \n  \n  \n    \n    \n      File\n    \n  ",
    "members": []
  },
  "FileEntrySync": {
    "name": "FileEntrySync",
    "experimental": false,
    "deprecated": false,
    "standard": false,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/FileEntrySync\"><code>FileEntrySync</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/FileEntrySync",
    "desc": "Non-standard: This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.\nThe  interface of the File System API represents a file in a file system. It lets you write content to a file.\nInherits from: EntrySync",
    "members": []
  },
  "FileException": {
    "name": "FileException",
    "experimental": false,
    "deprecated": true,
    "standard": false,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/FileException\"><code>FileException</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg> <svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/FileException",
    "desc": "Non-standard: This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.\nIn the File System API, a  object represents error conditions that you might encounter while accessing the file system using the synchronous API. It extends the FileException interface described in File Writer and adds several new error codes.",
    "members": []
  },
  "FileList": {
    "name": "FileList",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/FileList\"><code>FileList</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/FileList",
    "desc": "An object of this type is returned by the [files] property of the HTML [<input>] element; this lets you access the list of files selected with the [<input type=\"file\">] element. It's also used for a list of files dropped into web content when using the drag and drop API; see the [DataTransfer] object for details on this usage.\n\n  Note: Prior to Gecko 1.9.2, the input element only supported a single file being selected at a time, meaning that the FileList would contain only one file. Starting with Gecko 1.9.2, if the input element's multiple attribute is true, the FileList may contain multiple files.\n",
    "members": []
  },
  "FileReader": {
    "name": "FileReader",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/FileReader\"><code>FileReader</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/FileReader",
    "desc": "The  object lets web applications asynchronously read the contents of files (or raw data buffers) stored on the user's computer, using [File] or [Blob] objects to specify the file or data to read.\nFile objects may be obtained from a [FileList] object returned as a result of a user selecting files using the [<input>] element, from a drag and drop operation's [DataTransfer] object, or from the [mozGetAsFile()] API on an [HTMLCanvasElement].\n can only access the contents of files that the user has explicitly selected, either using an HTML [<input type=\"file\">] element or by drag and drop. It cannot be used to read a file by pathname from the user's file system. To read files on the client's file system by pathname, use the File System Access API. To read server-side files, use standard Ajax solutions, with CORS permission if reading cross-domain.\n  Note: This feature is available in Web Workers\n\n\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      FileReader\n    \n  ",
    "members": []
  },
  "FileReaderSync": {
    "name": "FileReaderSync",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/FileReaderSync\"><code>FileReaderSync</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/FileReaderSync",
    "desc": "The  interface allows to read [File] or [Blob] objects synchronously.\n  Note: This feature is available in Web Workers\n\n\n  Warning: This interface is only available in workers as it enables synchronous I/O that could potentially block.\n",
    "members": []
  },
  "FileRequest": {
    "name": "FileRequest",
    "experimental": false,
    "deprecated": false,
    "standard": false,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/FileRequest\"><code>FileRequest</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/FileRequest",
    "desc": "Non-standard: This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.",
    "members": []
  },
  "FileSystem": {
    "name": "FileSystem",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/FileSystem\"><code>FileSystem</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/FileSystem",
    "desc": "The File and Directory Entries API interface  is used to represent a file system. These objects can be obtained from the [filesystem] property on any file system entry. Some browsers offer additional APIs to create and manage file systems, such as Chrome's [requestFileSystem()] method.\nThis interface will not grant you access to the users filesystem. Instead you will have a \"virtual drive\" within the browser sandbox. If you want to gain access to the users filesystem you need to invoke the user by eg. installing a Chrome extension. The relevant Chrome API can be found here.",
    "members": []
  },
  "FileSystemDirectoryEntry": {
    "name": "FileSystemDirectoryEntry",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/FileSystemDirectoryEntry\"><code>FileSystemDirectoryEntry</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/FileSystemDirectoryEntry",
    "desc": "The  interface of the File and Directory Entries API represents a directory in a file system. It provides methods which make it possible to access and manipulate the files in a directory, as well as to access the entries within the directory.\n  \n    \n    \n      FileSystemEntry\n    \n  \n  \n    \n    \n      FileSystemDirectoryEntry\n    \n  ",
    "members": []
  },
  "FileSystemDirectoryHandle": {
    "name": "FileSystemDirectoryHandle",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/FileSystemDirectoryHandle\"><code>FileSystemDirectoryHandle</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/FileSystemDirectoryHandle",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  interface of the [File System Access API] provides a handle to a file system directory. The interface is accessed via the [window.showDirectoryPicker()] method.\n  \n    \n    \n      FileSystemHandle\n    \n  \n  \n    \n    \n      FileSystemDirectoryHandle\n    \n  ",
    "members": []
  },
  "FileSystemDirectoryReader": {
    "name": "FileSystemDirectoryReader",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/FileSystemDirectoryReader\"><code>FileSystemDirectoryReader</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/FileSystemDirectoryReader",
    "desc": "The  interface of the File and Directory Entries API lets you access the [FileSystemFileEntry]-based objects (generally [FileSystemFileEntry] or [FileSystemDirectoryEntry]) representing each entry in a directory.",
    "members": []
  },
  "FileSystemEntry": {
    "name": "FileSystemEntry",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/FileSystemEntry\"><code>FileSystemEntry</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/FileSystemEntry",
    "desc": "The  interface of the File and Directory Entries API represents a single entry in a file system. The entry can be a file or a directory (directories are represented by the [FileSystemDirectoryEntry] interface). It includes methods for working with files—including copying, moving, removing, and reading files—as well as information about a file it points to—including the file name and its path from the root to the entry.",
    "members": []
  },
  "FileSystemEntrySync": {
    "name": "FileSystemEntrySync",
    "experimental": false,
    "deprecated": false,
    "standard": false,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/FileSystemEntrySync\"><code>FileSystemEntrySync</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/FileSystemEntrySync",
    "desc": "Non-standard: This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.\nThe  interface of the File and Directory Entries API represents an entry in a file system; it can be either a [FileEntrySync] or [FileSystemDirectoryEntry].\nThis interface includes methods for working with files—including copying, moving, removing, and reading files—as well as information about the file it points to—including the file name and its path from the root to the entry.\n\n  Warning: This API was never accepted and never became standardized. Various browsers implement pieces of the File and Directory Entries API (otherwise known as the File System API) but you should try to avoid using it.\n",
    "members": []
  },
  "FileSystemFileEntry": {
    "name": "FileSystemFileEntry",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/FileSystemFileEntry\"><code>FileSystemFileEntry</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/FileSystemFileEntry",
    "desc": "The  interface of the File System API represents a file in a file system. It offers properties describing the file's attributes, as well as the [file()] method, which creates a [File] object that can be used to read the file.\n  \n    \n    \n      FileSystemEntry\n    \n  \n  \n    \n    \n      FileSystemFileEntry\n    \n  ",
    "members": []
  },
  "FileSystemFileHandle": {
    "name": "FileSystemFileHandle",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/FileSystemFileHandle\"><code>FileSystemFileHandle</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/FileSystemFileHandle",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  interface of the [File System Access API] represents a handle to a file system entry. The interface is accessed through the [window.showOpenFilePicker()] method.\nNote that read and write operations depend on file-access permissions that do not persist after a page refresh if no other tabs for that origin remain open. The [queryPermission] method of the [FileSystemHandle] interface can be used to verify permission state before accessing a file.\n  \n    \n    \n      FileSystemHandle\n    \n  \n  \n    \n    \n      FileSystemFileHandle\n    \n  ",
    "members": []
  },
  "FileSystemHandle": {
    "name": "FileSystemHandle",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/FileSystemHandle\"><code>FileSystemHandle</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/FileSystemHandle",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  interface of the [File System Access API] is an object which represents a file or directory entry. Multiple handles can represent the same entry. For the most part you do not work with  directly but rather its child interfaces [FileSystemFileHandle] and [FileSystemDirectoryHandle].",
    "members": []
  },
  "FileSystemSync": {
    "name": "FileSystemSync",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/FileSystemSync\"><code>FileSystemSync</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/FileSystemSync",
    "desc": "Non-standard: This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.\nIn the File System API, a  object represents a file system. It has two properties.",
    "members": []
  },
  "FileSystemWritableFileStream": {
    "name": "FileSystemWritableFileStream",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/FileSystemWritableFileStream\"><code>FileSystemWritableFileStream</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/FileSystemWritableFileStream",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  interface of the [File System Access API] is a [WritableStream] object with additional convenience methods, which operates on a single file on disk. The interface is accessed through the [FileSystemFileHandle.createWritable()] method.\n  \n    \n    \n      WritableStream\n    \n  \n  \n    \n    \n      FileSystemWritableFileStream\n    \n  ",
    "members": []
  },
  "FocusEvent": {
    "name": "FocusEvent",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/FocusEvent\"><code>FocusEvent</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/FocusEvent",
    "desc": "The  interface represents focus-related events, including [focus], [blur], [focusin], and [focusout].\n  \n    \n    \n      Event\n    \n  \n  \n    \n    \n      UIEvent\n    \n  \n  \n    \n    \n      FocusEvent\n    \n  ",
    "members": []
  },
  "FontFace": {
    "name": "FontFace",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/FontFace\"><code>FontFace</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/FontFace",
    "desc": "The  interface represents a single usable font face. It allows control of the source of the font face, being a URL to an external resource, or a buffer; it also allows control of when the font face is loaded and its current status.",
    "members": []
  },
  "FontFaceSet": {
    "name": "FontFaceSet",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/FontFaceSet\"><code>FontFaceSet</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/FontFaceSet",
    "desc": "The  interface of the CSS Font Loading API manages the loading of font-faces and querying of their download status. It is available as [Document.fonts].\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      FontFaceSet\n    \n  ",
    "members": []
  },
  "FontFaceSetLoadEvent": {
    "name": "FontFaceSetLoadEvent",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/FontFaceSetLoadEvent\"><code>FontFaceSetLoadEvent</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/FontFaceSetLoadEvent",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  interface of the CSS Font Loading API is fired whenever a [FontFaceSet] loads.\n  \n    \n    \n      Event\n    \n  \n  \n    \n    \n      FontFaceSetLoadEvent\n    \n  ",
    "members": []
  },
  "FormData": {
    "name": "FormData",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/FormData\"><code>FormData</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/FormData",
    "desc": "The  interface provides a way to easily construct a set of key/value pairs representing form fields and their values, which can then be easily sent using the [XMLHttpRequest.send()] method. It uses the same format a form would use if the encoding type were set to [\"multipart/form-data\"].\nYou can also pass it directly to the [URLSearchParams] constructor if you want to generate query parameters in the way a [<form>] would do if it were using simple [GET] submission.\nAn object implementing  can directly be used in a [for...of] structure, instead of [entries()]: [for (var p of myFormData)] is equivalent to [for (var p of myFormData.entries())].\n\n  Note: This feature is available in Web Workers.\n",
    "members": []
  },
  "FormDataEntryValue": {
    "name": "FormDataEntryValue",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/FormDataEntryValue\"><code>FormDataEntryValue</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/FormDataEntryValue",
    "desc": "A [string] or [[File]] that represents a single value from a set of [[FormData]] key-value pairs.\nThis type is returned by the [[FormData.get()]] and [[FormData.getAll()]] methods. The [[FormData.get()]] method returns a single value while [[FormData.getAll()]] returns an array of s.\nNote that the [[FormData.append()]] and [[FormData.set()]] methods allow passing a [[Blob]] value, which is converted to a [File] in the process.",
    "members": []
  },
  "FormDataEvent": {
    "name": "FormDataEvent",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/FormDataEvent\"><code>FormDataEvent</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/FormDataEvent",
    "desc": "The  interface represents a [formdata] event — such an event is fired on an [HTMLFormElement] object after the entry list representing the form's data is constructed. This happens when the form is submitted, but can also be triggered by the invocation of a [FormData()] constructor.\nThis allows a [FormData] object to be quickly obtained in response to a [formdata] event firing, rather than needing to put it together yourself when you wish to submit form data via a method like [XMLHttpRequest] (see Using FormData objects).\n  \n    \n    \n      Event\n    \n  \n  \n    \n    \n      FormDataEvent\n    \n  ",
    "members": []
  },
  "GainNode": {
    "name": "GainNode",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/GainNode\"><code>GainNode</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/GainNode",
    "desc": "The  interface represents a change in volume. It is an [AudioNode] audio-processing module that causes a given gain to be applied to the input data before its propagation to the output. A  always has exactly one input and one output, both with the same number of channels.\nThe gain is a unitless value, changing with time, that is multiplied to each corresponding sample of all input channels. If modified, the new gain is instantly applied, causing unaesthetic 'clicks' in the resulting audio. To prevent this from happening, never change the value directly but use the exponential interpolation methods on the [AudioParam] interface.\n\n  \n\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      AudioNode\n    \n  \n  \n    \n    \n      GainNode\n    \n  \n\n  \n    \n      Number of inputs\n      [1]\n    \n    \n      Number of outputs\n      [1]\n    \n    \n      Channel count mode\n      [\"max\"]\n    \n    \n      Channel count\n      [2] (not used in the default count mode)\n    \n    \n      Channel interpretation\n      [\"speakers\"]\n    \n  \n",
    "members": []
  },
  "Gamepad": {
    "name": "Gamepad",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/Gamepad\"><code>Gamepad</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/Gamepad",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  interface of the Gamepad API defines an individual gamepad or other controller, allowing access to information such as button presses, axis positions, and id.\nA Gamepad object can be returned in one of two ways: via the [gamepad] property of the [gamepadconnected] and [gamepaddisconnected] events, or by grabbing any position in the array returned by the [Navigator.getGamepads()] method.",
    "members": []
  },
  "GamepadButton": {
    "name": "GamepadButton",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/GamepadButton\"><code>GamepadButton</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/GamepadButton",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  interface defines an individual button of a gamepad or other controller, allowing access to the current state of different types of buttons available on the control device.\nA  object is returned by querying any value of the array returned by the [buttons] property of the [Gamepad] interface.",
    "members": []
  },
  "GamepadEvent": {
    "name": "GamepadEvent",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/GamepadEvent\"><code>GamepadEvent</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/GamepadEvent",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe GamepadEvent interface of the Gamepad API contains references to gamepads connected to the system, which is what the gamepad events [Window.gamepadconnected] and [Window.gamepaddisconnected] are fired in response to.\n  \n    \n    \n      Event\n    \n  \n  \n    \n    \n      GamepadEvent\n    \n  ",
    "members": []
  },
  "GamepadHapticActuator": {
    "name": "GamepadHapticActuator",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/GamepadHapticActuator\"><code>GamepadHapticActuator</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/GamepadHapticActuator",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  interface of the Gamepad API represents hardware in the controller designed to provide haptic feedback to the user (if available), most commonly vibration hardware.\nThis interface is accessible through the [Gamepad.hapticActuators] property.",
    "members": []
  },
  "GamepadPose": {
    "name": "GamepadPose",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/GamepadPose\"><code>GamepadPose</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/GamepadPose",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  interface of the Gamepad API represents the pose of a WebVR controller at a given timestamp (which includes orientation, position, velocity, and acceleration information.)\nThis interface is accessible through the [Gamepad.pose] property.",
    "members": []
  },
  "Geolocation": {
    "name": "Geolocation",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/Geolocation\"><code>Geolocation</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/Geolocation",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  interface represents an object able to programmatically obtain the position of the device. It gives Web content access to the location of the device. This allows a Web site or app to offer customized results based on the user's location.\nAn object with this interface is obtained using the [navigator.geolocation] property implemented by the [Navigator] object.\n\n  Note: For security reasons, when a web page tries to access location information, the user is notified and asked to grant permission. Be aware that each browser has its own policies and methods for requesting this permission.\n",
    "members": []
  },
  "GeolocationCoordinates": {
    "name": "GeolocationCoordinates",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/GeolocationCoordinates\"><code>GeolocationCoordinates</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/GeolocationCoordinates",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  interface represents the position and altitude of the device on Earth, as well as the accuracy with which these properties are calculated.",
    "members": []
  },
  "GeolocationPosition": {
    "name": "GeolocationPosition",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/GeolocationPosition\"><code>GeolocationPosition</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/GeolocationPosition",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  interface represents the position of the concerned device at a given time. The position, represented by a [GeolocationCoordinates] object, comprehends the 2D position of the device, on a spheroid representing the Earth, but also its altitude and its speed.",
    "members": []
  },
  "GeolocationPositionError": {
    "name": "GeolocationPositionError",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/GeolocationPositionError\"><code>GeolocationPositionError</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/GeolocationPositionError",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  interface represents the reason of an error occurring when using the geolocating device.",
    "members": []
  },
  "GestureEvent": {
    "name": "GestureEvent",
    "experimental": false,
    "deprecated": false,
    "standard": false,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/GestureEvent\"><code>GestureEvent</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/GestureEvent",
    "desc": "Non-standard: This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.\nThe  is a proprietary interface specific to WebKit which gives information regarding multi-touch gestures. Events using this interface include [gesturestart], [gesturechange], and [gestureend].\n derives from [UIEvent], which in turn derives from [Event].",
    "members": []
  },
  "getCandidateWindowClientRect": {
    "name": "getCandidateWindowClientRect",
    "experimental": false,
    "deprecated": true,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/getCandidateWindowClientRect\"><code>getCandidateWindowClientRect</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/getCandidateWindowClientRect",
    "desc": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.",
    "members": []
  },
  "GlobalEventHandlers": {
    "name": "GlobalEventHandlers",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/GlobalEventHandlers\"><code>GlobalEventHandlers</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/GlobalEventHandlers",
    "desc": "The  mixin describes the event handlers common to several interfaces like [HTMLElement], [Document], or [Window]. Each of these interfaces can, of course, add more event handlers in addition to the ones listed below.\n\n  Note:  is a mixin and not an interface; you can't actually create an object of type .\n",
    "members": []
  },
  "GravitySensor": {
    "name": "GravitySensor",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/GravitySensor\"><code>GravitySensor</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/GravitySensor",
    "desc": "The  interface of the Sensor APIs provides on each reading the gravity applied to the device along all three axes.\nTo use this sensor, the user must grant permission to the ['accelerometer'] device sensor through the Permissions API.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Sensor\n    \n  \n  \n    \n    \n      Accelerometer\n    \n  \n  \n    \n    \n      GravitySensor\n    \n  ",
    "members": []
  },
  "Gyroscope": {
    "name": "Gyroscope",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/Gyroscope\"><code>Gyroscope</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/Gyroscope",
    "desc": "The  interface of the Sensor APIs provides on each reading the angular velocity of the device along all three axes.\nTo use this sensor, the user must grant permission to the ['gyroscope'] device sensor through the Permissions API.\nIf a feature policy blocks use of a feature it is because your code is inconsistent with the policies set on your server. This is not something that would ever be shown to a user. The [Feature-Policy] HTTP header article contains implementation instructions.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Sensor\n    \n  \n  \n    \n    \n      Gyroscope\n    \n  ",
    "members": []
  },
  "HashChangeEvent": {
    "name": "HashChangeEvent",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/HashChangeEvent\"><code>HashChangeEvent</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/HashChangeEvent",
    "desc": "The  interface represents events that fire when the fragment identifier of the URL has changed.\nThe fragment identifier is the part of the URL that follows (and includes) the [#] symbol.\n  \n    \n    \n      Event\n    \n  \n  \n    \n    \n      HashChangeEvent\n    \n  ",
    "members": []
  },
  "Headers": {
    "name": "Headers",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/Headers\"><code>Headers</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/Headers",
    "desc": "The  interface of the Fetch API allows you to perform various actions on HTTP request and response headers. These actions include retrieving, setting, adding to, and removing headers from the list of the request's headers.\nA  object has an associated header list, which is initially empty and consists of zero or more name and value pairs. You can add to this using methods like [append()] (see Examples.) In all methods of this interface, header names are matched by case-insensitive byte sequence.\nFor security reasons, some headers can only be controlled by the user agent. These headers include the forbidden header names and forbidden response header names.\nA Headers object also has an associated guard, which takes a value of [immutable], [request], [request-no-cors], [response], or [none]. This affects whether the [set()], [delete()], and [append()] methods will mutate the header. For more information see Guard.\nYou can retrieve a  object via the [Request.headers] and [Response.headers] properties, and create a new  object using the [Headers.Headers()] constructor.\nAn object implementing  can directly be used in a [for...of] structure, instead of [entries()]: [for (var p of myHeaders)] is equivalent to [for (var p of myHeaders.entries())].\n\n  Note: you can find more out about the available headers by reading our HTTP headers reference.\n",
    "members": []
  },
  "HID": {
    "name": "HID",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/HID\"><code>HID</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/HID",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  interface provides methods for connecting to HID devices, listing attached HID devices and event handlers for connected HID devices.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      HID\n    \n  ",
    "members": []
  },
  "HIDConnectionEvent": {
    "name": "HIDConnectionEvent",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/HIDConnectionEvent\"><code>HIDConnectionEvent</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/HIDConnectionEvent",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  interface of the [WebHID API] represents HID connection events, and is the event type passed to [HID.onconnect] and [HID.ondisconnect] when an input report is received.\n  \n    \n    \n      Event\n    \n  \n  \n    \n    \n      HIDConnectionEvent\n    \n  ",
    "members": []
  },
  "HIDDevice": {
    "name": "HIDDevice",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/HIDDevice\"><code>HIDDevice</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/HIDDevice",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  interface of the [WebHID API] represents a HID Device. It provides properties for accessing information about the device, methods for opening and closing the connection, and the sending and receiving of reports.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      HIDDevice\n    \n  ",
    "members": []
  },
  "HIDInputReportEvent": {
    "name": "HIDInputReportEvent",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/HIDInputReportEvent\"><code>HIDInputReportEvent</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/HIDInputReportEvent",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  interface of the [WebHID API] is passed to [HIDDevice.oninputreport] when an input report is received from any associated HID device.\n  \n    \n    \n      Event\n    \n  \n  \n    \n    \n      HIDInputReportEvent\n    \n  ",
    "members": []
  },
  "History": {
    "name": "History",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/History\"><code>History</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/History",
    "desc": "The  interface allows manipulation of the browser session history, that is the pages visited in the tab or frame that the current page is loaded in.",
    "members": []
  },
  "HkdfParams": {
    "name": "HkdfParams",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/HkdfParams\"><code>HkdfParams</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/HkdfParams",
    "desc": "The  dictionary of the Web Crypto API represents the object that should be passed as the [algorithm] parameter into [SubtleCrypto.deriveKey()], when using the HKDF algorithm.",
    "members": []
  },
  "HmacImportParams": {
    "name": "HmacImportParams",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/HmacImportParams\"><code>HmacImportParams</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/HmacImportParams",
    "desc": "The  dictionary of the Web Crypto API represents the object that should be passed as the [algorithm] parameter into [SubtleCrypto.importKey()] or [SubtleCrypto.unwrapKey()], when generating a key for the HMAC algorithm.",
    "members": []
  },
  "HmacKeyGenParams": {
    "name": "HmacKeyGenParams",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/HmacKeyGenParams\"><code>HmacKeyGenParams</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/HmacKeyGenParams",
    "desc": "The  dictionary of the Web Crypto API represents the object that should be passed as the [algorithm] parameter into [SubtleCrypto.generateKey()], when generating a key for the HMAC algorithm.",
    "members": []
  },
  "HMDVRDevice": {
    "name": "HMDVRDevice",
    "experimental": true,
    "deprecated": true,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/HMDVRDevice\"><code>HMDVRDevice</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/HMDVRDevice",
    "desc": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  interface of the WebVR API represents a head mounted display, providing access to information about each eye, and allowing us to modify the current field of view.",
    "members": []
  },
  "HTMLAnchorElement": {
    "name": "HTMLAnchorElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/HTMLAnchorElement\"><code>HTMLAnchorElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/HTMLAnchorElement",
    "desc": "The  interface represents hyperlink elements and provides special properties and methods (beyond those of the regular [HTMLElement] object interface that they inherit from) for manipulating the layout and presentation of such elements. This interface corresponds to [<a>] element; not to be confused with [<link>], which is represented by [HTMLLinkElement])\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      HTMLElement\n    \n  \n  \n    \n    \n      HTMLAnchorElement\n    \n  ",
    "members": []
  },
  "HTMLAreaElement": {
    "name": "HTMLAreaElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/HTMLAreaElement\"><code>HTMLAreaElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/HTMLAreaElement",
    "desc": "The  interface provides special properties and methods (beyond those of the regular object [HTMLElement] interface it also has available to it by inheritance) for manipulating the layout and presentation of [<area>] elements.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      HTMLElement\n    \n  \n  \n    \n    \n      HTMLAreaElement\n    \n  ",
    "members": []
  },
  "HTMLAudioElement": {
    "name": "HTMLAudioElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/HTMLAudioElement\"><code>HTMLAudioElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/HTMLAudioElement",
    "desc": "The  interface provides access to the properties of [<audio>] elements, as well as methods to manipulate them.\nThis element is based on, and inherits properties and methods from, the [HTMLMediaElement] interface.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      HTMLElement\n    \n  \n  \n    \n    \n      HTMLMediaElement\n    \n  \n  \n    \n    \n      HTMLAudioElement\n    \n  ",
    "members": []
  },
  "HTMLBaseElement": {
    "name": "HTMLBaseElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/HTMLBaseElement\"><code>HTMLBaseElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/HTMLBaseElement",
    "desc": "The  interface contains the base URI for a document. This object inherits all of the properties and methods as described in the [HTMLElement] interface.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      HTMLElement\n    \n  \n  \n    \n    \n      HTMLBaseElement\n    \n  ",
    "members": []
  },
  "HTMLBaseFontElement": {
    "name": "HTMLBaseFontElement",
    "experimental": false,
    "deprecated": true,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/HTMLBaseFontElement\"><code>HTMLBaseFontElement</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/HTMLBaseFontElement",
    "desc": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.\nThe  interface provides special properties (beyond the regular [HTMLElement] interface it also has available to it by inheritance) for manipulating [<basefont>] elements.\nThe [<basefont>] element has been deprecated in HTML4 and removed in HTML5. This latest specification requires that this element implements [HTMLUnknownElement] rather than .\n\n  Note: Use CSS Fonts features instead.\n",
    "members": []
  },
  "HTMLBodyElement": {
    "name": "HTMLBodyElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/HTMLBodyElement\"><code>HTMLBodyElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/HTMLBodyElement",
    "desc": "The  interface provides special properties (beyond those inherited from the regular [HTMLElement] interface) for manipulating [<body>] elements.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      HTMLElement\n    \n  \n  \n    \n    \n      HTMLBodyElement\n    \n  ",
    "members": []
  },
  "HTMLBRElement": {
    "name": "HTMLBRElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/HTMLBRElement\"><code>HTMLBRElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/HTMLBRElement",
    "desc": "The  interface represents an HTML line break element ([<br>]). It inherits from [HTMLElement].\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      HTMLElement\n    \n  \n  \n    \n    \n      HTMLBRElement\n    \n  ",
    "members": []
  },
  "HTMLButtonElement": {
    "name": "HTMLButtonElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/HTMLButtonElement\"><code>HTMLButtonElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/HTMLButtonElement",
    "desc": "The  interface provides properties and methods (beyond the regular [HTMLElement] interface it also has available to it by inheritance) for manipulating [<button>] elements.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      HTMLElement\n    \n  \n  \n    \n    \n      HTMLButtonElement\n    \n  ",
    "members": []
  },
  "HTMLCanvasElement": {
    "name": "HTMLCanvasElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/HTMLCanvasElement\"><code>HTMLCanvasElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/HTMLCanvasElement",
    "desc": "The  interface provides properties and methods for manipulating the layout and presentation of [<canvas>] elements. The  interface also inherits the properties and methods of the [HTMLElement] interface.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      HTMLElement\n    \n  \n  \n    \n    \n      HTMLCanvasElement\n    \n  ",
    "members": []
  },
  "HTMLCollection": {
    "name": "HTMLCollection",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/HTMLCollection\"><code>HTMLCollection</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/HTMLCollection",
    "desc": "The  interface represents a generic collection (array-like object similar to [arguments]) of elements (in document order) and offers methods and properties for selecting from the list.\n\n  Note: This interface is called  for historical reasons (before the modern DOM, collections implementing this interface could only have HTML elements as their items).\n\nAn  in the HTML DOM is live; it is automatically updated when the underlying document is changed. For this reason it is a good idea to make a copy (eg. using [Array.from]) to iterate over if adding, moving, or removing nodes.",
    "members": []
  },
  "HTMLContentElement": {
    "name": "HTMLContentElement",
    "experimental": false,
    "deprecated": true,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/HTMLContentElement\"><code>HTMLContentElement</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/HTMLContentElement",
    "desc": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.\nThe  interface represents a [<content>] HTML Element, which is used in Shadow DOM.",
    "members": []
  },
  "HTMLDataElement": {
    "name": "HTMLDataElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/HTMLDataElement\"><code>HTMLDataElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/HTMLDataElement",
    "desc": "The  interface provides special properties (beyond the regular [HTMLElement] interface it also has available to it by inheritance) for manipulating [<data>] elements.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      HTMLElement\n    \n  \n  \n    \n    \n      HTMLDataElement\n    \n  ",
    "members": []
  },
  "HTMLDataListElement": {
    "name": "HTMLDataListElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/HTMLDataListElement\"><code>HTMLDataListElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/HTMLDataListElement",
    "desc": "The  interface provides special properties (beyond the [HTMLElement] object interface it also has available to it by inheritance) to manipulate [<datalist>] elements and their content.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      HTMLElement\n    \n  \n  \n    \n    \n      HTMLDataListElement\n    \n  ",
    "members": []
  },
  "HTMLDetailsElement": {
    "name": "HTMLDetailsElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/HTMLDetailsElement\"><code>HTMLDetailsElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/HTMLDetailsElement",
    "desc": "The  interface provides special properties (beyond the regular [HTMLElement] interface it also has available to it by inheritance) for manipulating [<details>] elements.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      HTMLElement\n    \n  \n  \n    \n    \n      HTMLDetailsElement\n    \n  ",
    "members": []
  },
  "HTMLDialogElement": {
    "name": "HTMLDialogElement",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/HTMLDialogElement\"><code>HTMLDialogElement</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/HTMLDialogElement",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  interface provides methods to manipulate [<dialog>] elements. It inherits properties and methods from the [HTMLElement] interface.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      HTMLElement\n    \n  \n  \n    \n    \n      HTMLDialogElement\n    \n  ",
    "members": []
  },
  "HTMLDivElement": {
    "name": "HTMLDivElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/HTMLDivElement\"><code>HTMLDivElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/HTMLDivElement",
    "desc": "The  interface provides special properties (beyond the regular [HTMLElement] interface it also has available to it by inheritance) for manipulating [<div>] elements.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      HTMLElement\n    \n  \n  \n    \n    \n      HTMLDivElement\n    \n  ",
    "members": []
  },
  "HTMLDListElement": {
    "name": "HTMLDListElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/HTMLDListElement\"><code>HTMLDListElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/HTMLDListElement",
    "desc": "The  interface provides special properties (beyond those of the regular [HTMLElement] interface it also has available to it by inheritance) for manipulating definition list ([<dl>]) elements.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      HTMLElement\n    \n  \n  \n    \n    \n      HTMLDListElement\n    \n  ",
    "members": []
  },
  "HTMLDocument": {
    "name": "HTMLDocument",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/HTMLDocument\"><code>HTMLDocument</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/HTMLDocument",
    "desc": "For historical reasons, [Window] objects have a [window.HTMLDocument] property whose value is the [Document] interface. So you can think of  as an alias for [Document], and you can find documentation for  members under the documentation for the [Document] interface.",
    "members": []
  },
  "HTMLElement": {
    "name": "HTMLElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/HTMLElement\"><code>HTMLElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/HTMLElement",
    "desc": "The  interface represents any HTML element. Some elements directly implement this interface, while others implement it via an interface that inherits it.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      HTMLElement\n    \n  ",
    "members": []
  },
  "HTMLEmbedElement": {
    "name": "HTMLEmbedElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/HTMLEmbedElement\"><code>HTMLEmbedElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/HTMLEmbedElement",
    "desc": "The  interface provides special properties (beyond the regular [HTMLElement] interface it also has available to it by inheritance) for manipulating [<embed>] elements.\n\n  Note: This topic describes the  interface as defined in the standard. It does not address earlier, non-standardized version of the interface.\n\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      HTMLElement\n    \n  \n  \n    \n    \n      HTMLEmbedElement\n    \n  ",
    "members": []
  },
  "HTMLFieldSetElement": {
    "name": "HTMLFieldSetElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/HTMLFieldSetElement\"><code>HTMLFieldSetElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/HTMLFieldSetElement",
    "desc": "The  interface provides special properties and methods (beyond the regular [HTMLElement] interface it also has available to it by inheritance) for manipulating the layout and presentation of [<fieldset>] elements.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      HTMLElement\n    \n  \n  \n    \n    \n      HTMLFieldSetElement\n    \n  ",
    "members": []
  },
  "HTMLFontElement": {
    "name": "HTMLFontElement",
    "experimental": false,
    "deprecated": true,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/HTMLFontElement\"><code>HTMLFontElement</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/HTMLFontElement",
    "desc": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.\nImplements the document object model (DOM) representation of the font element. The HTML Font Element [<font>] defines the font size, font face and color of text.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      HTMLElement\n    \n  \n  \n    \n    \n      HTMLFontElement\n    \n  ",
    "members": []
  },
  "HTMLFormControlsCollection": {
    "name": "HTMLFormControlsCollection",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/HTMLFormControlsCollection\"><code>HTMLFormControlsCollection</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/HTMLFormControlsCollection",
    "desc": "The  interface represents a collection of HTML form control elements.\nIt represents the lists returned by the [HTMLFormElement] interface's [elements] property and the [HTMLFieldSetElement] interface's [elements] property.\nThis interface replaces one method from [HTMLCollection], on which it is based.\n  \n    \n    \n      HTMLCollection\n    \n  \n  \n    \n    \n      HTMLFormControlsCollection\n    \n  ",
    "members": []
  },
  "HTMLFormElement": {
    "name": "HTMLFormElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/HTMLFormElement\"><code>HTMLFormElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/HTMLFormElement",
    "desc": "The  interface represents a [<form>] element in the DOM. It allows access to—and, in some cases, modification of—aspects of the form, as well as access to its component elements.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      HTMLElement\n    \n  \n  \n    \n    \n      HTMLFormElement\n    \n  ",
    "members": []
  },
  "HTMLFrameSetElement": {
    "name": "HTMLFrameSetElement",
    "experimental": false,
    "deprecated": true,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/HTMLFrameSetElement\"><code>HTMLFrameSetElement</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/HTMLFrameSetElement",
    "desc": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.\nThe  interface provides special properties (beyond those of the regular [HTMLElement] interface they also inherit) for manipulating [<frameset>] elements.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      HTMLElement\n    \n  \n  \n    \n    \n      HTMLFrameSetElement\n    \n  ",
    "members": []
  },
  "HTMLHeadElement": {
    "name": "HTMLHeadElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/HTMLHeadElement\"><code>HTMLHeadElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/HTMLHeadElement",
    "desc": "The  interface contains the descriptive information, or metadata, for a document. This object inherits all of the properties and methods described in the [HTMLElement] interface.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      HTMLElement\n    \n  \n  \n    \n    \n      HTMLHeadElement\n    \n  ",
    "members": []
  },
  "HTMLHeadingElement": {
    "name": "HTMLHeadingElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/HTMLHeadingElement\"><code>HTMLHeadingElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/HTMLHeadingElement",
    "desc": "The  interface represents the different heading elements, [<h1>] through [<h6>]. It inherits methods and properties from the [HTMLElement] interface.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      HTMLElement\n    \n  \n  \n    \n    \n      HTMLHeadingElement\n    \n  ",
    "members": []
  },
  "HTMLHRElement": {
    "name": "HTMLHRElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/HTMLHRElement\"><code>HTMLHRElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/HTMLHRElement",
    "desc": "The  interface provides special properties (beyond those of the [HTMLElement] interface it also has available to it by inheritance) for manipulating [<hr>] elements.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      HTMLElement\n    \n  \n  \n    \n    \n      HTMLHRElement\n    \n  ",
    "members": []
  },
  "HTMLHtmlElement": {
    "name": "HTMLHtmlElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/HTMLHtmlElement\"><code>HTMLHtmlElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/HTMLHtmlElement",
    "desc": "The  interface serves as the root node for a given HTML document. This object inherits the properties and methods described in the [HTMLElement] interface.\nYou can retrieve the  object for a given document by reading the value of the [document.documentElement] property.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      HTMLElement\n    \n  \n  \n    \n    \n      HTMLHtmlElement\n    \n  ",
    "members": []
  },
  "HTMLIFrameElement": {
    "name": "HTMLIFrameElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/HTMLIFrameElement\"><code>HTMLIFrameElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/HTMLIFrameElement",
    "desc": "The  interface provides special properties and methods (beyond those of the [HTMLElement] interface it also has available to it by inheritance) for manipulating the layout and presentation of inline frame elements.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      HTMLElement\n    \n  \n  \n    \n    \n      HTMLIFrameElement\n    \n  ",
    "members": []
  },
  "HTMLImageElement": {
    "name": "HTMLImageElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/HTMLImageElement\"><code>HTMLImageElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/HTMLImageElement",
    "desc": "The  interface represents an HTML [<img>] element, providing the properties and methods used to manipulate image elements.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      HTMLElement\n    \n  \n  \n    \n    \n      HTMLImageElement\n    \n  ",
    "members": []
  },
  "HTMLInputElement": {
    "name": "HTMLInputElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/HTMLInputElement\"><code>HTMLInputElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/HTMLInputElement",
    "desc": "The  interface provides special properties and methods for manipulating the options, layout, and presentation of [<input>] elements.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      HTMLElement\n    \n  \n  \n    \n    \n      HTMLInputElement\n    \n  ",
    "members": []
  },
  "HTMLKeygenElement": {
    "name": "HTMLKeygenElement",
    "experimental": false,
    "deprecated": true,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/HTMLKeygenElement\"><code>HTMLKeygenElement</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/HTMLKeygenElement",
    "desc": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time. \n\n  Note: This page describes the Keygen Element interface as specified, not as currently implemented by Gecko. See bug 101019 for details and status.\n\nThe [<keygen>] elements expose the  interface, which provides special properties and methods (beyond the regular [element] object interface they also have available to them by inheritance) for manipulating the layout and presentation of [keygen] elements.",
    "members": []
  },
  "HTMLLabelElement": {
    "name": "HTMLLabelElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/HTMLLabelElement\"><code>HTMLLabelElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/HTMLLabelElement",
    "desc": "The  interface gives access to properties specific to [<label>] elements. It inherits methods and properties from the base [HTMLElement] interface.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      HTMLElement\n    \n  \n  \n    \n    \n      HTMLLabelElement\n    \n  ",
    "members": []
  },
  "HTMLLegendElement": {
    "name": "HTMLLegendElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/HTMLLegendElement\"><code>HTMLLegendElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/HTMLLegendElement",
    "desc": "The  is an interface allowing to access properties of the [<legend>] elements. It inherits properties and methods from the [HTMLElement] interface.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      HTMLElement\n    \n  \n  \n    \n    \n      HTMLLegendElement\n    \n  ",
    "members": []
  },
  "HTMLLIElement": {
    "name": "HTMLLIElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/HTMLLIElement\"><code>HTMLLIElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/HTMLLIElement",
    "desc": "The  interface exposes specific properties and methods (beyond those defined by regular [HTMLElement] interface it also has available to it by inheritance) for manipulating list elements.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      HTMLElement\n    \n  \n  \n    \n    \n      HTMLLIElement\n    \n  ",
    "members": []
  },
  "HTMLLinkElement": {
    "name": "HTMLLinkElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/HTMLLinkElement\"><code>HTMLLinkElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/HTMLLinkElement",
    "desc": "The  interface represents reference information for external resources and the relationship of those resources to a document and vice-versa (corresponds to [<link>] element; not to be confused with [<a>], which is represented by [HTMLAnchorElement]). This object inherits all of the properties and methods of the [HTMLElement] interface.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      HTMLElement\n    \n  \n  \n    \n    \n      HTMLLinkElement\n    \n  ",
    "members": []
  },
  "HTMLMapElement": {
    "name": "HTMLMapElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/HTMLMapElement\"><code>HTMLMapElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/HTMLMapElement",
    "desc": "The  interface provides special properties and methods (beyond those of the regular object [HTMLElement] interface it also has available to it by inheritance) for manipulating the layout and presentation of map elements.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      HTMLElement\n    \n  \n  \n    \n    \n      HTMLMapElement\n    \n  ",
    "members": []
  },
  "HTMLMarqueeElement": {
    "name": "HTMLMarqueeElement",
    "experimental": false,
    "deprecated": true,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/HTMLMarqueeElement\"><code>HTMLMarqueeElement</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/HTMLMarqueeElement",
    "desc": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.\nThe  interface provides methods to manipulate [<marquee>] elements.\nIt inherits properties and methods from the [HTMLElement] interface.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      HTMLElement\n    \n  \n  \n    \n    \n      HTMLMarqueeElement\n    \n  ",
    "members": []
  },
  "HTMLMediaElement": {
    "name": "HTMLMediaElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/HTMLMediaElement\"><code>HTMLMediaElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/HTMLMediaElement",
    "desc": "The  interface adds to [HTMLElement] the properties and methods needed to support basic media-related capabilities that are common to audio and video.\nThe [HTMLVideoElement] and [HTMLAudioElement] elements both inherit this interface.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      HTMLElement\n    \n  \n  \n    \n    \n      HTMLMediaElement\n    \n  ",
    "members": []
  },
  "HTMLMenuElement": {
    "name": "HTMLMenuElement",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/HTMLMenuElement\"><code>HTMLMenuElement</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/HTMLMenuElement",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  interface provides special properties (beyond those defined on the regular [HTMLElement] interface it also has available to it by inheritance) for manipulating [<menu>] elements.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      HTMLElement\n    \n  \n  \n    \n    \n      HTMLMenuElement\n    \n  ",
    "members": []
  },
  "HTMLMenuItemElement": {
    "name": "HTMLMenuItemElement",
    "experimental": false,
    "deprecated": true,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/HTMLMenuItemElement\"><code>HTMLMenuItemElement</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/HTMLMenuItemElement",
    "desc": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.\nThe  interface provides special properties (beyond those defined on the regular [HTMLElement] interface it also has available to it by inheritance) for manipulating [<menuitem>] elements.",
    "members": []
  },
  "HTMLMetaElement": {
    "name": "HTMLMetaElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/HTMLMetaElement\"><code>HTMLMetaElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/HTMLMetaElement",
    "desc": "The  interface contains descriptive metadata about a document. It inherits all of the properties and methods described in the [HTMLElement] interface.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      HTMLElement\n    \n  \n  \n    \n    \n      HTMLMetaElement\n    \n  ",
    "members": []
  },
  "HTMLMeterElement": {
    "name": "HTMLMeterElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/HTMLMeterElement\"><code>HTMLMeterElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/HTMLMeterElement",
    "desc": "The HTML [<meter>] elements expose the  interface, which provides special properties and methods (beyond the [HTMLElement] object interface they also have available to them by inheritance) for manipulating the layout and presentation of [<meter>] elements.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      HTMLElement\n    \n  \n  \n    \n    \n      HTMLMeterElement\n    \n  ",
    "members": []
  },
  "HTMLModElement": {
    "name": "HTMLModElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/HTMLModElement\"><code>HTMLModElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/HTMLModElement",
    "desc": "The  interface provides special properties (beyond the regular methods and properties available through the [HTMLElement] interface they also have available to them by inheritance) for manipulating modification elements, that is [<del>] and [<ins>].\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      HTMLElement\n    \n  \n  \n    \n    \n      HTMLModElement\n    \n  ",
    "members": []
  },
  "HTMLObjectElement": {
    "name": "HTMLObjectElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/HTMLObjectElement\"><code>HTMLObjectElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/HTMLObjectElement",
    "desc": "The  interface provides special properties and methods (beyond those on the [HTMLElement] interface it also has available to it by inheritance) for manipulating the layout and presentation of [<object>] element, representing external resources.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      HTMLElement\n    \n  \n  \n    \n    \n      HTMLObjectElement\n    \n  ",
    "members": []
  },
  "HTMLOListElement": {
    "name": "HTMLOListElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/HTMLOListElement\"><code>HTMLOListElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/HTMLOListElement",
    "desc": "The  interface provides special properties (beyond those defined on the regular [HTMLElement] interface it also has available to it by inheritance) for manipulating ordered list elements.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      HTMLElement\n    \n  \n  \n    \n    \n      HTMLOListElement\n    \n  ",
    "members": []
  },
  "HTMLOptGroupElement": {
    "name": "HTMLOptGroupElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/HTMLOptGroupElement\"><code>HTMLOptGroupElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/HTMLOptGroupElement",
    "desc": "The  interface provides special properties and methods (beyond the regular [HTMLElement] object interface they also have available to them by inheritance) for manipulating the layout and presentation of [<optgroup>] elements.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      HTMLElement\n    \n  \n  \n    \n    \n      HTMLOptGroupElement\n    \n  ",
    "members": []
  },
  "HTMLOptionElement": {
    "name": "HTMLOptionElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/HTMLOptionElement\"><code>HTMLOptionElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/HTMLOptionElement",
    "desc": "The  interface represents [<option>] elements and inherits all properties and methods of the [HTMLElement] interface.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      HTMLElement\n    \n  \n  \n    \n    \n      HTMLOptionElement\n    \n  ",
    "members": []
  },
  "HTMLOptionsCollection": {
    "name": "HTMLOptionsCollection",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/HTMLOptionsCollection\"><code>HTMLOptionsCollection</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/HTMLOptionsCollection",
    "desc": "The  interface represents a collection of [<option>] HTML elements (in document order) and offers methods and properties for selecting from the list as well as optionally altering its items. This object is returned only by the [options] property of select.\n  \n    \n    \n      HTMLCollection\n    \n  \n  \n    \n    \n      HTMLOptionsCollection\n    \n  ",
    "members": []
  },
  "HTMLOutputElement": {
    "name": "HTMLOutputElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/HTMLOutputElement\"><code>HTMLOutputElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/HTMLOutputElement",
    "desc": "The  interface provides properties and methods (beyond those inherited from [HTMLElement]) for manipulating the layout and presentation of [<output>] elements.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      HTMLElement\n    \n  \n  \n    \n    \n      HTMLOutputElement\n    \n  ",
    "members": []
  },
  "HTMLParagraphElement": {
    "name": "HTMLParagraphElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/HTMLParagraphElement\"><code>HTMLParagraphElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/HTMLParagraphElement",
    "desc": "The  interface provides special properties (beyond those of the regular [HTMLElement] object interface it inherits) for manipulating [<p>] elements.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      HTMLElement\n    \n  \n  \n    \n    \n      HTMLParagraphElement\n    \n  ",
    "members": []
  },
  "HTMLParamElement": {
    "name": "HTMLParamElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/HTMLParamElement\"><code>HTMLParamElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/HTMLParamElement",
    "desc": "The  interface provides special properties (beyond those of the regular [HTMLElement] object interface it inherits) for manipulating [<param>] elements, representing a pair of a key and a value that acts as a parameter for an [<object>] element.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      HTMLElement\n    \n  \n  \n    \n    \n      HTMLParamElement\n    \n  ",
    "members": []
  },
  "HTMLPictureElement": {
    "name": "HTMLPictureElement",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/HTMLPictureElement\"><code>HTMLPictureElement</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/HTMLPictureElement",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  interface represents a [<picture>] HTML element. It doesn't implement specific properties or methods.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      HTMLElement\n    \n  \n  \n    \n    \n      HTMLPictureElement\n    \n  ",
    "members": []
  },
  "HTMLPreElement": {
    "name": "HTMLPreElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/HTMLPreElement\"><code>HTMLPreElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/HTMLPreElement",
    "desc": "The  interface exposes specific properties and methods (beyond those of the [HTMLElement] interface it also has available to it by inheritance) for manipulating a block of preformatted text ([<pre>]).\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      HTMLElement\n    \n  \n  \n    \n    \n      HTMLPreElement\n    \n  ",
    "members": []
  },
  "HTMLProgressElement": {
    "name": "HTMLProgressElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/HTMLProgressElement\"><code>HTMLProgressElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/HTMLProgressElement",
    "desc": "The  interface provides special properties and methods (beyond the regular [HTMLElement] interface it also has available to it by inheritance) for manipulating the layout and presentation of [<progress>] elements.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      HTMLElement\n    \n  \n  \n    \n    \n      HTMLProgressElement\n    \n  ",
    "members": []
  },
  "HTMLQuoteElement": {
    "name": "HTMLQuoteElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/HTMLQuoteElement\"><code>HTMLQuoteElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/HTMLQuoteElement",
    "desc": "The  interface provides special properties and methods (beyond the regular [HTMLElement] interface it also has available to it by inheritance) for manipulating quoting elements, like [<blockquote>] and [<q>], but not the [<cite>] element.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      HTMLElement\n    \n  \n  \n    \n    \n      HTMLQuoteElement\n    \n  ",
    "members": []
  },
  "HTMLScriptElement": {
    "name": "HTMLScriptElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/HTMLScriptElement\"><code>HTMLScriptElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/HTMLScriptElement",
    "desc": "HTML [<script>] elements expose the  interface, which provides special properties and methods for manipulating the behavior and execution of [<script>] elements (beyond the inherited [HTMLElement] interface).\nJavaScript files should be served with the [application/javascript] MIME type, but browsers are lenient and block them only if the script is served with an image type ([image/*]), video type ([video/*]), audio type ([audio/*]), or [text/csv]. If the script is blocked, its element receives an [error] event; otherwise, it receives a [load] event.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      HTMLElement\n    \n  \n  \n    \n    \n      HTMLScriptElement\n    \n  ",
    "members": []
  },
  "HTMLSelectElement": {
    "name": "HTMLSelectElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/HTMLSelectElement\"><code>HTMLSelectElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/HTMLSelectElement",
    "desc": "The  interface represents a [<select>] HTML Element. These elements also share all of the properties and methods of other HTML elements via the [HTMLElement] interface.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      HTMLElement\n    \n  \n  \n    \n    \n      HTMLSelectElement\n    \n  ",
    "members": []
  },
  "HTMLShadowElement": {
    "name": "HTMLShadowElement",
    "experimental": false,
    "deprecated": true,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/HTMLShadowElement\"><code>HTMLShadowElement</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/HTMLShadowElement",
    "desc": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.\nThe  interface represents a [<shadow>] HTML Element, which is used in Shadow DOM.",
    "members": []
  },
  "HTMLSlotElement": {
    "name": "HTMLSlotElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/HTMLSlotElement\"><code>HTMLSlotElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/HTMLSlotElement",
    "desc": "The  interface of the Shadow DOM API enables access to the name and assigned nodes of an HTML [<slot>] element.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      HTMLElement\n    \n  \n  \n    \n    \n      HTMLSlotElement\n    \n  ",
    "members": []
  },
  "HTMLSourceElement": {
    "name": "HTMLSourceElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/HTMLSourceElement\"><code>HTMLSourceElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/HTMLSourceElement",
    "desc": "The  interface provides special properties (beyond the regular [HTMLElement] object interface it also has available to it by inheritance) for manipulating [<source>] elements.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      HTMLElement\n    \n  \n  \n    \n    \n      HTMLSourceElement\n    \n  ",
    "members": []
  },
  "HTMLSpanElement": {
    "name": "HTMLSpanElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/HTMLSpanElement\"><code>HTMLSpanElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/HTMLSpanElement",
    "desc": "The  interface represents a [<span>] element and derives from the [HTMLElement] interface, but without implementing any additional properties or methods.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      HTMLElement\n    \n  \n  \n    \n    \n      HTMLSpanElement\n    \n  ",
    "members": []
  },
  "HTMLStyleElement": {
    "name": "HTMLStyleElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/HTMLStyleElement\"><code>HTMLStyleElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/HTMLStyleElement",
    "desc": "The  interface represents a [<style>] element. It inherits properties and methods from its parent, [HTMLElement].\nThis interface doesn't allow to manipulate the CSS it contains (in most case). To manipulate CSS, see Using dynamic styling information for an overview of the objects used to manipulate specified CSS properties using the DOM.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      HTMLElement\n    \n  \n  \n    \n    \n      HTMLStyleElement\n    \n  ",
    "members": []
  },
  "HTMLTableCaptionElement": {
    "name": "HTMLTableCaptionElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/HTMLTableCaptionElement\"><code>HTMLTableCaptionElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/HTMLTableCaptionElement",
    "desc": "The  interface special properties (beyond the regular [HTMLElement] interface it also has available to it by inheritance) for manipulating table caption elements.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      HTMLElement\n    \n  \n  \n    \n    \n      HTMLTableCaptionElement\n    \n  ",
    "members": []
  },
  "HTMLTableCellElement": {
    "name": "HTMLTableCellElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/HTMLTableCellElement\"><code>HTMLTableCellElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/HTMLTableCellElement",
    "desc": "The  interface provides special properties and methods (beyond the regular [HTMLElement] interface it also has available to it by inheritance) for manipulating the layout and presentation of table cells, either header or data cells, in an HTML document.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      HTMLElement\n    \n  \n  \n    \n    \n      HTMLTableCellElement\n    \n  ",
    "members": []
  },
  "HTMLTableColElement": {
    "name": "HTMLTableColElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/HTMLTableColElement\"><code>HTMLTableColElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/HTMLTableColElement",
    "desc": "The  interface provides properties for manipulating single or grouped table column elements.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      HTMLElement\n    \n  \n  \n    \n    \n      HTMLTableColElement\n    \n  ",
    "members": []
  },
  "HTMLTableElement": {
    "name": "HTMLTableElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/HTMLTableElement\"><code>HTMLTableElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/HTMLTableElement",
    "desc": "The  interface provides special properties and methods (beyond the regular [HTMLElement] object interface it also has available to it by inheritance) for manipulating the layout and presentation of tables in an HTML document.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      HTMLElement\n    \n  \n  \n    \n    \n      HTMLTableElement\n    \n  ",
    "members": []
  },
  "HTMLTableRowElement": {
    "name": "HTMLTableRowElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/HTMLTableRowElement\"><code>HTMLTableRowElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/HTMLTableRowElement",
    "desc": "The  interface provides special properties and methods (beyond the [HTMLElement] interface it also has available to it by inheritance) for manipulating the layout and presentation of rows in an HTML table.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      HTMLElement\n    \n  \n  \n    \n    \n      HTMLTableRowElement\n    \n  ",
    "members": []
  },
  "HTMLTableSectionElement": {
    "name": "HTMLTableSectionElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/HTMLTableSectionElement\"><code>HTMLTableSectionElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/HTMLTableSectionElement",
    "desc": "The  interface provides special properties and methods (beyond the [HTMLElement] interface it also has available to it by inheritance) for manipulating the layout and presentation of sections, that is headers, footers and bodies, in an HTML table.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      HTMLElement\n    \n  \n  \n    \n    \n      HTMLTableSectionElement\n    \n  ",
    "members": []
  },
  "HTMLTemplateElement": {
    "name": "HTMLTemplateElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/HTMLTemplateElement\"><code>HTMLTemplateElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/HTMLTemplateElement",
    "desc": "The  interface enables access to the contents of an HTML [<template>] element.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      HTMLElement\n    \n  \n  \n    \n    \n      HTMLTemplateElement\n    \n  ",
    "members": []
  },
  "HTMLTextAreaElement": {
    "name": "HTMLTextAreaElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/HTMLTextAreaElement\"><code>HTMLTextAreaElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/HTMLTextAreaElement",
    "desc": "The  interface provides special properties and methods for manipulating the layout and presentation of [<textarea>] elements.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      HTMLElement\n    \n  \n  \n    \n    \n      HTMLTextAreaElement\n    \n  ",
    "members": []
  },
  "HTMLTimeElement": {
    "name": "HTMLTimeElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/HTMLTimeElement\"><code>HTMLTimeElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/HTMLTimeElement",
    "desc": "The  interface provides special properties (beyond the regular [HTMLElement] interface it also has available to it by inheritance) for manipulating [<time>] elements.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      HTMLElement\n    \n  \n  \n    \n    \n      HTMLTimeElement\n    \n  ",
    "members": []
  },
  "HTMLTitleElement": {
    "name": "HTMLTitleElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/HTMLTitleElement\"><code>HTMLTitleElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/HTMLTitleElement",
    "desc": "The  interface contains the title for a document. This element inherits all of the properties and methods of the [HTMLElement] interface.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      HTMLElement\n    \n  \n  \n    \n    \n      HTMLTitleElement\n    \n  ",
    "members": []
  },
  "HTMLTrackElement": {
    "name": "HTMLTrackElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/HTMLTrackElement\"><code>HTMLTrackElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/HTMLTrackElement",
    "desc": "The  interface represents an HTML [<track>] element within the DOM. This element can be used as a child of either [<audio>] or [<video>] to specify a text track containing information such as closed captions or subtitles.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      HTMLElement\n    \n  \n  \n    \n    \n      HTMLTrackElement\n    \n  ",
    "members": []
  },
  "HTMLUListElement": {
    "name": "HTMLUListElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/HTMLUListElement\"><code>HTMLUListElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/HTMLUListElement",
    "desc": "The  interface provides special properties (beyond those defined on the regular [HTMLElement] interface it also has available to it by inheritance) for manipulating unordered list elements.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      HTMLElement\n    \n  \n  \n    \n    \n      HTMLUListElement\n    \n  ",
    "members": []
  },
  "HTMLUnknownElement": {
    "name": "HTMLUnknownElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/HTMLUnknownElement\"><code>HTMLUnknownElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/HTMLUnknownElement",
    "desc": "The  interface represents an invalid HTML element and derives from the [HTMLElement] interface, but without implementing any additional properties or methods.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      HTMLElement\n    \n  \n  \n    \n    \n      HTMLUnknownElement\n    \n  ",
    "members": []
  },
  "HTMLVideoElement": {
    "name": "HTMLVideoElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/HTMLVideoElement\"><code>HTMLVideoElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/HTMLVideoElement",
    "desc": "The  interface provides special properties and methods for manipulating video objects. It also inherits properties and methods of [HTMLMediaElement] and [HTMLElement].\nThe list of supported media formats varies from one browser to the other. You should either provide your video in a single format that all the relevant browsers supports, or provide multiple video sources in enough different formats that all the browsers you need to support are covered.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      HTMLElement\n    \n  \n  \n    \n    \n      HTMLMediaElement\n    \n  \n  \n    \n    \n      HTMLVideoElement\n    \n  ",
    "members": []
  },
  "IDBCursor": {
    "name": "IDBCursor",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/IDBCursor\"><code>IDBCursor</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/IDBCursor",
    "desc": "\n  Note: Not to be confused with [IDBCursorWithValue] which is just an  interface with an additional [value] property.\n\nThe  interface of the IndexedDB API represents a cursor for traversing or iterating over multiple records in a database.\nThe cursor has a source that indicates which index or object store it is iterating over. It has a position within the range, and moves in a direction that is increasing or decreasing in the order of record keys. The cursor enables an application to asynchronously process all the records in the cursor's range.\nYou can have an unlimited number of cursors at the same time. You always get the same  object representing a given cursor. Operations are performed on the underlying index or object store.\n  Note: This feature is available in Web Workers\n",
    "members": []
  },
  "IDBCursorSync": {
    "name": "IDBCursorSync",
    "experimental": true,
    "deprecated": true,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/IDBCursorSync\"><code>IDBCursorSync</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/IDBCursorSync",
    "desc": "Draft: This page is not complete.\n\n  Warning: The synchronous version of the IndexedDB API was originally intended for use only with Web Workers, and was eventually removed from the spec because its need was questionable. It may however be reintroduced in the future if there is enough demand from web developers.\n\nThe  interface of the IndexedDB API represents a cursor for iterating over multiple records in a database. You can have only one instance of  representing a cursor, but you can have an unlimited number of cursors at the same time. Operations are performed on the underlying index or object store. It enables an application to synchronously process all the records in the cursor's range.",
    "members": []
  },
  "IDBCursorWithValue": {
    "name": "IDBCursorWithValue",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/IDBCursorWithValue\"><code>IDBCursorWithValue</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/IDBCursorWithValue",
    "desc": "The  interface of the IndexedDB API represents a cursor for traversing or iterating over multiple records in a database. It is the same as the [IDBCursor], except that it includes the [value] property.\nThe cursor has a source that indicates which index or object store it is iterating over. It has a position within the range, and moves in a direction that is increasing or decreasing in the order of record keys. The cursor enables an application to asynchronously process all the records in the cursor's range.\nYou can have an unlimited number of cursors at the same time. You always get the same  object representing a given cursor. Operations are performed on the underlying index or object store.\n  Note: This feature is available in Web Workers\n\n\n  \n    \n    \n      IDBCursor\n    \n  \n  \n    \n    \n      IDBCursorWithValue\n    \n  ",
    "members": []
  },
  "IDBDatabase": {
    "name": "IDBDatabase",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/IDBDatabase\"><code>IDBDatabase</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/IDBDatabase",
    "desc": "The  interface of the IndexedDB API provides a connection to a database; you can use an  object to open a transaction on your database then create, manipulate, and delete objects (data) in that database. The interface provides the only way to get and manage versions of the database.\n  Note: This feature is available in Web Workers\n\n\n  Note: Everything you do in IndexedDB always happens in the context of a transaction, representing interactions with data in the database. All objects in IndexedDB — including object stores, indexes, and cursors — are tied to a particular transaction. Thus, you cannot execute commands, access data, or open anything outside of a transaction.\n\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      IDBDatabase\n    \n  ",
    "members": []
  },
  "IDBDatabaseException": {
    "name": "IDBDatabaseException",
    "experimental": false,
    "deprecated": true,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/IDBDatabaseException\"><code>IDBDatabaseException</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/IDBDatabaseException",
    "desc": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.\n\n  Warning: This interface was removed from the specification and was replaced by usage of [DOMException].\n\nIn the IndexedDB API, an  object represents exception conditions that can be encountered while performing database operations.",
    "members": []
  },
  "IDBDatabaseSync": {
    "name": "IDBDatabaseSync",
    "experimental": true,
    "deprecated": true,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/IDBDatabaseSync\"><code>IDBDatabaseSync</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/IDBDatabaseSync",
    "desc": "Draft: This page is not complete.\n\n  Warning: The synchronous version of the IndexedDB API was originally intended for use only with Web Workers, and was eventually removed from the spec because its need was questionable. It may however be reintroduced in the future if there is enough demand from web developers.\n\nThe [DatabaseSync] interface in the IndexedDB API represents a synchronous connection to a database.",
    "members": []
  },
  "IDBEnvironmentSync": {
    "name": "IDBEnvironmentSync",
    "experimental": true,
    "deprecated": true,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/IDBEnvironmentSync\"><code>IDBEnvironmentSync</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/IDBEnvironmentSync",
    "desc": "Draft: This page is not complete.\n\n  Warning: The synchronous version of the IndexedDB API was originally intended for use only with Web Workers, and was eventually removed from the spec because its need was questionable. It may however be reintroduced in the future if there is enough demand from web developers.\n\nThe Unimplemented  interface of the IndexedDB API will be implemented by worker objects.",
    "members": []
  },
  "IDBFactory": {
    "name": "IDBFactory",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/IDBFactory\"><code>IDBFactory</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/IDBFactory",
    "desc": "The  interface of the IndexedDB API lets applications asynchronously access the indexed databases. The object that implements the interface is [window.indexedDB]. You open — that is, create and access — and delete a database with this object, and not directly with .\n  Note: This feature is available in Web Workers\n",
    "members": []
  },
  "IDBFactorySync": {
    "name": "IDBFactorySync",
    "experimental": true,
    "deprecated": true,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/IDBFactorySync\"><code>IDBFactorySync</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/IDBFactorySync",
    "desc": "Draft: This page is not complete.\n\n  Warning: The synchronous version of the IndexedDB API was originally intended for use only with Web Workers, and was eventually removed from the spec because its need was questionable. It may however be reintroduced in the future if there is enough demand from web developers.\n\nThe  interface of the IndexedDB API provide a synchronous means of accessing the capabilities of indexed databases.",
    "members": []
  },
  "IDBIndex": {
    "name": "IDBIndex",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/IDBIndex\"><code>IDBIndex</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/IDBIndex",
    "desc": " interface of the IndexedDB API provides asynchronous access to an index in a database. An index is a kind of object store for looking up records in another object store, called the referenced object store. You use this interface to retrieve data.\nYou can retrieve records in an object store through the primary key or by using an index. An index lets you look up records in an object store using properties of the values in the object stores records other than the primary key\nThe index is a persistent key-value storage where the value part of its records is the key part of a record in the referenced object store. The records in an index are automatically populated whenever records in the referenced object store are inserted, updated, or deleted. Each record in an index can point to only one record in its referenced object store, but several indexes can reference the same object store. When the object store changes, all indexes that refers to the object store are automatically updated.\nYou can grab a set of keys within a range. To learn more, see [IDBKeyRange].\n  Note: This feature is available in Web Workers\n",
    "members": []
  },
  "IDBIndexSync": {
    "name": "IDBIndexSync",
    "experimental": true,
    "deprecated": true,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/IDBIndexSync\"><code>IDBIndexSync</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/IDBIndexSync",
    "desc": "Draft: This page is not complete.\n\n  Warning: The synchronous version of the IndexedDB API was originally intended for use only with Web Workers, and was eventually removed from the spec because its need was questionable. It may however be reintroduced in the future if there is enough demand from web developers.\n\nThe  interface of the IndexedDB API provides synchronous access to an index in a database.",
    "members": []
  },
  "IDBKeyRange": {
    "name": "IDBKeyRange",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/IDBKeyRange\"><code>IDBKeyRange</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/IDBKeyRange",
    "desc": "The  interface of the IndexedDB API represents a continuous interval over some data type that is used for keys. Records can be retrieved from [IDBObjectStore] and [IDBIndex] objects using keys or a range of keys. You can limit the range using lower and upper bounds. For example, you can iterate over all values of a key in the value range A–Z.\nA key range can be a single value or a range with upper and lower bounds or endpoints. If the key range has both upper and lower bounds, then it is bounded; if it has no bounds, it is unbounded. A bounded key range can either be open (the endpoints are excluded) or closed (the endpoints are included). To retrieve all keys within a certain range, you can use the following code constructs:\n\n  \n    \n      Range\n      Code\n    \n  \n  \n    \n      All keys ≥ x\n      [IDBKeyRange.lowerBound][(x)]\n    \n    \n      All keys > x\n      [IDBKeyRange.lowerBound][(x, true)]\n    \n    \n      All keys ≤ y\n      [IDBKeyRange.upperBound][(y)]\n    \n    \n      All keys < y\n      [IDBKeyRange.upperBound][(y, true)]\n    \n    \n      All keys ≥ x && ≤ y\n      [IDBKeyRange.bound][(x, y)]\n    \n    \n      All keys > x &&< y\n      [IDBKeyRange.bound][(x, y, true, true)]\n    \n    \n      All keys > x && ≤ y\n      [IDBKeyRange.bound][(x, y, true, false)]\n    \n    \n      All keys ≥ x &&< y\n      [IDBKeyRange.bound][(x, y, false, true)]\n    \n    \n      The key = z\n      [IDBKeyRange.only][(z)]\n    \n  \n\nA key is in a key range if the following conditions are true:\n\n  The lower value of the key range is one of the following:\n    \n      [undefined]\n      Less than key value\n      Equal to key value if [lowerOpen] is [false].\n    \n  \n  The upper value of the key range is one of the following:\n    \n      [undefined]\n      Greater than key value\n      Equal to key value if [upperOpen] is [false].\n    \n  \n\n  Note: This feature is available in Web Workers\n",
    "members": []
  },
  "IDBLocaleAwareKeyRange": {
    "name": "IDBLocaleAwareKeyRange",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/IDBLocaleAwareKeyRange\"><code>IDBLocaleAwareKeyRange</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/IDBLocaleAwareKeyRange",
    "desc": "Non-standard: This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  interface of the IndexedDB API is a Firefox-specific version of [IDBKeyRange] — it functions in exactly the same fashion, and has the same properties and methods, but it is intended for use with [IDBIndex] objects when the original index had a [locale] value specified upon its creation (see [createIndex()]'s optionalParameters) — that is, it has locale aware sorting enabled.",
    "members": []
  },
  "IDBMutableFile": {
    "name": "IDBMutableFile",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/IDBMutableFile\"><code>IDBMutableFile</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/IDBMutableFile",
    "desc": "Non-standard: This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.",
    "members": []
  },
  "IDBObjectStore": {
    "name": "IDBObjectStore",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/IDBObjectStore\"><code>IDBObjectStore</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/IDBObjectStore",
    "desc": "The  interface of the IndexedDB API represents an object store in a database. Records within an object store are sorted according to their keys. This sorting enables fast insertion, look-up, and ordered retrieval.\n  Note: This feature is available in Web Workers\n",
    "members": []
  },
  "IDBObjectStoreSync": {
    "name": "IDBObjectStoreSync",
    "experimental": false,
    "deprecated": true,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/IDBObjectStoreSync\"><code>IDBObjectStoreSync</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/IDBObjectStoreSync",
    "desc": "\n  Warning: The synchronous version of the IndexedDB API was originally intended for use only with Web Workers, and was eventually removed from the spec because its need was questionable. It may however be reintroduced in the future if there is enough demand from web developers.\n\nThe  interface of the IndexedDB API provides synchronous access to an object store of a database.",
    "members": []
  },
  "IDBOpenDBRequest": {
    "name": "IDBOpenDBRequest",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/IDBOpenDBRequest\"><code>IDBOpenDBRequest</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/IDBOpenDBRequest",
    "desc": "The  interface of the IndexedDB API provides access to the results of requests to open or delete databases (performed using [IDBFactory.open] and [IDBFactory.deleteDatabase]), using specific event handler attributes.\n  Note: This feature is available in Web Workers\n\n\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      IDBRequest\n    \n  \n  \n    \n    \n      IDBOpenDBRequest\n    \n  ",
    "members": []
  },
  "IDBRequest": {
    "name": "IDBRequest",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/IDBRequest\"><code>IDBRequest</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/IDBRequest",
    "desc": "The  interface of the IndexedDB API provides access to results of asynchronous requests to databases and database objects using event handler attributes. Each reading and writing operation on a database is done using a request.\nThe request object does not initially contain any information about the result of the operation, but once information becomes available, an event is fired on the request, and the information becomes available through the properties of the  instance.\nAll asynchronous operations immediately return an  instance. Each request has a [readyState] that is set to the ['pending'] state; this changes to ['done'] when the request is completed or fails. When the state is set to [done], every request returns a [result] and an [error], and an event is fired on the request. When the state is still [pending], any attempt to access the [result] or [error] raises an [InvalidStateError] exception.\nIn plain words, all asynchronous methods return a request object. If the request has been completed successfully, the result is made available through the [result] property and an event indicating success is fired at the request ([IDBRequest.onsuccess]). If an error occurs while performing the operation, the exception is made available through the [result] property and an error event is fired ([IDBRequest.onerror]).\nThe interface [IDBOpenDBRequest] is derived from .\n  Note: This feature is available in Web Workers\n\n\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      IDBRequest\n    \n  ",
    "members": []
  },
  "IDBTransaction": {
    "name": "IDBTransaction",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/IDBTransaction\"><code>IDBTransaction</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/IDBTransaction",
    "desc": "The  interface of the IndexedDB API provides a static, asynchronous transaction on a database using event handler attributes. All reading and writing of data is done within transactions. You use [IDBDatabase] to start transactions,  to set the mode of the transaction (e.g. is it [readonly] or [readwrite]), and you access an [IDBObjectStore] to make a request. You can also use an  object to abort transactions.\n  Note: This feature is available in Web Workers\n\n\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      IDBTransaction\n    \n  \nTransactions are started when the transaction is created, not when the first request is placed; for example consider this:\n[var trans1 = db.transaction(\"foo\", \"readwrite\");\nvar trans2 = db.transaction(\"foo\", \"readwrite\");\nvar objectStore2 = trans2.objectStore(\"foo\")\nvar objectStore1 = trans1.objectStore(\"foo\")\nobjectStore2.put(\"2\", \"key\");\nobjectStore1.put(\"1\", \"key\");\n]\nAfter the code is executed the object store should contain the value \"2\", since [trans2] should run after [trans1].",
    "members": []
  },
  "IDBTransactionSync": {
    "name": "IDBTransactionSync",
    "experimental": true,
    "deprecated": true,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/IDBTransactionSync\"><code>IDBTransactionSync</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/IDBTransactionSync",
    "desc": "Draft: This page is not complete.\n\n  Warning: The synchronous version of the IndexedDB API was originally intended for use only with Web Workers, and was eventually removed from the spec because its need was questionable. It may however be reintroduced in the future if there is enough demand from web developers.\n\nThe  interface of the IndexedDB API provides a synchronous transaction on a database. When an application creates an IDBTransactionSync object, it blocks until the browser is able to reserve the require database objects.",
    "members": []
  },
  "IDBVersionChangeEvent": {
    "name": "IDBVersionChangeEvent",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/IDBVersionChangeEvent\"><code>IDBVersionChangeEvent</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/IDBVersionChangeEvent",
    "desc": "The  interface of the IndexedDB API indicates that the version of the database has changed, as the result of an [IDBOpenDBRequest.onupgradeneeded] event handler function.\n  Note: This feature is available in Web Workers\n\n\n  \n    \n    \n      Event\n    \n  \n  \n    \n    \n      IDBVersionChangeEvent\n    \n  ",
    "members": []
  },
  "IdleDeadline": {
    "name": "IdleDeadline",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/IdleDeadline\"><code>IdleDeadline</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/IdleDeadline",
    "desc": "The  interface is used as the data type of the input parameter to idle callbacks established by calling [Window.requestIdleCallback()]. It offers a method, [timeRemaining()], which lets you determine how much longer the user agent estimates it will remain idle and a property, [didTimeout], which lets you determine if your callback is executing because its timeout duration expired.\nTo learn more about how request callbacks work, see Collaborative Scheduling of Background Tasks.",
    "members": []
  },
  "IdleDetector": {
    "name": "IdleDetector",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/IdleDetector\"><code>IdleDetector</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/IdleDetector",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  interface of the Idle\nDetection API provides methods and events for detecting user activity on a device or screen.\nThis interface requires a secure context.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      IdleDetector\n    \n  ",
    "members": []
  },
  "IIRFilterNode": {
    "name": "IIRFilterNode",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/IIRFilterNode\"><code>IIRFilterNode</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/IIRFilterNode",
    "desc": "The  interface of the Web Audio API is a [AudioNode] processor which implements a general infinite impulse response (IIR)  filter; this type of filter can be used to implement tone control devices and graphic equalizers as well. It lets the parameters of the filter response be specified, so that it can be tuned as needed.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      AudioNode\n    \n  \n  \n    \n    \n      IIRFilterNode\n    \n  \n\n  \n    \n      Number of inputs\n      [1]\n    \n    \n      Number of outputs\n      [1]\n    \n    \n      Channel count mode\n      [\"max\"]\n    \n    \n      Channel count\n      Same as on the input\n    \n    \n      Channel interpretation\n      [\"speakers\"]\n    \n  \n\nTypically, it's best to use the [BiquadFilterNode] interface to implement higher-order filters. There are several reasons why:\n\n  Biquad filters are typically less sensitive to numeric quirks.\n  The filter parameters of biquad filters can be automated.\n  All even-ordered IIR filters can be created using [BiquadFilterNode].\n\nHowever, if you need to create an odd-ordered IIR filter, you'll need to use . You may also find this interface useful if you don't need automation, or for other reasons.\n\n  Note: Once the node has been created, you can't change its coefficients.\n\ns have a tail-time reference; they continue to output non-silent audio with zero input. As an IIR filter, the non-zero input continues forever, but this can be limited after some finite time in practice, when the output has approached zero closely enough. The actual time that takes depends on the filter coefficients provided.",
    "members": []
  },
  "ImageBitmap": {
    "name": "ImageBitmap",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/ImageBitmap\"><code>ImageBitmap</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/ImageBitmap",
    "desc": "The  interface represents a bitmap image which can be drawn to a [<canvas>] without undue latency. It can be created from a variety of source objects using the [createImageBitmap()] factory method.  provides an asynchronous and resource efficient pathway to prepare textures for rendering in WebGL.",
    "members": []
  },
  "ImageBitmapRenderingContext": {
    "name": "ImageBitmapRenderingContext",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/ImageBitmapRenderingContext\"><code>ImageBitmapRenderingContext</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/ImageBitmapRenderingContext",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  interface is a canvas rendering context that provides the functionality to replace the canvas's contents with the given [ImageBitmap]. Its context id (the first argument to [HTMLCanvasElement.getContext()] or [OffscreenCanvas.getContext()]) is [\"bitmaprenderer\"].\nThis interface is available in both the window and the worker context.",
    "members": []
  },
  "ImageCapture": {
    "name": "ImageCapture",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/ImageCapture\"><code>ImageCapture</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/ImageCapture",
    "desc": "The  interface of the MediaStream Image Capture API provides methods to enable the capture of images or photos from a camera or other photographic device. It provides an interface for capturing images from a photographic device referenced through a valid [MediaStreamTrack].",
    "members": []
  },
  "ImageData": {
    "name": "ImageData",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/ImageData\"><code>ImageData</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/ImageData",
    "desc": "The  interface represents the underlying pixel data of an area of a [<canvas>] element.\nIt is created using the [ImageData()] constructor or creator methods on the [CanvasRenderingContext2D] object associated with a canvas: [createImageData()] and [getImageData()]. It can also be used to set a part of the canvas by using [putImageData()].\n  Note: This feature is available in Web Workers\n",
    "members": []
  },
  "ImageDecoder": {
    "name": "ImageDecoder",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/ImageDecoder\"><code>ImageDecoder</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/ImageDecoder",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  interface of the WebCodecs API provides a way to unpack and decode encoded image data.",
    "members": []
  },
  "ImageTrack": {
    "name": "ImageTrack",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/ImageTrack\"><code>ImageTrack</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/ImageTrack",
    "desc": "The  interface of the WebCodecs API represents an individual image track.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      ImageTrack\n    \n  ",
    "members": []
  },
  "ImageTrackList": {
    "name": "ImageTrackList",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/ImageTrackList\"><code>ImageTrackList</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/ImageTrackList",
    "desc": "The  interface of the WebCodecs API represents a list of image tracks.",
    "members": []
  },
  "indexedDB": {
    "name": "indexedDB",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/indexedDB\"><code>indexedDB</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/indexedDB",
    "desc": "\n  The global  read-only property provides a mechanism for applications to\n  asynchronously access the capabilities of indexed databases.\n",
    "members": []
  },
  "InputDeviceCapabilities": {
    "name": "InputDeviceCapabilities",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/InputDeviceCapabilities\"><code>InputDeviceCapabilities</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/InputDeviceCapabilities",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  interface of the Input Device Capabilities API provides information about the physical device or a group of related devices responsible for generating input events. Events caused by the same physical input device get the same instance of this object, but the converse isn't true. For example, two mice with the same capabilities in a system may appear as a single  instance.\nIn some instances,  represents the capabilities of logical devices rather than physical devices. This allows, for example, touchscreen keyboards and physical keyboards to be represented the same way when they produce the same input.",
    "members": []
  },
  "InputDeviceInfo": {
    "name": "InputDeviceInfo",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/InputDeviceInfo\"><code>InputDeviceInfo</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/InputDeviceInfo",
    "desc": "The  interface of the Media Streams API gives access to the capabilities of the input device that it represents.\n objects are returned by [MediaDevices.enumerateDevices()] if the returned device is an audio or video input device.\n  \n    \n    \n      MediaDeviceInfo\n    \n  \n  \n    \n    \n      InputDeviceInfo\n    \n  ",
    "members": []
  },
  "InputEvent": {
    "name": "InputEvent",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/InputEvent\"><code>InputEvent</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/InputEvent",
    "desc": "The  interface represents an event notifying the user of editable content changes.\n  \n    \n    \n      Event\n    \n  \n  \n    \n    \n      UIEvent\n    \n  \n  \n    \n    \n      InputEvent\n    \n  ",
    "members": []
  },
  "InstallEvent": {
    "name": "InstallEvent",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/InstallEvent\"><code>InstallEvent</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/InstallEvent",
    "desc": "Non-standard: This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.\nThe parameter passed into the [oninstall] handler, the  interface represents an install action that is dispatched on the [ServiceWorkerGlobalScope] of a [ServiceWorker]. As a child of [ExtendableEvent], it ensures that functional events such as [FetchEvent] are not dispatched during installation.\nThis interface inherits from the [ExtendableEvent] interface.",
    "members": []
  },
  "IntersectionObserver": {
    "name": "IntersectionObserver",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/IntersectionObserver\"><code>IntersectionObserver</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/IntersectionObserver",
    "desc": "The  interface of the Intersection Observer API provides a way to asynchronously observe changes in the intersection of a target element with an ancestor element or with a top-level document's viewport. The ancestor element or viewport is referred to as the root.\nWhen an  is created, it's configured to watch for given ratios of visibility within the root. The configuration cannot be changed once the  is created, so a given observer object is only useful for watching for specific changes in degree of visibility; however, you can watch multiple target elements with the same observer.",
    "members": []
  },
  "IntersectionObserverEntry": {
    "name": "IntersectionObserverEntry",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/IntersectionObserverEntry\"><code>IntersectionObserverEntry</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/IntersectionObserverEntry",
    "desc": "The  interface of the Intersection Observer API describes the intersection between the target element and its root container at a specific moment of transition.\nInstances of  are delivered to an [IntersectionObserver] callback in its [entries] parameter; otherwise, these objects can only be obtained by calling [IntersectionObserver.takeRecords()].",
    "members": []
  },
  "InterventionReportBody": {
    "name": "InterventionReportBody",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/InterventionReportBody\"><code>InterventionReportBody</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/InterventionReportBody",
    "desc": "The  interface of the Reporting API represents the body of an intervention report.\nAn intervention report is generated when usage of a feature in a web document has been blocked by the browser for reasons such as security, performance, or user annoyance. So for example, a script was been stopped because it was significantly slowing down the browser, or the browser's autoplay policy blocked audio from playing without a user gesture to trigger it.\nA deprecation report is generated when a deprecated feature (for example a deprecated API method) is used on a document being observed by a [ReportingObserver]. In addition to the support of this API, receiving useful intervention warnings relies on browser vendors adding these warnings for the relevant features.\n  \n    \n    \n      ReportBody\n    \n  \n  \n    \n    \n      InterventionReportBody\n    \n  ",
    "members": []
  },
  "isSecureContext": {
    "name": "isSecureContext",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/isSecureContext\"><code>isSecureContext</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/isSecureContext",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\n\n  The global  read-only property returns a boolean indicating whether\n  the current context is secure\n  ([true]) or not ([false]).\n",
    "members": []
  },
  "Keyboard": {
    "name": "Keyboard",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/Keyboard\"><code>Keyboard</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/Keyboard",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  interface of the Keyboard API provides functions that retrieve keyboard layout maps and toggle capturing of key presses from the physical keyboard.\nA list of valid code values is found in the UI Events KeyboardEvent code Values spec.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Keyboard\n    \n  ",
    "members": []
  },
  "KeyboardEvent": {
    "name": "KeyboardEvent",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/KeyboardEvent\"><code>KeyboardEvent</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/KeyboardEvent",
    "desc": " objects describe a user interaction with the keyboard; each event describes a single interaction between the user and a key (or combination of a key with modifier keys) on the keyboard. The event type ([keydown], [keypress], or [keyup]) identifies what kind of keyboard activity occurred.\n\n  Note:  events just indicate what interaction the user had with a key on the keyboard at a low level, providing no contextual meaning to that interaction. When you need to handle text input, use the [input] event instead. Keyboard events may not be fired if the user is using an alternate means of entering text, such as a handwriting system on a tablet or graphics tablet.\n\n  \n    \n    \n      Event\n    \n  \n  \n    \n    \n      UIEvent\n    \n  \n  \n    \n    \n      KeyboardEvent\n    \n  ",
    "members": []
  },
  "KeyboardLayoutMap": {
    "name": "KeyboardLayoutMap",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/KeyboardLayoutMap\"><code>KeyboardLayoutMap</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/KeyboardLayoutMap",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  interface of the Keyboard API is a map-like object with functions for retrieving the string associated with specific physical keys.\nA list of valid keys is found in the UI Events KeyboardEvent code Values specification.",
    "members": []
  },
  "KeyframeEffect": {
    "name": "KeyframeEffect",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/KeyframeEffect\"><code>KeyframeEffect</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/KeyframeEffect",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  interface of the Web Animations API lets us create sets of animatable properties and values, called keyframes. These can then be played using the [Animation()] constructor.\n  \n    \n    \n      AnimationEffect\n    \n  \n  \n    \n    \n      KeyframeEffect\n    \n  ",
    "members": []
  },
  "KHR_parallel_shader_compile": {
    "name": "KHR_parallel_shader_compile",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/KHR_parallel_shader_compile\"><code>KHR_parallel_shader_compile</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/KHR_parallel_shader_compile",
    "desc": "The  extension is part of the WebGL API and enables a non-blocking poll operation, so that compile/link status availability ([COMPLETION_STATUS_KHR]) can be queried without potentially incurring stalls. In other words you can check the status of your shaders compiling without blocking the runtime.\nWebGL extensions are available using the [WebGLRenderingContext.getExtension()] method. For more information, see also Using Extensions in the WebGL tutorial.",
    "members": []
  },
  "LargestContentfulPaint": {
    "name": "LargestContentfulPaint",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/LargestContentfulPaint\"><code>LargestContentfulPaint</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/LargestContentfulPaint",
    "desc": "The  interface of the [Largest Contentful Paint API] provides details about the largest image or text paint before user input on a web page. The timing of this paint is a good heuristic for when the main page content is available during load.\n  \n    \n    \n      PerformanceEntry\n    \n  \n  \n    \n    \n      LargestContentfulPaint\n    \n  ",
    "members": []
  },
  "LayoutShift": {
    "name": "LayoutShift",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/LayoutShift\"><code>LayoutShift</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/LayoutShift",
    "desc": "The  interface of the Layout Instability API provides insights into the stability of web pages based on movements of the elements on the page.\n  \n    \n    \n      PerformanceEntry\n    \n  \n  \n    \n    \n      LayoutShift\n    \n  ",
    "members": []
  },
  "LayoutShiftAttribution": {
    "name": "LayoutShiftAttribution",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/LayoutShiftAttribution\"><code>LayoutShiftAttribution</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/LayoutShiftAttribution",
    "desc": "The  interface of the Layout Instability API provides debugging information about elements which have shifted.\nInstances of  are returned in an array by calling [LayoutShift.sources].",
    "members": []
  },
  "LinearAccelerationSensor": {
    "name": "LinearAccelerationSensor",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/LinearAccelerationSensor\"><code>LinearAccelerationSensor</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/LinearAccelerationSensor",
    "desc": "The  interface of the Sensor APIs provides on each reading the acceleration applied to the device along all three axes, but without the contribution of gravity.\nTo use this sensor, the user must grant permission to the ['accelerometer'] device sensor through the Permissions API.\nIf a feature policy blocks use of a feature it is because your code is inconsistent with the policies set on your server. This is not something that would ever be shown to a user. The [Feature-Policy] HTTP header article contains implementation instructions.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Sensor\n    \n  \n  \n    \n    \n      Accelerometer\n    \n  \n  \n    \n    \n      LinearAccelerationSensor\n    \n  ",
    "members": []
  },
  "LocalFileSystem": {
    "name": "LocalFileSystem",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/LocalFileSystem\"><code>LocalFileSystem</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/LocalFileSystem",
    "desc": "Non-standard: This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.\nThe  interface of the File System API gives you access to a sandboxed file system. The methods are implemented by window and worker objects.",
    "members": []
  },
  "LocalFileSystemSync": {
    "name": "LocalFileSystemSync",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/LocalFileSystemSync\"><code>LocalFileSystemSync</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/LocalFileSystemSync",
    "desc": "Non-standard: This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.\nThe  interface of the File System API gives you access to a sandboxed file system. It is intended to be used with WebWorkers. The methods are implemented by worker objects.",
    "members": []
  },
  "Location": {
    "name": "Location",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/Location\"><code>Location</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/Location",
    "desc": "The  interface represents the location (URL) of the object it is linked to. Changes done on it are reflected on the object it relates to. Both the [Document] and [Window] interface have such a linked , accessible via [Document.location] and [Window.location] respectively.",
    "members": []
  },
  "Lock": {
    "name": "Lock",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/Lock\"><code>Lock</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/Lock",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\n\n  The  interface of the Web Locks API provides the name and mode of a lock.\n  This may be a newly requested lock that is received in the callback to [LockManager.request()], or a record of an active or queued lock returned by [LockManager.query()].\n",
    "members": []
  },
  "LockedFile": {
    "name": "LockedFile",
    "experimental": false,
    "deprecated": false,
    "standard": false,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/LockedFile\"><code>LockedFile</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/LockedFile",
    "desc": "Non-standard: This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.",
    "members": []
  },
  "LockManager": {
    "name": "LockManager",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/LockManager\"><code>LockManager</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/LockManager",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  interface of the Web Locks API provides methods for requesting a new [Lock] object and querying for an existing [Lock] object. To get an instance of , call [navigator.locks].",
    "members": []
  },
  "Magnetometer": {
    "name": "Magnetometer",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/Magnetometer\"><code>Magnetometer</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/Magnetometer",
    "desc": "The  interface of the Sensor APIs provides information about the magnetic field as detected by the device's primary magnetometer sensor.\nTo use this sensor, the user must grant permission to the ['magnetometer'] device sensor through the Permissions API.\nIf a feature policy blocks use of a feature, it's because your code is inconsistent with the policies set on your server. This is not something that would ever be shown to a user. The [Feature-Policy] HTTP header article contains implementation instructions.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Sensor\n    \n  \n  \n    \n    \n      Magnetometer\n    \n  ",
    "members": []
  },
  "MathMLElement": {
    "name": "MathMLElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/MathMLElement\"><code>MathMLElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/MathMLElement",
    "desc": "The  interface represents any MathML element.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      MathMLElement\n    \n  ",
    "members": []
  },
  "MediaCapabilities": {
    "name": "MediaCapabilities",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/MediaCapabilities\"><code>MediaCapabilities</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/MediaCapabilities",
    "desc": "The  interface of the Media Capabilities API provides information about the decoding abilities of the device, system and browser. The API can be used to query the browser about the decoding abilities of the device based on codecs, profile, resolution, and bitrates. The information can be used to serve optimal media streams to the user and determine if playback should be smooth and power efficient.\nThe information is accessed through the [mediaCapabilities] property of the [Navigator] interface.",
    "members": []
  },
  "MediaConfiguration": {
    "name": "MediaConfiguration",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/MediaConfiguration\"><code>MediaConfiguration</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/MediaConfiguration",
    "desc": "The  [MediaCapabilities] dictionary of the Media Capabilities API describes how media and audio files must be configured, or defined, to be passed as a parameter of the [MediaCapabilities.encodingInfo()] and [MediaCapabilities.encodingInfo()] methods.",
    "members": []
  },
  "MediaDecodingConfiguration": {
    "name": "MediaDecodingConfiguration",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/MediaDecodingConfiguration\"><code>MediaDecodingConfiguration</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/MediaDecodingConfiguration",
    "desc": "The  dictionary of the Media Capabilities API is used to define the type of media being tested when calling [MediaCapabilities.decodingInfo()] to query whether a specific media configuration is supported, smooth, and/or power efficient.",
    "members": []
  },
  "MediaDeviceInfo": {
    "name": "MediaDeviceInfo",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/MediaDeviceInfo\"><code>MediaDeviceInfo</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/MediaDeviceInfo",
    "desc": "The  interface contains information that describes a single media input or output device.\nThe list of devices obtained by calling [navigator.mediaDevices.enumerateDevices()] is an array of  objects, one per media device.",
    "members": []
  },
  "MediaDevices": {
    "name": "MediaDevices",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/MediaDevices\"><code>MediaDevices</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/MediaDevices",
    "desc": "The  interface provides access to connected media input devices like cameras and microphones, as well as screen sharing. In essence, it lets you obtain access to any hardware source of media data.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      MediaDevices\n    \n  ",
    "members": []
  },
  "MediaElementAudioSourceNode": {
    "name": "MediaElementAudioSourceNode",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/MediaElementAudioSourceNode\"><code>MediaElementAudioSourceNode</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/MediaElementAudioSourceNode",
    "desc": "The  interface represents an audio source consisting of an HTML5 [<audio>] or [<video>] element. It is an [AudioNode] that acts as an audio source.\nA [MediaElementSourceNode] has no inputs and exactly one output, and is created using the [AudioContext.createMediaElementSource()] method. The amount of channels in the output equals the number of channels of the audio referenced by the [HTMLMediaElement] used in the creation of the node, or is 1 if the [HTMLMediaElement] has no audio.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      AudioNode\n    \n  \n  \n    \n    \n      MediaElementAudioSourceNode\n    \n  \n\n  \n    \n      Number of inputs\n      [0]\n    \n    \n      Number of outputs\n      [1]\n    \n    \n      Channel count\n      \n        defined by the media in the [HTMLMediaElement]\n        passed to the\n        [AudioContext.createMediaElementSource]\n        method that created it.\n      \n    \n  \n",
    "members": []
  },
  "MediaEncodingConfiguration": {
    "name": "MediaEncodingConfiguration",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/MediaEncodingConfiguration\"><code>MediaEncodingConfiguration</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/MediaEncodingConfiguration",
    "desc": "The  dictionary of the Media Capabilities API is used to define the type of media being tested when calling [MediaCapabilities.encodingInfo()] to query whether a specific media configuration is supported, smooth, and/or power efficient.",
    "members": []
  },
  "MediaError": {
    "name": "MediaError",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/MediaError\"><code>MediaError</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/MediaError",
    "desc": "The  interface represents an error which occurred while handling media in an HTML media element based on [HTMLMediaElement], such as [<audio>] or [<video>].\nA  object describes the error in general terms using a numeric [code] categorizing the kind of error, and a [message], which provides specific diagnostics about what went wrong.",
    "members": []
  },
  "MediaImage": {
    "name": "MediaImage",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/MediaImage\"><code>MediaImage</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/MediaImage",
    "desc": "The Media Session API's  dictionary describes the images associated with a media resource's [MediaMetadata].\nIts contents can be displayed by the user agent in appropriate contexts like in a player interface to show the current playing video or audio track.",
    "members": []
  },
  "MediaKeyMessageEvent": {
    "name": "MediaKeyMessageEvent",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/MediaKeyMessageEvent\"><code>MediaKeyMessageEvent</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/MediaKeyMessageEvent",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  interface of the EncryptedMediaExtensions API contains the content and related data when the content decryption module generates a message for the session.\n  \n    \n    \n      Event\n    \n  \n  \n    \n    \n      MediaKeyMessageEvent\n    \n  ",
    "members": []
  },
  "MediaKeys": {
    "name": "MediaKeys",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/MediaKeys\"><code>MediaKeys</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/MediaKeys",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  interface of EncryptedMediaExtensions API represents a set of keys that an associated [HTMLMediaElement] can use for decryption of media data during playback.",
    "members": []
  },
  "MediaKeySession": {
    "name": "MediaKeySession",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/MediaKeySession\"><code>MediaKeySession</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/MediaKeySession",
    "desc": "The  interface of the EncryptedMediaExtensions API represents a context for message exchange with a content decryption module (CDM).\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      MediaKeySession\n    \n  ",
    "members": []
  },
  "MediaKeyStatusMap": {
    "name": "MediaKeyStatusMap",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/MediaKeyStatusMap\"><code>MediaKeyStatusMap</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/MediaKeyStatusMap",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  interface of the EncryptedMediaExtensions API is a read-only map of media key statuses by key IDs.",
    "members": []
  },
  "MediaKeySystemAccess": {
    "name": "MediaKeySystemAccess",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/MediaKeySystemAccess\"><code>MediaKeySystemAccess</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/MediaKeySystemAccess",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  interface of the EncryptedMediaExtensions API provides access to a Key System for decryption and/or a content protection provider. You can request an instance of this object using the [Navigator.requestMediaKeySystemAccess()] method.",
    "members": []
  },
  "MediaList": {
    "name": "MediaList",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/MediaList\"><code>MediaList</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/MediaList",
    "desc": "The  interface represents the media queries of a stylesheet, e.g. those set using a [<link>] element's [media] attribute.\n\n  Note:  is a live list; updating the list using properties or methods listed below will immediately update the behavior of the document.\n",
    "members": []
  },
  "MediaMetadata": {
    "name": "MediaMetadata",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/MediaMetadata\"><code>MediaMetadata</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/MediaMetadata",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  interface of the Media Session API allows a web page to provide rich media metadata for display in a platform UI.",
    "members": []
  },
  "MediaQueryList": {
    "name": "MediaQueryList",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/MediaQueryList\"><code>MediaQueryList</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/MediaQueryList",
    "desc": "A  object stores information on a media query applied to a document, with support for both immediate and event-driven matching against the state of the document.\nYou can create a  by calling [matchMedia()] on the [window] object. The resulting object handles sending notifications to listeners when the media query state changes (i.e. when the media query test starts or stops evaluating to [true]).\nThis is very useful for adaptive design, since this makes it possible to observe a document to detect when its media queries change, instead of polling the values periodically, and allows you to programmatically make changes to a document based on media query status.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      MediaQueryList\n    \n  ",
    "members": []
  },
  "MediaQueryListEvent": {
    "name": "MediaQueryListEvent",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/MediaQueryListEvent\"><code>MediaQueryListEvent</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/MediaQueryListEvent",
    "desc": "The  object stores information on the changes that have happened to a [MediaQueryList] object — instances are available as the event object on a function referenced by a [MediaQueryList.onchange] property or [MediaQueryList.addListener()] call.\n  \n    \n    \n      Event\n    \n  \n  \n    \n    \n      MediaQueryListEvent\n    \n  ",
    "members": []
  },
  "MediaRecorder": {
    "name": "MediaRecorder",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/MediaRecorder\"><code>MediaRecorder</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/MediaRecorder",
    "desc": "The  interface of the MediaStream Recording API provides functionality to easily record media. It is created using the [MediaRecorder()] constructor.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      MediaRecorder\n    \n  ",
    "members": []
  },
  "MediaRecorderErrorEvent": {
    "name": "MediaRecorderErrorEvent",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/MediaRecorderErrorEvent\"><code>MediaRecorderErrorEvent</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/MediaRecorderErrorEvent",
    "desc": "The  interface represents errors returned by the MediaStream Recording API. It is an [Event] object that encapsulates a reference to a [DOMException] describing the error that occurred.\n  \n    \n    \n      Event\n    \n  \n  \n    \n    \n      MediaRecorderErrorEvent\n    \n  ",
    "members": []
  },
  "MediaSession": {
    "name": "MediaSession",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/MediaSession\"><code>MediaSession</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/MediaSession",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  interface of the Media Session API allows a web page to provide custom behaviors for standard media playback interactions, and to report metadata that can be sent by the user agent to the device or operating system for presentation in standardized user interface elements.\nFor example, a smartphone might have a standard panel in its lock screen that provides controls for media playback and information display. A browser on the device can use  to make browser playback controllable from that standard/global user interface.",
    "members": []
  },
  "MediaSource": {
    "name": "MediaSource",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/MediaSource\"><code>MediaSource</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/MediaSource",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  interface of the Media Source Extensions API represents a source of media data for an [HTMLMediaElement] object. A  object can be attached to a [HTMLMediaElement] to be played in the user agent.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      MediaSource\n    \n  ",
    "members": []
  },
  "MediaStream": {
    "name": "MediaStream",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/MediaStream\"><code>MediaStream</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/MediaStream",
    "desc": "The  interface represents a stream of media content. A stream consists of several tracks, such as video or audio tracks. Each track is specified as an instance of [MediaStreamTrack].\nYou can obtain a  object either by using the constructor or by calling functions such as [MediaDevices.getUserMedia()], [MediaDevices.getDisplayMedia()], or [HTMLCanvasElement.captureStream()].\nSome user agents subclass this interface to provide more precise information or functionality, like in [CanvasCaptureMediaStreamTrack].\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      MediaStream\n    \n  ",
    "members": []
  },
  "MediaStreamAudioDestinationNode": {
    "name": "MediaStreamAudioDestinationNode",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/MediaStreamAudioDestinationNode\"><code>MediaStreamAudioDestinationNode</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/MediaStreamAudioDestinationNode",
    "desc": "The  interface represents an audio destination consisting of a WebRTC [MediaStream] with a single [AudioMediaStreamTrack], which can be used in a similar way to a [MediaStream] obtained from [Navigator.getUserMedia()].\nIt is an [AudioNode] that acts as an audio destination, created using the [AudioContext.createMediaStreamDestination()] method.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      AudioNode\n    \n  \n  \n    \n    \n      MediaStreamAudioDestinationNode\n    \n  \n\n  \n    \n      Number of inputs\n      [1]\n    \n    \n      Number of outputs\n      [0]\n    \n    \n      Channel count\n      [2]\n    \n    \n      Channel count mode\n      [\"explicit\"]\n    \n    \n      Channel count interpretation\n      [\"speakers\"]\n    \n  \n",
    "members": []
  },
  "MediaStreamAudioSourceNode": {
    "name": "MediaStreamAudioSourceNode",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/MediaStreamAudioSourceNode\"><code>MediaStreamAudioSourceNode</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/MediaStreamAudioSourceNode",
    "desc": "The  interface is a type of [AudioNode] which operates as an audio source whose media is received from a [MediaStream] obtained using the WebRTC or Media Capture and Streams APIs.\nThis media could be from a microphone (through [getUserMedia()]) or from a remote peer on a WebRTC call (using the [RTCPeerConnection]'s audio tracks).\nA  has no inputs and exactly one output, and is created using the [AudioContext.createMediaStreamSource()] method.\nThe  takes the audio from the first [MediaStreamTrack] whose [kind] attribute's value is [audio]. See Track ordering for more information about the order of tracks.\nThe number of channels output by the node matches the number of tracks found in the selected audio track.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      AudioNode\n    \n  \n  \n    \n    \n      MediaStreamAudioSourceNode\n    \n  \n\n  \n    \n      Number of inputs\n      [0]\n    \n    \n      Number of outputs\n      [1]\n    \n    \n      Channel count\n      \n        defined by the first audio [MediaStreamTrack]\n        passed to the\n        [AudioContext.createMediaStreamSource()]\n        method that created it.\n      \n    \n  \n",
    "members": []
  },
  "MediaStreamEvent": {
    "name": "MediaStreamEvent",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/MediaStreamEvent\"><code>MediaStreamEvent</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/MediaStreamEvent",
    "desc": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.\nThe  interface represents events that occurs in relation to a [MediaStream]. Two events of this type can be thrown: [addstream] and [removestream].",
    "members": []
  },
  "MediaStreamTrack": {
    "name": "MediaStreamTrack",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/MediaStreamTrack\"><code>MediaStreamTrack</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/MediaStreamTrack",
    "desc": "The  interface represents a single media track within a stream; typically, these are audio or video tracks, but other track types may exist as well.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      MediaStreamTrack\n    \n  ",
    "members": []
  },
  "MediaStreamTrackAudioSourceNode": {
    "name": "MediaStreamTrackAudioSourceNode",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/MediaStreamTrackAudioSourceNode\"><code>MediaStreamTrackAudioSourceNode</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/MediaStreamTrackAudioSourceNode",
    "desc": "The  interface is a type of [AudioNode] which represents a source of audio data taken from a specific [MediaStreamTrack] obtained through the WebRTC or Media Capture and Streams APIs.\nThe audio itself might be input from a microphone or other audio sampling device, or might be received through a [RTCPeerConnection], among other possible options.\nA  has no inputs and exactly one output, and is created using the [AudioContext.createMediaStreamTrackSource()] method. This interface is similar to [MediaStreamAudioSourceNode], except it lets you specifically state the track to use, rather than assuming the first audio track on a stream.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      AudioNode\n    \n  \n  \n    \n    \n      MediaStreamTrackAudioSourceNode\n    \n  \n\n  \n    \n      Number of inputs\n      [0]\n    \n    \n      Number of outputs\n      [1]\n    \n    \n      Channel count\n      \n        defined by the first audio [MediaStreamTrack]\n        passed to the\n        [AudioContext.createMediaStreamTrackSource()]\n        method that created it.\n      \n    \n  \n",
    "members": []
  },
  "MediaStreamTrackEvent": {
    "name": "MediaStreamTrackEvent",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/MediaStreamTrackEvent\"><code>MediaStreamTrackEvent</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/MediaStreamTrackEvent",
    "desc": "The  interface represents events which indicate that a [MediaStream] has had tracks added to or removed from the stream through calls to Media Stream API methods. These events are sent to the stream when these changes occur.\n  \n    \n    \n      Event\n    \n  \n  \n    \n    \n      MediaStreamTrackEvent\n    \n  \nThe events based on this interface are [addtrack] and [removetrack].",
    "members": []
  },
  "MediaStreamTrackGenerator": {
    "name": "MediaStreamTrackGenerator",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/MediaStreamTrackGenerator\"><code>MediaStreamTrackGenerator</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/MediaStreamTrackGenerator",
    "desc": "\n  The  interface of the [Insertable Streams for MediaStreamTrack API] creates a [WritableStream] that acts as a [MediaStreamTrack] source.\n  The object consumes a stream of media frames as input, which can be audio or video frames.\n",
    "members": []
  },
  "MediaStreamTrackProcessor": {
    "name": "MediaStreamTrackProcessor",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/MediaStreamTrackProcessor\"><code>MediaStreamTrackProcessor</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/MediaStreamTrackProcessor",
    "desc": "The  interface of the [Insertable Streams for MediaStreamTrack API] consumes a [MediaStreamTrack] object's source and generates a stream of media frames.",
    "members": []
  },
  "MediaTrackConstraints": {
    "name": "MediaTrackConstraints",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/MediaTrackConstraints\"><code>MediaTrackConstraints</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/MediaTrackConstraints",
    "desc": "The  dictionary is used to describe a set of capabilities and the value or values each can take on. A constraints dictionary is passed into [applyConstraints()] to allow a script to establish a set of exact (required) values or ranges and/or preferred values or ranges of values for the track, and the most recently-requested set of custom constraints can be retrieved by calling [getConstraints()].",
    "members": []
  },
  "MediaTrackSettings": {
    "name": "MediaTrackSettings",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/MediaTrackSettings\"><code>MediaTrackSettings</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/MediaTrackSettings",
    "desc": "The  dictionary is used to return the current values configured for each of a [MediaStreamTrack]'s settings. These values will adhere as closely as possible to any constraints previously described using a [MediaTrackConstraints] object and set using [applyConstraints()], and will adhere to the default constraints for any properties whose constraints haven't been changed, or whose customized constraints couldn't be matched.\nTo learn more about how constraints and settings work, see Capabilities, constraints, and settings.",
    "members": []
  },
  "MediaTrackSupportedConstraints": {
    "name": "MediaTrackSupportedConstraints",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/MediaTrackSupportedConstraints\"><code>MediaTrackSupportedConstraints</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/MediaTrackSupportedConstraints",
    "desc": "The  dictionary establishes the list of constrainable properties recognized by the user agent or browser in its implementation of the [MediaStreamTrack] object. An object conforming to  is returned by [MediaDevices.getSupportedConstraints()].\nBecause of the way interface definitions in WebIDL work, if a constraint is requested but not supported, no error will occur. Instead, the specified constraints will be applied, with any unrecognized constraints stripped from the request.That can lead to confusing and hard to debug errors, so be sure to use [getSupportedConstraints()] to retrieve this information before attempting to establish constraints if you need to know the difference between silently ignoring a constraint and a constraint being accepted.\nAn actual constraint set is described using an object based on the [MediaTrackConstraints] dictionary.\nTo learn more about how constraints work, see Capabilities, constraints, and settings.",
    "members": []
  },
  "MerchantValidationEvent": {
    "name": "MerchantValidationEvent",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/MerchantValidationEvent\"><code>MerchantValidationEvent</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/MerchantValidationEvent",
    "desc": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.Non-standard: This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  interface of the Payment Request API enables a merchant to verify themselves as allowed to use a particular payment handler.\nTo learn more about merchant validation, see Merchant validation in Payment processing concepts.",
    "members": []
  },
  "MessageChannel": {
    "name": "MessageChannel",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/MessageChannel\"><code>MessageChannel</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/MessageChannel",
    "desc": "The  interface of the Channel Messaging API allows us to create a new message channel and send data through it via its two [MessagePort] properties.\n  Note: This feature is available in Web Workers\n",
    "members": []
  },
  "MessageEvent": {
    "name": "MessageEvent",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/MessageEvent\"><code>MessageEvent</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/MessageEvent",
    "desc": "The  interface represents a message received by a target object.\nThis is used to represent messages in:\n\n  Server-sent events (see [EventSource.onmessage]).\n  Web sockets (see the [onmessage] property of the WebSocket interface).\n  Cross-document messaging (see [Window.postMessage()] and [Window.onmessage]).\n  Channel messaging (see [MessagePort.postMessage()] and [MessagePort.onmessage]).\n  Cross-worker/document messaging (see the above two entries, but also [Worker.postMessage()], [Worker.onmessage], [ServiceWorkerGlobalScope.onmessage], etc.)\n  Broadcast channels (see [Broadcastchannel.postMessage()]) and [BroadcastChannel.onmessage]).\n  WebRTC data channels (see [RTCDataChannel.onmessage]).\n\nThe action triggered by this event is defined in a function set as the event handler for the relevant [message] event (e.g. using an [onmessage] handler as listed above).\n  Note: This feature is available in Web Workers\n\n\n  \n    \n    \n      Event\n    \n  \n  \n    \n    \n      MessageEvent\n    \n  ",
    "members": []
  },
  "MessagePort": {
    "name": "MessagePort",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/MessagePort\"><code>MessagePort</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/MessagePort",
    "desc": "The  interface of the Channel Messaging API represents one of the two ports of a [MessageChannel], allowing messages to be sent from one port and listening out for them arriving at the other.\n  Note: This feature is available in Web Workers\n\n\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      MessagePort\n    \n  ",
    "members": []
  },
  "Metadata": {
    "name": "Metadata",
    "experimental": false,
    "deprecated": false,
    "standard": false,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/Metadata\"><code>Metadata</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/Metadata",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.Non-standard: This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.\nThe  interface is used by the File and Directory Entries API to contain information about a file system entry. This metadata includes the file's size and modification date and time.\n\n  Note: This interface isn't available through the global scope; instead, you obtain a  object describing a [FileSystemEntry] using the method [FileSystemEntry.getMetadata()].\n",
    "members": []
  },
  "MIDIAccess": {
    "name": "MIDIAccess",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/MIDIAccess\"><code>MIDIAccess</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/MIDIAccess",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  interface of the Web MIDI API provides methods for listing MIDI input and output devices, and obtaining access to those devices.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      MIDIAccess\n    \n  ",
    "members": []
  },
  "MIDIConnectionEvent": {
    "name": "MIDIConnectionEvent",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/MIDIConnectionEvent\"><code>MIDIConnectionEvent</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/MIDIConnectionEvent",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  interface of the Web MIDI API is the event passed to the [onstatechange] event handler of the [MIDIAccess] interface and the [onstatechange] event of the [MIDIPort] interface. This occurs any time a new port becomes available, or when a previously available port becomes unavailable. For example, this event is fired whenever a MIDI device is either plugged in to or unplugged from a computer.\n  \n    \n    \n      Event\n    \n  \n  \n    \n    \n      MIDIConnectionEvent\n    \n  ",
    "members": []
  },
  "MIDIInput": {
    "name": "MIDIInput",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/MIDIInput\"><code>MIDIInput</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/MIDIInput",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  interface of the Web MIDI API receives messages from a MIDI input port.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      MIDIPort\n    \n  \n  \n    \n    \n      MIDIInput\n    \n  ",
    "members": []
  },
  "MIDIInputMap": {
    "name": "MIDIInputMap",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/MIDIInputMap\"><code>MIDIInputMap</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/MIDIInputMap",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  read-only interface of the Web MIDI API provides a [Map]-like interface to the currently available MIDI input ports. Though it works generally like a map, because it is read-only it does not contain [clear()], [delete()], or [set()] functions.",
    "members": []
  },
  "MIDIMessageEvent": {
    "name": "MIDIMessageEvent",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/MIDIMessageEvent\"><code>MIDIMessageEvent</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/MIDIMessageEvent",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  interface of the Web MIDI API represents the event passed to the [onmidimessage] event handler of the [MIDIInput] interface. A [midimessage] event is fired every time a MIDI message is sent from a device represented by a [MIDIInput], for example when a MIDI keyboard key is pressed, a knob is tweaked, or a slider is moved.\n  \n    \n    \n      Event\n    \n  \n  \n    \n    \n      MIDIMessageEvent\n    \n  ",
    "members": []
  },
  "MIDIOutput": {
    "name": "MIDIOutput",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/MIDIOutput\"><code>MIDIOutput</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/MIDIOutput",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  interface of the Web MIDI API provides methods to add messages to the queue of an output device, and to clear the queue of messages.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      MIDIPort\n    \n  \n  \n    \n    \n      MIDIOutput\n    \n  ",
    "members": []
  },
  "MIDIOutputMap": {
    "name": "MIDIOutputMap",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/MIDIOutputMap\"><code>MIDIOutputMap</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/MIDIOutputMap",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  read-only interface of the Web MIDI API provides a [Map]-like interface to the currently available MIDI output ports. Although it works like a map, because it is read-only, it does not contain [clear()], [delete()], or [set()] functions.",
    "members": []
  },
  "MIDIPort": {
    "name": "MIDIPort",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/MIDIPort\"><code>MIDIPort</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/MIDIPort",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  interface of the Web MIDI API represents a MIDI input or output port.\nA  instance is created when a new MIDI device is connected. Therefore it has no constructor.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      MIDIPort\n    \n  ",
    "members": []
  },
  "MimeType": {
    "name": "MimeType",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/MimeType\"><code>MimeType</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/MimeType",
    "desc": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.\nThe  interface provides contains information about a MIME type associated with a particular plugin. [Navigator.mimeTypes] returns an array of this object.",
    "members": []
  },
  "MimeTypeArray": {
    "name": "MimeTypeArray",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/MimeTypeArray\"><code>MimeTypeArray</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/MimeTypeArray",
    "desc": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.\nThe  interface returns an array of [MimeType] instances, each of which contains information about a supported browser plugins. This object is returned by [Navigator.mimeTypes].",
    "members": []
  },
  "MouseEvent": {
    "name": "MouseEvent",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/MouseEvent\"><code>MouseEvent</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/MouseEvent",
    "desc": "\n  The  interface represents events that occur due to the user interacting with a pointing device (such as a mouse).\n  Common events using this interface include [click], [dblclick], [mouseup], [mousedown].\n\n\n   derives from [UIEvent], which in turn derives from [Event].\n  Though the [MouseEvent.initMouseEvent()] method is kept for backward compatibility, creating of a  object should be done using the [MouseEvent()] constructor.\n\nSeveral more specific events are based on , including [WheelEvent], [DragEvent], and [PointerEvent].\n  \n    \n    \n      Event\n    \n  \n  \n    \n    \n      UIEvent\n    \n  \n  \n    \n    \n      MouseEvent\n    \n  ",
    "members": []
  },
  "MouseScrollEvent": {
    "name": "MouseScrollEvent",
    "experimental": false,
    "deprecated": true,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/MouseScrollEvent\"><code>MouseScrollEvent</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/MouseScrollEvent",
    "desc": "Non-standard: This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.\nThe  interface represents events that occur due to the user moving a mouse wheel or similar input device.\n\n  Warning: Do not use this interface for wheel events.\n  Like [MouseWheelEvent], this interface is non-standard and deprecated. It was used in Gecko-based browsers only. Instead use the standard [WheelEvent].\n",
    "members": []
  },
  "msCaching": {
    "name": "msCaching",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/msCaching\"><code>msCaching</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/msCaching",
    "desc": "Non-standard: This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.\nThe  read/write property specifies whether stream data downloaded using XMLHttpRequestis cached to disk or not.\nThis proprietary method is specific to Internet Explorer and Microsoft Edge.",
    "members": []
  },
  "msCachingEnabled": {
    "name": "msCachingEnabled",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/msCachingEnabled\"><code>msCachingEnabled</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/msCachingEnabled",
    "desc": "Non-standard: This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.\nThe  method gets the current caching state for an XMLHttpRequest.\nThis proprietary method is specific to Internet Explorer and Microsoft Edge.",
    "members": []
  },
  "MSCandidateWindowHide": {
    "name": "MSCandidateWindowHide",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/MSCandidateWindowHide\"><code>MSCandidateWindowHide</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/MSCandidateWindowHide",
    "desc": "Non-standard: This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.\n fires after the Input Method Editor (IME) candidate window closes and is fully hidden.\nThis proprietary method is specific to Internet Explorer.",
    "members": []
  },
  "MSCandidateWindowShow": {
    "name": "MSCandidateWindowShow",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/MSCandidateWindowShow\"><code>MSCandidateWindowShow</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/MSCandidateWindowShow",
    "desc": "Non-standard: This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.\n fires immediately after the Input Method Editor (IME) candidate window is set to appear, but before it renders.\nThis proprietary method is specific to Internet Explorer.",
    "members": []
  },
  "MSCandidateWindowUpdate": {
    "name": "MSCandidateWindowUpdate",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/MSCandidateWindowUpdate\"><code>MSCandidateWindowUpdate</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/MSCandidateWindowUpdate",
    "desc": "Non-standard: This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.\n fires after the Input Method Editor (IME) candidate window has been identified as needing to change size, but before any visual updates have rendered.\nThis proprietary method is specific to Internet Explorer.",
    "members": []
  },
  "msCapsLockWarningOff": {
    "name": "msCapsLockWarningOff",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/msCapsLockWarningOff\"><code>msCapsLockWarningOff</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/msCapsLockWarningOff",
    "desc": "Non-standard: This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.\nThe  read/write property turns automatic caps lock warning on or off for validated password input fields.\nThis proprietary property is specific to Internet Explorer and Microsoft Edge.\nStarting with Internet Explorer 10, input type=password fields will automatically display a warning if the caps lock is on. This property enables this warning to be disabled.",
    "members": []
  },
  "msFirstPaint": {
    "name": "msFirstPaint",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/MsFirstPaint\"><code>msFirstPaint</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/MsFirstPaint",
    "desc": "Non-standard: This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.\n\n   is a read-only property which gets the time\n  when the document loaded by the window object began to be displayed to the user.\n\n\n  Put another way,  utilizes the browser to measure when the\n  first content completes being painted in the window. It is available from javascript and\n  can be reported from the field.\n\nThis proprietary property is specific to Internet Explorer and Microsoft Edge.",
    "members": []
  },
  "MSGestureEvent": {
    "name": "MSGestureEvent",
    "experimental": false,
    "deprecated": false,
    "standard": false,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/MSGestureEvent\"><code>MSGestureEvent</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/MSGestureEvent",
    "desc": "Non-standard: This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.\nThe  is a proprietary interface specific to Internet Explorer and Microsoft Edge which represents events that occur due to touch gestures. Events using this interface include [MSGestureStart], [MSGestureEnd], [MSGestureTap], [MSGestureHold], [MSGestureChange], and [MSInertiaStart].\n derives from [UIEvent], which in turn derives from [Event]. Though the [MSGestureEvent.initGestureEvent()] method is kept for backward compatibility, the creation of an  object should be done using the [MSGestureEvent()] constructor.",
    "members": []
  },
  "msGetPropertyEnabled": {
    "name": "msGetPropertyEnabled",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/msGetPropertyEnabled\"><code>msGetPropertyEnabled</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/msGetPropertyEnabled",
    "desc": "Non-standard: This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.\nThe  returns whether a given property in the style object is enabled.\nThis proprietary method is specific to Internet Explorer browser.",
    "members": []
  },
  "msGetRegionContent": {
    "name": "msGetRegionContent",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/msGetRegionContent\"><code>msGetRegionContent</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/msGetRegionContent",
    "desc": "Non-standard: This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.\nThe  returns an array of Range instances corresponding to the content from the region flow that is positioned in the region.\nThis proprietary method is specific to Internet Explorer browser.",
    "members": []
  },
  "MSGraphicsTrust": {
    "name": "MSGraphicsTrust",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/MSGraphicsTrust\"><code>MSGraphicsTrust</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/MSGraphicsTrust",
    "desc": "Non-standard: This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.\n\n  The [msGraphicsTrust()] constructor returns an object that\n  provides properties for info on protected video playback.\n\nThis proprietary method is specific to Internet Explorer and Microsoft Edge.",
    "members": []
  },
  "msGraphicsTrustStatus": {
    "name": "msGraphicsTrustStatus",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/MsGraphicsTrustStatus\"><code>msGraphicsTrustStatus</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/MsGraphicsTrustStatus",
    "desc": "Non-standard: This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.\n\n   is a read-only property which\n  returns an object containing information on protected video playback.\n\nThis proprietary property is specific to Internet Explorer and Microsoft Edge.",
    "members": []
  },
  "msIsBoxed": {
    "name": "msIsBoxed",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/MsIsBoxed\"><code>msIsBoxed</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/MsIsBoxed",
    "desc": "Non-standard: This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.\n\n   is a property which gets or sets when the video\n  player control is in boxed (letterbox or pillarbox) mode.\n\nThis proprietary property is specific to Internet Explorer and Microsoft Edge.\n\n  Returns true if the video is in letterbox or pillarbox mode. Letterbox format displays\n  black bars on the top and bottom of a video to fill in between the wide screen format of\n  a video, and the aspect ratio of the screen. Typically the video's left and right edges\n  go to the full width of the screen. Pillarbox format displays black bars on the left and\n  right of a video to fill in the difference between a video and a wider screen. With\n  pillarbox format, the top and bottom edges of the video go to the full height of the\n  screen.\n",
    "members": []
  },
  "MSManipulationEvent": {
    "name": "MSManipulationEvent",
    "experimental": false,
    "deprecated": false,
    "standard": false,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/MSManipulationEvent\"><code>MSManipulationEvent</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/MSManipulationEvent",
    "desc": "Non-standard: This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.\n provides contextual information when contact is made to the screen and an element is manipulated.\nThis proprietary method is specific to Internet Explorer.",
    "members": []
  },
  "msPlayToDisabled": {
    "name": "msPlayToDisabled",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/MsPlayToDisabled\"><code>msPlayToDisabled</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/MsPlayToDisabled",
    "desc": "Non-standard: This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.\n\n   is a read/write property which gets and\n  sets if the PlayTo device is enabled or disabled.\n\nThis proprietary property is specific to Internet Explorer and Microsoft Edge.",
    "members": []
  },
  "msPlayToPreferredSourceUri": {
    "name": "msPlayToPreferredSourceUri",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/MsPlayToPreferredSourceUri\"><code>msPlayToPreferredSourceUri</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/MsPlayToPreferredSourceUri",
    "desc": "Non-standard: This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.\n\n   is a read/write property which\n  gets or sets the path to the preferred media source. This enables the PlayTo\n  target device to stream the media content, which can be DRM protected, from a different\n  location, such as a cloud media server.\n\nThis proprietary property is specific to Internet Explorer and Microsoft Edge.",
    "members": []
  },
  "msPlayToPrimary": {
    "name": "msPlayToPrimary",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/MsPlayToPrimary\"><code>msPlayToPrimary</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/MsPlayToPrimary",
    "desc": "Non-standard: This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.\n\n   is a read/write property which gets or\n  sets the primary DLNA PlayTo device.\n\nThis proprietary property is specific to Internet Explorer and Microsoft Edge.",
    "members": []
  },
  "msPlayToSource": {
    "name": "msPlayToSource",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/MsPlayToSource\"><code>msPlayToSource</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/MsPlayToSource",
    "desc": "Non-standard: This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.\n\n   is a read-only property which gets the\n  source associated with the media element for use by the [PlayToManager].\n\nThis proprietary property is specific to Internet Explorer and Microsoft Edge.",
    "members": []
  },
  "msPutPropertyEnabled": {
    "name": "msPutPropertyEnabled",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/msPutPropertyEnabled\"><code>msPutPropertyEnabled</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/msPutPropertyEnabled",
    "desc": "Non-standard: This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.\nThe  method sets whether a given property in the style object is enabled or disabled.\nThis proprietary method is specific to Internet Explorer and Microsoft Edge.",
    "members": []
  },
  "MSRangeCollection": {
    "name": "MSRangeCollection",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/MSRangeCollection\"><code>MSRangeCollection</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/MSRangeCollection",
    "desc": "Non-standard: This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.\nThe  object is an array of one or more Range objects.",
    "members": []
  },
  "msRealTime": {
    "name": "msRealTime",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/MsRealTime\"><code>msRealTime</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/MsRealTime",
    "desc": "Non-standard: This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.\n\n   is a read/write property which specifies\n  whether or not to enable low-latency playback on the media element.\n\nThis proprietary property is specific to Internet Explorer and Microsoft Edge.",
    "members": []
  },
  "msRegionOverflow": {
    "name": "msRegionOverflow",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/msRegionOverflow\"><code>msRegionOverflow</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/msRegionOverflow",
    "desc": "Non-standard: This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.\nThe  read-only property determines if content fully fits into the region or not.\nThis proprietary property is specific to Internet Explorer.",
    "members": []
  },
  "msSetMediaProtectionManager": {
    "name": "msSetMediaProtectionManager",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/MsSetMediaProtectionManager\"><code>msSetMediaProtectionManager</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/MsSetMediaProtectionManager",
    "desc": "Non-standard: This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.\n\n  The  method specifies the\n  media protection manager for a given media pipeline.\n\nThis proprietary method is specific to Internet Explorer and Microsoft Edge.",
    "members": []
  },
  "MSSiteModeEvent": {
    "name": "MSSiteModeEvent",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/MSSiteModeEvent\"><code>MSSiteModeEvent</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/MSSiteModeEvent",
    "desc": "Non-standard: This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.\n provides event properties that are specific to pinned site events.\nThis proprietary method is specific to Internet Explorer and Microsoft Edge.",
    "members": []
  },
  "msWriteProfilerMark": {
    "name": "msWriteProfilerMark",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/msWriteProfilerMark\"><code>msWriteProfilerMark</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/msWriteProfilerMark",
    "desc": "Non-standard: This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.\nThe  method writes a profiling event.\nThis proprietary method is specific to Internet Explorer and Microsoft Edge.",
    "members": []
  },
  "MutationEvent": {
    "name": "MutationEvent",
    "experimental": false,
    "deprecated": true,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/MutationEvent\"><code>MutationEvent</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/MutationEvent",
    "desc": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.\n\n  Note: Mutation Events (W3C DOM Level 3 Events) have been deprecated in favor of Mutation Observers (W3C DOM4).\n\nThe  interface provides event properties that are specific to modifications to the Document Object Model (DOM) hierarchy and nodes.\n  \n    \n    \n      Event\n    \n  \n  \n    \n    \n      MutationEvent\n    \n  ",
    "members": []
  },
  "MutationObserver": {
    "name": "MutationObserver",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/MutationObserver\"><code>MutationObserver</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/MutationObserver",
    "desc": "The  interface provides the ability to watch for changes being made to the DOM tree. It is designed as a replacement for the older Mutation Events feature, which was part of the DOM3 Events specification.",
    "members": []
  },
  "MutationRecord": {
    "name": "MutationRecord",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/MutationRecord\"><code>MutationRecord</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/MutationRecord",
    "desc": "A  represents an individual DOM mutation. It is the object that is inside the array passed to [MutationObserver]'s callback.",
    "members": []
  },
  "NamedNodeMap": {
    "name": "NamedNodeMap",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/NamedNodeMap\"><code>NamedNodeMap</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/NamedNodeMap",
    "desc": "The  interface represents a collection of [Attr] objects. Objects inside a  are not in any particular order, unlike [NodeList], although they may be accessed by an index as in an array.\nA  object is live and will thus be auto-updated if changes are made to its contents internally or elsewhere.\n\n  Note: Although called , this interface doesn't deal with [Node] objects but with [Attr] objects, which were originally a specialized class of [Node], and still are in some implementations.\n",
    "members": []
  },
  "NavigationPreloadManager": {
    "name": "NavigationPreloadManager",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/NavigationPreloadManager\"><code>NavigationPreloadManager</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/NavigationPreloadManager",
    "desc": "The  interface of the Service Worker API provides methods for managing the preloading of resources with a service worker.",
    "members": []
  },
  "Navigator": {
    "name": "Navigator",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/Navigator\"><code>Navigator</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/Navigator",
    "desc": "The  interface represents the state and the identity of the user agent. It allows scripts to query it and to register themselves to carry on some activities.\nA  object can be retrieved using the read-only [window.navigator] property.",
    "members": []
  },
  "NavigatorUAData": {
    "name": "NavigatorUAData",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/NavigatorUAData\"><code>NavigatorUAData</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/NavigatorUAData",
    "desc": "The  interface of the [User-Agent Client Hints API] returns information about the browser and operating system of a user.\nAn instance of this object is returned by calling [Navigator.userAgentData]. Therefore, this interface has no constructor.\n\n  Note: The terms high entropy and low entropy refer to the amount of information these values reveal about the browser. The values returned as properties are deemed low entropy, and unlikely to identify a user. The values returned by [NavigatorUAData.getHighEntropyValues()] could potentially reveal more information. These values are therefore retrieved via a [Promise], allowing time for the browser to request user permission, or make other checks.\n",
    "members": []
  },
  "NDEFMessage": {
    "name": "NDEFMessage",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/NDEFMessage\"><code>NDEFMessage</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/NDEFMessage",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  interface of the Web NFC API represents the content of an NDEF message that has been read from or could be written to an NFC tag. An instance is acquired by calling the [NDEFMessage()] constructor or from the [NDEFReadingEvent.message] property, which is passed to [NDEFReader.onreading].",
    "members": []
  },
  "NDEFReader": {
    "name": "NDEFReader",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/NDEFReader\"><code>NDEFReader</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/NDEFReader",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  interface of the Web NFC API is used to read from and write data to compatible NFC devices, e.g. NFC tags supporting NDEF, when these devices are within the reader's magnetic induction field.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      NDEFReader\n    \n  ",
    "members": []
  },
  "NDEFReadingEvent": {
    "name": "NDEFReadingEvent",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/NDEFReadingEvent\"><code>NDEFReadingEvent</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/NDEFReadingEvent",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  interface of the Web NFC API represents events dispatched on new NFC readings obtained by [NDEFReader].\n  \n    \n    \n      Event\n    \n  \n  \n    \n    \n      NDEFReadingEvent\n    \n  ",
    "members": []
  },
  "NDEFRecord": {
    "name": "NDEFRecord",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/NDEFRecord\"><code>NDEFRecord</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/NDEFRecord",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  interface of the Web NFC API provides data that can be read from, or written to, compatible NFC devices, e.g. NFC tags supporting NDEF.",
    "members": []
  },
  "NetworkInformation": {
    "name": "NetworkInformation",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/NetworkInformation\"><code>NetworkInformation</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/NetworkInformation",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  interface provides information about the connection a device is using to communicate with the network and provides a means for scripts to be notified if the connection type changes. The  interfaces cannot be instantiated. It is instead accessed through the [connection] property of the [Navigator] interface.\n  Note: This feature is available in Web Workers\n\n\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      NetworkInformation\n    \n  ",
    "members": []
  },
  "Node": {
    "name": "Node",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/Node\"><code>Node</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/Node",
    "desc": "\n  The DOM  interface is an abstract base\n  class upon which many other DOM API objects are based, thus letting those object types\n  to be used similarly and often interchangeably. As an abstract class, there is\n  no such thing as a plain  object. All objects that implement\n   functionality are based on one of its subclasses. Most notable are\n  [Document], [Element], and [DocumentFragment].\n\n\n  In addition, every kind of DOM node is represented by an interface based on\n  . These include [Attr], [CharacterData]\n  (which [Text], [Comment], [CDATASection] and\n  [ProcessingInstruction] are all based on), and [DocumentType].\n\n\n  In some cases, a particular feature of the base  interface may not\n  apply to one of its child interfaces; in that case, the inheriting node may\n  return [null] or throw an exception, depending on circumstances. For example,\n  attempting to add children to a node type that cannot have children will throw an\n  exception.\n\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  ",
    "members": []
  },
  "NodeFilter": {
    "name": "NodeFilter",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/NodeFilter\"><code>NodeFilter</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/NodeFilter",
    "desc": "A  interface represents an object used to filter the nodes in a [NodeIterator] or [TreeWalker]. A  knows nothing about the document or traversing nodes; it only knows how to evaluate a single node against the provided filter.\n\n  Note: The browser doesn't provide any object implementing this interface. It is the user who is expected to write one, tailoring the [acceptNode()] method to its needs, and using it with some [TreeWalker] or [NodeIterator] objects.\n",
    "members": []
  },
  "NodeIterator": {
    "name": "NodeIterator",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/NodeIterator\"><code>NodeIterator</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/NodeIterator",
    "desc": "\n  The  interface\n  represents an iterator over the members of a list of the nodes in a subtree of the\n  DOM. The nodes will be returned in document order.\n",
    "members": []
  },
  "NodeList": {
    "name": "NodeList",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/NodeList\"><code>NodeList</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/NodeList",
    "desc": " objects are collections of nodes, usually returned by properties such as [Node.childNodes] and methods such as [document.querySelectorAll()].\n\n  Note: Although  is not an [Array], it is possible to iterate over it with [forEach()]. It can also be converted to a real [Array] using [Array.from()].\n  However, some older browsers have not implemented [NodeList.forEach()] nor [Array.from()]. This can be circumvented by using [Array.prototype.forEach()] — see this document's Example.\n",
    "members": []
  },
  "Notification": {
    "name": "Notification",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/Notification\"><code>Notification</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/Notification",
    "desc": "\n  Note: This feature is available in Web Workers\nSecure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  interface of the Notifications API is used to configure and display desktop notifications to the user.\nThese notifications' appearance and specific functionality vary across platforms but generally they provide a way to asynchronously provide information to the user.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Notification\n    \n  ",
    "members": []
  },
  "NotificationEvent": {
    "name": "NotificationEvent",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/NotificationEvent\"><code>NotificationEvent</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/NotificationEvent",
    "desc": "The parameter passed into the [onnotificationclick] handler, the  interface represents a notification click event that is dispatched on the [ServiceWorkerGlobalScope] of a [ServiceWorker].\nThis interface inherits from the [ExtendableEvent] interface.\n  \n    \n    \n      Event\n    \n  \n  \n    \n    \n      ExtendableEvent\n    \n  \n  \n    \n    \n      NotificationEvent\n    \n  ",
    "members": []
  },
  "NotifyAudioAvailableEvent": {
    "name": "NotifyAudioAvailableEvent",
    "experimental": false,
    "deprecated": true,
    "standard": false,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/NotifyAudioAvailableEvent\"><code>NotifyAudioAvailableEvent</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg> <svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/NotifyAudioAvailableEvent",
    "desc": "Non-standard: This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.\nThe non-standard, obsolete,  interface defines the event sent to audio elements  when the audio buffer is full.",
    "members": []
  },
  "OES_element_index_uint": {
    "name": "OES_element_index_uint",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/OES_element_index_uint\"><code>OES_element_index_uint</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/OES_element_index_uint",
    "desc": "The  extension is part of the WebGL API and adds support for [gl.UNSIGNED_INT] types to [WebGLRenderingContext.drawElements()].\nWebGL extensions are available using the [WebGLRenderingContext.getExtension()] method. For more information, see also Using Extensions in the WebGL tutorial.\n\n  Note: This extension is only available to WebGL1 contexts. In WebGL2, the functionality of this extension is available on the WebGL2 context by default.\n",
    "members": []
  },
  "OES_fbo_render_mipmap": {
    "name": "OES_fbo_render_mipmap",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/OES_fbo_render_mipmap\"><code>OES_fbo_render_mipmap</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/OES_fbo_render_mipmap",
    "desc": "The  extension is part of the WebGL API and makes it possible to attach any level of a texture to a framebuffer object.\nWebGL extensions are available using the [WebGLRenderingContext.getExtension()] method. For more information, see also Using Extensions in the WebGL tutorial.\n\n  \n    Note: This extension is only available to WebGL 1.  \n    In WebGL2, the functionality of this extension is available in the WebGL 2 context by default.\n  \n",
    "members": []
  },
  "OES_standard_derivatives": {
    "name": "OES_standard_derivatives",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/OES_standard_derivatives\"><code>OES_standard_derivatives</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/OES_standard_derivatives",
    "desc": "The  extension is part of the WebGL API and adds the GLSL derivative functions [dFdx], [dFdy], and [fwidth].\nWebGL extensions are available using the [WebGLRenderingContext.getExtension()] method. For more information, see also Using Extensions in the WebGL tutorial.\n\n  Note: This extension is only available to WebGL1 contexts. In WebGL2, the functionality of this extension is available on the WebGL2 context by default. In WebGL 2, the constant is available as [gl.FRAGMENT_SHADER_DERIVATIVE_HINT] and it requires GLSL [#version 300 es].\n",
    "members": []
  },
  "OES_texture_float": {
    "name": "OES_texture_float",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/OES_texture_float\"><code>OES_texture_float</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/OES_texture_float",
    "desc": "The  extension is part of the WebGL API and exposes floating-point pixel types for textures.\nWebGL extensions are available using the [WebGLRenderingContext.getExtension()] method. For more information, see also Using Extensions in the WebGL tutorial.\n\n  Note: This extension is only available to WebGL1 contexts. In WebGL2, the functionality of this extension is available on the WebGL2 context by default.\n",
    "members": []
  },
  "OES_texture_float_linear": {
    "name": "OES_texture_float_linear",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/OES_texture_float_linear\"><code>OES_texture_float_linear</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/OES_texture_float_linear",
    "desc": "The  extension is part of the WebGL API and allows linear filtering with floating-point pixel types for textures.\nWebGL extensions are available using the [WebGLRenderingContext.getExtension()] method. For more information, see also Using Extensions in the WebGL tutorial.\n\n  Note: This extension is available to both, WebGL1 and WebGL2 contexts.\n",
    "members": []
  },
  "OES_texture_half_float": {
    "name": "OES_texture_half_float",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/OES_texture_half_float\"><code>OES_texture_half_float</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/OES_texture_half_float",
    "desc": "The  extension is part of the WebGL API and adds texture formats with 16- (aka half float) and 32-bit floating-point components.\nWebGL extensions are available using the [WebGLRenderingContext.getExtension()] method. For more information, see also Using Extensions in the WebGL tutorial.\n\n  Note: This extension is only available to WebGL1 contexts. In WebGL2, the functionality of this extension is available on the WebGL2 context by default. The constant in WebGL2 is [gl.HALF_FLOAT].\n",
    "members": []
  },
  "OES_texture_half_float_linear": {
    "name": "OES_texture_half_float_linear",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/OES_texture_half_float_linear\"><code>OES_texture_half_float_linear</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/OES_texture_half_float_linear",
    "desc": "The  extension is part of the WebGL API and allows linear filtering with half floating-point pixel types for textures.\nWebGL extensions are available using the [WebGLRenderingContext.getExtension()] method. For more information, see also Using Extensions in the WebGL tutorial.\n\n  Note: This extension is available to both, WebGL1 and WebGL2 contexts.\n",
    "members": []
  },
  "OES_vertex_array_object": {
    "name": "OES_vertex_array_object",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/OES_vertex_array_object\"><code>OES_vertex_array_object</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/OES_vertex_array_object",
    "desc": "The OES_vertex_array_object extension is part of the WebGL API and provides vertex array objects (VAOs) which encapsulate vertex array states. These objects keep pointers to vertex data and provide names for different sets of vertex data.\nWebGL extensions are available using the [WebGLRenderingContext.getExtension()] method. For more information, see also Using Extensions in the WebGL tutorial.\n\n  Note: This extension is only available to WebGL1 contexts. In WebGL2, the functionality of this extension is available on the WebGL2 context by default and the constants and methods are available without the \"[OES]\" suffix.\n",
    "members": []
  },
  "OfflineAudioCompletionEvent": {
    "name": "OfflineAudioCompletionEvent",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/OfflineAudioCompletionEvent\"><code>OfflineAudioCompletionEvent</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/OfflineAudioCompletionEvent",
    "desc": "The Web Audio API  interface represents events that occur when the processing of an [OfflineAudioContext] is terminated. The [complete] event uses this interface.\n\n  Note: This interface is marked as deprecated; it is still supported for legacy reasons, but it will soon be superseded when the promise version of [OfflineAudioContext.startRendering] is supported in browsers, which will no longer need it.\n\n  \n    \n    \n      Event\n    \n  \n  \n    \n    \n      OfflineAudioCompletionEvent\n    \n  ",
    "members": []
  },
  "OfflineAudioContext": {
    "name": "OfflineAudioContext",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/OfflineAudioContext\"><code>OfflineAudioContext</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/OfflineAudioContext",
    "desc": "The  interface is an [AudioContext] interface representing an audio-processing graph built from linked together [AudioNode]s. In contrast with a standard [AudioContext], an  doesn't render the audio to the device hardware; instead, it generates it, as fast as it can, and outputs the result to an [AudioBuffer].\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      BaseAudioContext\n    \n  \n  \n    \n    \n      OfflineAudioContext\n    \n  ",
    "members": []
  },
  "OffscreenCanvas": {
    "name": "OffscreenCanvas",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/OffscreenCanvas\"><code>OffscreenCanvas</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/OffscreenCanvas",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  interface provides a canvas that can be rendered off screen. It is available in both the window and worker contexts.\n  Note: This feature is available in Web Workers\n\n\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      OffscreenCanvas\n    \n  ",
    "members": []
  },
  "OrientationSensor": {
    "name": "OrientationSensor",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/OrientationSensor\"><code>OrientationSensor</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/OrientationSensor",
    "desc": "The  interface of the Sensor APIs is the base class for orientation sensors. This interface cannot be used directly. Instead it provides properties and methods accessed by interfaces that inherit from it.\nIf a feature policy blocks use of a feature it is because your code is inconsistent with the policies set on your server. This is not something that would ever be shown to a user. The [Feature-Policy] HTTP header article contains implementation instructions.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Sensor\n    \n  \n  \n    \n    \n      OrientationSensor\n    \n  ",
    "members": []
  },
  "origin": {
    "name": "origin",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/origin\"><code>origin</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/origin",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\n\n  The global  read-only property returns the origin of the global\n  scope, serialized as a string.\n",
    "members": []
  },
  "OscillatorNode": {
    "name": "OscillatorNode",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/OscillatorNode\"><code>OscillatorNode</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/OscillatorNode",
    "desc": "The  interface represents a periodic waveform, such as a sine wave. It is an [AudioScheduledSourceNode] audio-processing module that causes a specified frequency of a given wave to be created—in effect, a constant tone.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      AudioNode\n    \n  \n  \n    \n    \n      AudioScheduledSourceNode\n    \n  \n  \n    \n    \n      OscillatorNode\n    \n  \n\n  \n    \n      Number of inputs\n      [0]\n    \n    \n      Number of outputs\n      [1]\n    \n    \n      Channel count mode\n      [max]\n    \n    \n      Channel count\n      [2] (not used in the default count mode)\n    \n    \n      Channel interpretation\n      [speakers]\n    \n  \n",
    "members": []
  },
  "OTPCredential": {
    "name": "OTPCredential",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/OTPCredential\"><code>OTPCredential</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/OTPCredential",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  interface of the WebOTP API contains the attributes that are returned when a new one-time password is retrieved.\n  \n    \n    \n      Credential\n    \n  \n  \n    \n    \n      OTPCredential\n    \n  ",
    "members": []
  },
  "OverconstrainedError": {
    "name": "OverconstrainedError",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/OverconstrainedError\"><code>OverconstrainedError</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/OverconstrainedError",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  interface of the Media Capture and Streams API indicates that the set of desired capabilities for the current [MediaStreamTrack] cannot currently be met. When this event is thrown on a MediaStreamTrack, it is muted until either the current constraints can be established or until satisfiable constraints are applied.\n  \n    \n    \n      DOMException\n    \n  \n  \n    \n    \n      OverconstrainedError\n    \n  ",
    "members": []
  },
  "OVR_multiview2": {
    "name": "OVR_multiview2",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/OVR_multiview2\"><code>OVR_multiview2</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/OVR_multiview2",
    "desc": "The  extension is part of the WebGL API and adds support for rendering into multiple views simultaneously. This especially useful for virtual reality (VR) and WebXR.\nFor more information, see also:\n\n  Multiview on WebXR\n  three.js multiview demo\n  Multiview in babylon.js\n  Optimizing Virtual Reality: Understanding Multiview\n  Multiview WebGL Rendering for Oculus Browser 6.0+\n\nWebGL extensions are available using the [WebGLRenderingContext.getExtension()] method. For more information, see also Using Extensions in the WebGL tutorial.\n\n  Note: Support depends on the system's graphics driver (Windows+ANGLE and Android are supported; Windows+GL, Mac, Linux are not supported).\n  This extension is only available to WebGL 2 contexts as it needs GLSL 3.00 and texture arrays.\n  Currently, there is no way to use multiview to render to a multisampled backbuffer, so you should create contexts with [antialias: false]. However, the Oculus browser (6+) also supports multisampling using the [OCULUS_multiview] extension. See also this WebGL issue.\n",
    "members": []
  },
  "PageTransitionEvent": {
    "name": "PageTransitionEvent",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/PageTransitionEvent\"><code>PageTransitionEvent</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/PageTransitionEvent",
    "desc": "The  event object is available inside handler functions for the [pageshow] and [pagehide] events, fired when a document is being loaded or unloaded.\n  \n    \n    \n      Event\n    \n  \n  \n    \n    \n      PageTransitionEvent\n    \n  ",
    "members": []
  },
  "PaintWorklet": {
    "name": "PaintWorklet",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/PaintWorklet\"><code>PaintWorklet</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/PaintWorklet",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  interface of the CSS Painting API programmatically generates an image where a CSS property expects a file. Access this interface through [CSS.paintWorklet].",
    "members": []
  },
  "PannerNode": {
    "name": "PannerNode",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/PannerNode\"><code>PannerNode</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/PannerNode",
    "desc": "The  interface represents the position and behavior of an audio source signal in space. It is an [AudioNode] audio-processing module describing its position with right-hand Cartesian coordinates, its movement using a velocity vector and its directionality using a directionality cone.\nA  always has exactly one input and one output: the input can be mono or stereo but the output is always stereo (2 channels); you can't have panning effects without at least two audio channels!\n\n  \n\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      AudioNode\n    \n  \n  \n    \n    \n      PannerNode\n    \n  \n\n  \n    \n      Number of inputs\n      [1]\n    \n    \n      Number of outputs\n      [1]\n    \n    \n      Channel count mode\n      [\"clamped-max\"]\n    \n    \n      Channel count\n      [2]\n    \n    \n      Channel interpretation\n      [\"speakers\"]\n    \n  \n",
    "members": []
  },
  "PasswordCredential": {
    "name": "PasswordCredential",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/PasswordCredential\"><code>PasswordCredential</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/PasswordCredential",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe interface of the Credential Management API provides information about a username/password pair. In supporting browsers an instance of this class may be passed in the [credential] member of the [init] object for global [fetch()].\n\n  Note: This interface is restricted to top-level contexts and cannot be used from an [<iframe>].\n\n  \n    \n    \n      Credential\n    \n  \n  \n    \n    \n      PasswordCredential\n    \n  ",
    "members": []
  },
  "Path2D": {
    "name": "Path2D",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/Path2D\"><code>Path2D</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/Path2D",
    "desc": "The  interface of the Canvas 2D API is used to declare a path that can then be used on a [CanvasRenderingContext2D] object. The path methods of the [CanvasRenderingContext2D] interface are also present on this interface, which gives you the convenience of being able to retain and replay your path whenever desired.",
    "members": []
  },
  "PaymentAddress": {
    "name": "PaymentAddress",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/PaymentAddress\"><code>PaymentAddress</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/PaymentAddress",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers. Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.Non-standard: This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.\nThe  interface of the Payment Request API is used to store shipping or payment address information.\nIt may be useful to refer to the Universal Postal Union web site's Addressing S42 standard materials, which provide information about international standards for postal addresses.",
    "members": []
  },
  "PaymentMethodChangeEvent": {
    "name": "PaymentMethodChangeEvent",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/PaymentMethodChangeEvent\"><code>PaymentMethodChangeEvent</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/PaymentMethodChangeEvent",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  interface of the Payment Request API describes the [paymentmethodchange] event which is fired by some payment handlers when the user switches payment instruments (e.g., a user selects a \"store\" card to make a purchase while using Apple Pay).\n  \n    \n    \n      Event\n    \n  \n  \n    \n    \n      PaymentRequestUpdateEvent\n    \n  \n  \n    \n    \n      PaymentMethodChangeEvent\n    \n  ",
    "members": []
  },
  "PaymentRequest": {
    "name": "PaymentRequest",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/PaymentRequest\"><code>PaymentRequest</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/PaymentRequest",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe Payment Request API's  interface is the primary access point into the API, and lets web content and apps accept payments from the end user on behalf of the operator of the site or the publisher of the app.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      PaymentRequest\n    \n  ",
    "members": []
  },
  "PaymentRequestEvent": {
    "name": "PaymentRequestEvent",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/PaymentRequestEvent\"><code>PaymentRequestEvent</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/PaymentRequestEvent",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  interface of the Payment Request API is the object passed to a payment handler when a [PaymentRequest] is made.\n  \n    \n    \n      Event\n    \n  \n  \n    \n    \n      ExtendableEvent\n    \n  \n  \n    \n    \n      PaymentRequestEvent\n    \n  ",
    "members": []
  },
  "PaymentRequestUpdateEvent": {
    "name": "PaymentRequestUpdateEvent",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/PaymentRequestUpdateEvent\"><code>PaymentRequestUpdateEvent</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/PaymentRequestUpdateEvent",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  interface is used for events sent to a [PaymentRequest] instance when changes are made to shipping-related information for a pending [PaymentRequest]. Those events are:\n\n  [shippingaddresschange] Secure context\n  \n    \n      Dispatched whenever the user changes their shipping address.\n      Also available using the [onshippingaddresschange] event handler property.\n    \n  \n  [shippingoptionchange] Secure context\n  \n    \n      Dispatched whenever the user changes a shipping option.\n      Also available using the [onshippingoptionchange] event handler property.\n    \n  \n\n  \n    \n    \n      Event\n    \n  \n  \n    \n    \n      PaymentRequestUpdateEvent\n    \n  ",
    "members": []
  },
  "PaymentResponse": {
    "name": "PaymentResponse",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/PaymentResponse\"><code>PaymentResponse</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/PaymentResponse",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  interface of the Payment Request API is returned after a user selects a payment method and approves a payment request.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      PaymentResponse\n    \n  ",
    "members": []
  },
  "PaymentValidationErrors": {
    "name": "PaymentValidationErrors",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/PaymentValidationErrors\"><code>PaymentValidationErrors</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/PaymentValidationErrors",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  dictionary represents objects providing information about any and all errors that occurred while processing a payment request. When validation of the [PaymentResponse] returned by the [PaymentRequest.show()] or [PaymentResponse.retry()] methods fails, your code creates a  object to pass into [retry()] so that the user agent knows what needs to be fixed and what if any error messages to display to the user.",
    "members": []
  },
  "Pbkdf2Params": {
    "name": "Pbkdf2Params",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/Pbkdf2Params\"><code>Pbkdf2Params</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/Pbkdf2Params",
    "desc": "The  dictionary of the Web Crypto API represents the object that should be passed as the [algorithm] parameter into [SubtleCrypto.deriveKey()], when using the PBKDF2 algorithm.",
    "members": []
  },
  "Performance": {
    "name": "Performance",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/Performance\"><code>Performance</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/Performance",
    "desc": "The  interface provides access to performance-related information for the current page. It's part of the High Resolution Time API, but is enhanced by the Performance Timeline API, the Navigation Timing API, the User Timing API, and the Resource Timing API.\nAn object of this type can be obtained by calling the [window.performance] read-only attribute.\n\n  Note: This interface and its members are available in Web Workers via [WorkerGlobalScope.performance] , except where indicated below. Also, note that performance markers and measures are per context. If you create a mark on the main thread (or other worker), you cannot see it in a worker thread, and vice versa.\n\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Performance\n    \n  ",
    "members": []
  },
  "PerformanceElementTiming": {
    "name": "PerformanceElementTiming",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/PerformanceElementTiming\"><code>PerformanceElementTiming</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/PerformanceElementTiming",
    "desc": "The  interface of the Element Timing API reports timing information on a specific element identified by the page author. For example it could report timing information about the main image in an article.\n  \n    \n    \n      PerformanceEntry\n    \n  \n  \n    \n    \n      PerformanceElementTiming\n    \n  ",
    "members": []
  },
  "PerformanceEntry": {
    "name": "PerformanceEntry",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/PerformanceEntry\"><code>PerformanceEntry</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/PerformanceEntry",
    "desc": "The  object encapsulates a single performance metric that is part of the performance timeline. A performance entry can be directly created by making a performance [mark] or [measure] (for example by calling the [mark()] method) at an explicit point in an application. Performance entries are also created in indirect ways such as loading a resource (such as an image).\n instances will always be one of the following subtypes:\n\n  [PerformanceMark]\n  [PerformanceMeasure]\n  [PerformanceNavigationTiming]\n  [PerformanceResourceTiming]\n  [PerformancePaintTiming]\n\n  Note: This feature is available in Web Workers\n",
    "members": []
  },
  "PerformanceEventTiming": {
    "name": "PerformanceEventTiming",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/PerformanceEventTiming\"><code>PerformanceEventTiming</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/PerformanceEventTiming",
    "desc": "The  interface of the Event Timing API provides timing information for the event types listed below.\n\n  [auxclick]\n  [beforeinput]\n  [click]\n  [compositionend]\n  [compositionstart]\n  [compositionupdate]\n  [contextmenu]\n  [dblclick]\n  [dragend]\n  [dragenter]\n  [dragleave]\n  [dragover]\n  [dragstart]\n  [drop]\n  [input]\n  [keydown]\n  [keypress]\n  [keyup]\n  [mousedown]\n  [mouseenter]\n  [mouseleave]\n  [mouseout]\n  [mouseover]\n  [mouseup]\n  [pointerover]\n  [pointerenter]\n  [pointerdown]\n  [pointerup]\n  [pointercancel]\n  [pointerout]\n  [pointerleave]\n  [gotpointercapture]\n  [lostpointercapture]\n  [touchstart]\n  [touchend]\n  [touchcancel]\n\n  \n    \n    \n      PerformanceEntry\n    \n  \n  \n    \n    \n      PerformanceEventTiming\n    \n  ",
    "members": []
  },
  "PerformanceLongTaskTiming": {
    "name": "PerformanceLongTaskTiming",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/PerformanceLongTaskTiming\"><code>PerformanceLongTaskTiming</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/PerformanceLongTaskTiming",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  interface of the Long Tasks API reports instances of long tasks.\n  \n    \n    \n      PerformanceEntry\n    \n  \n  \n    \n    \n      PerformanceLongTaskTiming\n    \n  ",
    "members": []
  },
  "PerformanceMark": {
    "name": "PerformanceMark",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/PerformanceMark\"><code>PerformanceMark</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/PerformanceMark",
    "desc": " is an abstract interface for [PerformanceEntry] objects with an [entryType] of \"[mark]\". Entries of this type are created by calling [performance.mark()] to add a named [DOMHighResTimeStamp] (the mark) to the browser's performance timeline.\n  \n    \n    \n      PerformanceEntry\n    \n  \n  \n    \n    \n      PerformanceMark\n    \n  \n\n  Note: This feature is available in Web Workers\n",
    "members": []
  },
  "PerformanceMeasure": {
    "name": "PerformanceMeasure",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/PerformanceMeasure\"><code>PerformanceMeasure</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/PerformanceMeasure",
    "desc": " is an abstract interface for [PerformanceEntry] objects with an [entryType] of \"[measure]\". Entries of this type are created by calling [performance.measure()] to add a named [DOMHighResTimeStamp] (the measure) between two marks to the browser's performance timeline.\n  \n    \n    \n      PerformanceEntry\n    \n  \n  \n    \n    \n      PerformanceMeasure\n    \n  \n\n  Note: This feature is available in Web Workers\n",
    "members": []
  },
  "PerformanceNavigation": {
    "name": "PerformanceNavigation",
    "experimental": false,
    "deprecated": true,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/PerformanceNavigation\"><code>PerformanceNavigation</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/PerformanceNavigation",
    "desc": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.\nThe legacy  interface represents information about how the navigation to the current document was done.\n\n  \n    Warning: This interface is deprecated in the Navigation Timing Level 2 specification.\n    Please use the [PerformanceNavigationTiming] interface instead.\n  \n\nAn object of this type can be obtained by calling the [Performance.navigation] read-only attribute.",
    "members": []
  },
  "PerformanceNavigationTiming": {
    "name": "PerformanceNavigationTiming",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/PerformanceNavigationTiming\"><code>PerformanceNavigationTiming</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/PerformanceNavigationTiming",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  interface provides methods and properties to store and retrieve metrics regarding the browser's document navigation events. For example, this interface can be used to determine how much time it takes to load or unload a document.\n  \n    \n    \n      PerformanceEntry\n    \n  \n  \n    \n    \n      PerformanceResourceTiming\n    \n  \n  \n    \n    \n      PerformanceNavigationTiming\n    \n  ",
    "members": []
  },
  "PerformanceObserver": {
    "name": "PerformanceObserver",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/PerformanceObserver\"><code>PerformanceObserver</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/PerformanceObserver",
    "desc": "The  interface is used to observe performance measurement events and be notified of new performance entries as they are recorded in the browser's performance timeline.\n  Note: This feature is available in Web Workers\n",
    "members": []
  },
  "PerformanceObserverEntryList": {
    "name": "PerformanceObserverEntryList",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/PerformanceObserverEntryList\"><code>PerformanceObserverEntryList</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/PerformanceObserverEntryList",
    "desc": "The  interface is a list of performance events that were explicitly observed via the [observe()] method.\nNote: this interface is exposed to [Window] and [Worker].",
    "members": []
  },
  "PerformancePaintTiming": {
    "name": "PerformancePaintTiming",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/PerformancePaintTiming\"><code>PerformancePaintTiming</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/PerformancePaintTiming",
    "desc": "The  interface of the Paint Timing API provides timing information about \"paint\" (also called \"render\") operations during web page construction. \"Paint\" refers to conversion of the render tree to on-screen pixels.\nAn application can register a [PerformanceObserver] for \"[paint]\" [performance entry types] and the observer can retrieve the times that paint events occur. Use this information to help identify areas that take too long to provide a good user experience.\n  \n    \n    \n      PerformanceEntry\n    \n  \n  \n    \n    \n      PerformancePaintTiming\n    \n  ",
    "members": []
  },
  "PerformanceResourceTiming": {
    "name": "PerformanceResourceTiming",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/PerformanceResourceTiming\"><code>PerformanceResourceTiming</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/PerformanceResourceTiming",
    "desc": "The  interface enables retrieval and analysis of detailed network timing data regarding the loading of an application's resources. An application can use the timing metrics to determine, for example, the length of time it takes to fetch a specific resource, such as an [XMLHttpRequest], [<SVG>], image, or script.\nThe interface's properties create a resource loading timeline with [high-resolution timestamps] for network events such as redirect start and end times, fetch start, DNS lookup start and end times, response start and end times, etc.. Additionally, the interface extends [PerformanceEntry] with other properties which provide data about the size of the fetched resource as well as the type of resource that initiated the fetch.\n  \n    \n    \n      PerformanceEntry\n    \n  \n  \n    \n    \n      PerformanceResourceTiming\n    \n  \n\n  Note: This feature is available in Web Workers\n",
    "members": []
  },
  "PerformanceServerTiming": {
    "name": "PerformanceServerTiming",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/PerformanceServerTiming\"><code>PerformanceServerTiming</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/PerformanceServerTiming",
    "desc": "\n  Note: This feature is available in Web Workers\n Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  interface surfaces server metrics that are sent with the response in the [Server-Timing] HTTP header.\nThis interface is restricted to the same origin, but you can use the [Timing-Allow-Origin] header to specify the domains that are allowed to access the server metrics. Note that this interface is only available in secure contexts (HTTPS) in some browsers.",
    "members": []
  },
  "PerformanceTiming": {
    "name": "PerformanceTiming",
    "experimental": false,
    "deprecated": true,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/PerformanceTiming\"><code>PerformanceTiming</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/PerformanceTiming",
    "desc": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.\n\n  Warning: This interface is deprecated in the Navigation Timing Level 2 specification. Please use the [PerformanceNavigationTiming] interface instead.\n\nThe  interface is a legacy interface kept for backwards compatibility and contains properties that offer performance timing information for various events which occur during the loading and use of the current page. You get a  object describing your page using the [window.performance.timing] property.",
    "members": []
  },
  "PeriodicSyncEvent": {
    "name": "PeriodicSyncEvent",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/PeriodicSyncEvent\"><code>PeriodicSyncEvent</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/PeriodicSyncEvent",
    "desc": "The  interface of the [Web Periodic Background Synchronization API] provides a way to run tasks in the service worker with network connectivity.\nAn instance of this event is passed to the [ServiceWorkerGlobalScope.onperiodicsync] handler. This happens periodically, at an interval greater than or equal to that set in the [PeriodicSyncManager.register()] method. Other implementation-specific factors such as the user's engagement with the site decide the actual interval.\n  \n    \n    \n      Event\n    \n  \n  \n    \n    \n      ExtendableEvent\n    \n  \n  \n    \n    \n      PeriodicSyncEvent\n    \n  ",
    "members": []
  },
  "PeriodicSyncManager": {
    "name": "PeriodicSyncManager",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/PeriodicSyncManager\"><code>PeriodicSyncManager</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/PeriodicSyncManager",
    "desc": "The  interface of the [Web Periodic Background Synchronization API] provides a way to register tasks to be run in a service worker at periodic intervals with network connectivity. These tasks are referred to as periodic background sync requests. Access  through the [ServiceWorkerRegistration.periodicSync].",
    "members": []
  },
  "PeriodicWave": {
    "name": "PeriodicWave",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/PeriodicWave\"><code>PeriodicWave</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/PeriodicWave",
    "desc": "The  interface defines a periodic waveform that can be used to shape the output of an [OscillatorNode].\n has no inputs or outputs; it is used to define custom oscillators when calling [OscillatorNode.setPeriodicWave()]. The  itself is created/returned by [BaseAudioContext.createPeriodicWave].",
    "members": []
  },
  "Permissions": {
    "name": "Permissions",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/Permissions\"><code>Permissions</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/Permissions",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe Permissions interface of the Permissions API provides the core Permission API functionality, such as methods for querying and revoking permissions",
    "members": []
  },
  "PermissionStatus": {
    "name": "PermissionStatus",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/PermissionStatus\"><code>PermissionStatus</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/PermissionStatus",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  interface of the Permissions API provides the state of an object and an event handler for monitoring changes to said state.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      PermissionStatus\n    \n  ",
    "members": []
  },
  "PictureInPictureEvent": {
    "name": "PictureInPictureEvent",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/PictureInPictureEvent\"><code>PictureInPictureEvent</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/PictureInPictureEvent",
    "desc": "The  interface represents picture-in-picture-related events, including [enterpictureinpicture], [leavepictureinpicture] and [resize]\n  \n    \n    \n      Event\n    \n  \n  \n    \n    \n      PictureInPictureEvent\n    \n  ",
    "members": []
  },
  "PictureInPictureWindow": {
    "name": "PictureInPictureWindow",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/PictureInPictureWindow\"><code>PictureInPictureWindow</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/PictureInPictureWindow",
    "desc": "The  interface represents an object able to programmatically obtain the [width] and [height] and [resize event] of the floating video window.\nAn object with this interface is obtained using the [HTMLVideoElement.requestPictureInPicture()] promise return value.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      PictureInPictureWindow\n    \n  ",
    "members": []
  },
  "Plugin": {
    "name": "Plugin",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/Plugin\"><code>Plugin</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/Plugin",
    "desc": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.\nThe  interface provides information about a browser plugin.\n\n  Note: Own properties of  objects are no longer enumerable in the latest browser versions.\n",
    "members": []
  },
  "PluginArray": {
    "name": "PluginArray",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/PluginArray\"><code>PluginArray</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/PluginArray",
    "desc": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.\nThe  interface is used to store a list of [Plugin] objects describing the available plugins; it's returned by the [navigator.plugins] property. The  is not a JavaScript array, but has the [length] property and supports accessing individual items using bracket notation ([plugins[2]]), as well as via [item(index)] and [namedItem(\"name\")] methods.\n\n  Note: Own properties of  objects are no longer enumerable in the latest browser versions.\n",
    "members": []
  },
  "Point": {
    "name": "Point",
    "experimental": false,
    "deprecated": false,
    "standard": false,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/WebKitPoint\"><code>Point</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/WebKitPoint",
    "desc": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.Non-standard: This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.\n is an interface which represents a point in 2-dimensional space. It is non-standard, not broadly compatible, and should not be used.\n\n  Note: Although it is not directly related to this defunct interface, you are probably looking for [DOMPoint].\n",
    "members": []
  },
  "PointerEvent": {
    "name": "PointerEvent",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/PointerEvent\"><code>PointerEvent</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/PointerEvent",
    "desc": "The  interface represents the state of a DOM event produced by a pointer such as the geometry of the contact point, the device type that generated the event, the amount of pressure that was applied on the contact surface, etc.\nA pointer is a hardware agnostic representation of input devices (such as a mouse, pen or contact point on a touch-enable surface). The pointer can target a specific coordinate (or set of coordinates) on the contact surface such as a screen.\nA pointer's hit test is the process a browser uses to determine the target element for a pointer event. Typically, this is determined by considering the pointer's location and also the visual layout of elements in a document on screen media.\n  \n    \n    \n      Event\n    \n  \n  \n    \n    \n      UIEvent\n    \n  \n  \n    \n    \n      MouseEvent\n    \n  \n  \n    \n    \n      PointerEvent\n    \n  ",
    "members": []
  },
  "PopStateEvent": {
    "name": "PopStateEvent",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/PopStateEvent\"><code>PopStateEvent</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/PopStateEvent",
    "desc": "\n   is an event handler for the\n  [popstate] event on the window.\n\n\n  A [popstate] event is dispatched to the window every time the active history\n  entry changes between two history entries for the same document. If the history entry\n  being activated was created by a call to [history.pushState()] or was\n  affected by a call to [history.replaceState()], the [popstate]\n  event's [state] property contains a copy of the history entry's state object.\n\n\n  \n    Note: Just calling [history.pushState()] or\n    [history.replaceState()] won't trigger a [popstate] event. The\n    [popstate] event is only triggered by doing a browser action such as a\n    clicking on the back button (or calling [history.back()] in JavaScript).\n    And the event is only triggered when the user navigates between two history entries\n    for the same document.\n  \n\n\n  \n    Note: Browsers used to handle the [popstate] event\n    differently on page load, but now they behave the same. Firefox never emitted a\n    popstate event on page load. Chrome did until version 34, while Safari did until\n    version 10.0.\n  \n\n  \n    \n    \n      Event\n    \n  \n  \n    \n    \n      PopStateEvent\n    \n  ",
    "members": []
  },
  "PositionSensorVRDevice": {
    "name": "PositionSensorVRDevice",
    "experimental": true,
    "deprecated": true,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/PositionSensorVRDevice\"><code>PositionSensorVRDevice</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/PositionSensorVRDevice",
    "desc": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  interface of the WebVR API represents VR hardware's position sensor. You can access information such as the current position and orientation of the sensor in relation to the head mounted display through the [PositionSensorVRDevice.getState()] method.",
    "members": []
  },
  "Presentation": {
    "name": "Presentation",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/Presentation\"><code>Presentation</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/Presentation",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  can be defined as two possible user agents in the context: Controlling user agent and Receiving user agent.\nIn controlling browsing context, the  interface provides a mechanism to override the browser default behavior of launching presentation to external screen. In receiving browsing context,  interface provides the access to the available presentation connections.",
    "members": []
  },
  "PresentationAvailability": {
    "name": "PresentationAvailability",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/PresentationAvailability\"><code>PresentationAvailability</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/PresentationAvailability",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nA  object is associated with available presentation displays and represents the presentation display availability for a presentation request. If the controlling user agent can monitor the list of available presentation displays in the background (without a pending request to [start()]), the  object MUST be implemented in a controlling browsing context.\nThe [value] attribute MUST return the last value it was set to. The value is updated by the monitor the list of available presentation displays algorithm.\nThe [onchange] attribute is an event handler whose corresponding event handler event type is [change].\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      PresentationAvailability\n    \n  ",
    "members": []
  },
  "PresentationConnection": {
    "name": "PresentationConnection",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/PresentationConnection\"><code>PresentationConnection</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/PresentationConnection",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  interface of the Presentation API provides methods and properties for managing a single presentation. Each presentation connection is represented by a  object. Both the controlling user agent and receiving user agent MUST implement .\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      PresentationConnection\n    \n  ",
    "members": []
  },
  "PresentationConnectionAvailableEvent": {
    "name": "PresentationConnectionAvailableEvent",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/PresentationConnectionAvailableEvent\"><code>PresentationConnectionAvailableEvent</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/PresentationConnectionAvailableEvent",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  interface of the Presentation API is fired on a [PresentationRequest] when a connection associated with the object is created.\nA controlling user agent fires a trusted event named [connectionavailable] on a [PresentationRequest] when a connection associated with the object is created. It is fired at the [PresentationRequest] instance, using the  interface, with the [connection] attribute set to the [PresentationConnection] object that was created. The event is fired for each connection that is created for the controller, either by the controller calling [start()] or [reconnect()], or by the controlling user agent creating a connection on the controller's behalf via [defaultRequest].\n  \n    \n    \n      Event\n    \n  \n  \n    \n    \n      PresentationConnectionAvailableEvent\n    \n  ",
    "members": []
  },
  "PresentationConnectionCloseEvent": {
    "name": "PresentationConnectionCloseEvent",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/PresentationConnectionCloseEvent\"><code>PresentationConnectionCloseEvent</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/PresentationConnectionCloseEvent",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  interface of the Presentation API is fired on a [PresentationConnection] when it is closed.\n  \n    \n    \n      Event\n    \n  \n  \n    \n    \n      PresentationConnectionCloseEvent\n    \n  ",
    "members": []
  },
  "PresentationConnectionList": {
    "name": "PresentationConnectionList",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/PresentationConnectionList\"><code>PresentationConnectionList</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/PresentationConnectionList",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\n is the collection of incoming presentation connections.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      PresentationConnectionList\n    \n  ",
    "members": []
  },
  "PresentationReceiver": {
    "name": "PresentationReceiver",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/PresentationReceiver\"><code>PresentationReceiver</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/PresentationReceiver",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  interface of the Presentation API provides a means for a receiving browsing context to access controlling browsing contexts and communicate with them.",
    "members": []
  },
  "PresentationRequest": {
    "name": "PresentationRequest",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/PresentationRequest\"><code>PresentationRequest</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/PresentationRequest",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nA  object is used to initiate or reconnect to a presentation made by a controlling browsing context. The  object MUST be implemented in a controlling browsing context provided by a controlling user agent.\nWhen a  is constructed, the given [urls] MUST be used as the list of presentation request URLs which are each a possible presentation URL for the  instance.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      PresentationRequest\n    \n  ",
    "members": []
  },
  "ProcessingInstruction": {
    "name": "ProcessingInstruction",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/ProcessingInstruction\"><code>ProcessingInstruction</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/ProcessingInstruction",
    "desc": "The  interface represents a processing instruction; that is, a [Node] which embeds an instruction targeting a specific application but that can be ignored by any other applications which don't recognize the instruction.\n\n  Warning:  nodes are only supported in XML documents, not in HTML documents. In these, a process instruction will be considered as a comment and be represented as a [Comment] object in the tree.\n\nA processing instruction may be different than the XML declaration.\n\n  Note: User-defined processing instructions cannot begin with \"[xml]\", as [xml]-prefixed processing-instruction target names are reserved by the XML specification for particular, standard uses (see, for example, [<?xml-stylesheet ?>].\n\nFor example:\n[<?xml version=\"1.0\"?>\n]\nis a processing instruction whose [target]is [xml].\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      CharacterData\n    \n  \n  \n    \n    \n      ProcessingInstruction\n    \n  ",
    "members": []
  },
  "ProgressEvent": {
    "name": "ProgressEvent",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/ProgressEvent\"><code>ProgressEvent</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/ProgressEvent",
    "desc": "The  interface represents events measuring progress of an underlying process, like an HTTP request (for an [XMLHttpRequest], or the loading of the underlying resource of an [<img>], [<audio>], [<video>], [<style>] or [<link>]).\n  \n    \n    \n      Event\n    \n  \n  \n    \n    \n      ProgressEvent\n    \n  ",
    "members": []
  },
  "PromiseRejectionEvent": {
    "name": "PromiseRejectionEvent",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/PromiseRejectionEvent\"><code>PromiseRejectionEvent</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/PromiseRejectionEvent",
    "desc": "The  interface represents events which are sent to the global script context when JavaScript [Promise]s are rejected. These events are particularly useful for telemetry and debugging purposes.\nFor details on promise rejection events, see Promise rejection events in Using Promises.\n  \n    \n    \n      Event\n    \n  \n  \n    \n    \n      PromiseRejectionEvent\n    \n  ",
    "members": []
  },
  "PublicKeyCredential": {
    "name": "PublicKeyCredential",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/PublicKeyCredential\"><code>PublicKeyCredential</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/PublicKeyCredential",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  interface provides information about a public key / private key pair, which is a credential for logging in to a service using an un-phishable and data-breach resistant asymmetric key pair instead of a password. It inherits from [Credential], and was created by the Web Authentication API extension to the Credential Management API. Other interfaces that inherit from [Credential] are [PasswordCredential] and [FederatedCredential].\n  \n    \n    \n      Credential\n    \n  \n  \n    \n    \n      PublicKeyCredential\n    \n  \n\n  Note: This API is restricted to top-level contexts. Use from within an [<iframe>] element will not have any effect.\n",
    "members": []
  },
  "PublicKeyCredentialRequestOptions": {
    "name": "PublicKeyCredentialRequestOptions",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/PublicKeyCredentialRequestOptions\"><code>PublicKeyCredentialRequestOptions</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/PublicKeyCredentialRequestOptions",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  dictionary of the Web Authentication API holds the options passed to [navigator.credentials.get()] in order to fetch a given [PublicKeyCredential].",
    "members": []
  },
  "PushEvent": {
    "name": "PushEvent",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/PushEvent\"><code>PushEvent</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/PushEvent",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  interface of the Push API represents a push message that has been received. This event is sent to the global scope of a [ServiceWorker]. It contains the information sent from an application server to a [PushSubscription].\n  \n    \n    \n      Event\n    \n  \n  \n    \n    \n      ExtendableEvent\n    \n  \n  \n    \n    \n      PushEvent\n    \n  ",
    "members": []
  },
  "PushManager": {
    "name": "PushManager",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/PushManager\"><code>PushManager</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/PushManager",
    "desc": "The  interface of the Push API provides a way to receive notifications from third-party servers as well as request URLs for push notifications.\nThis interface is accessed via the [ServiceWorkerRegistration.pushManager] property.",
    "members": []
  },
  "PushMessageData": {
    "name": "PushMessageData",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/PushMessageData\"><code>PushMessageData</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/PushMessageData",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  interface of the Push API provides methods which let you retrieve the push data sent by a server in various formats.\nUnlike the similar methods in the Fetch API, which only allow the method to be invoked once, these methods can be called multiple times.\nMessages received through the Push API are sent encrypted by push services and then automatically decrypted by browsers before they are made accessible through the methods of the  interface.",
    "members": []
  },
  "PushSubscription": {
    "name": "PushSubscription",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/PushSubscription\"><code>PushSubscription</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/PushSubscription",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  interface of the Push API provides a subcription's URL endpoint and allows unsubscription from a push service.\nAn instance of this interface can be serialized.",
    "members": []
  },
  "PushSubscriptionOptions": {
    "name": "PushSubscriptionOptions",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/PushSubscriptionOptions\"><code>PushSubscriptionOptions</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/PushSubscriptionOptions",
    "desc": "The  interface of the Push API represents the options associated with a push subscription.\nThe read-only  object is returned by calling [PushSubscription.options] on a [PushSubscription]. This interface has no constructor of its own.",
    "members": []
  },
  "queueMicrotask": {
    "name": "queueMicrotask",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/queueMicrotask\"><code>queueMicrotask()</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/queueMicrotask",
    "desc": "\n  The [queueMicrotask()] method,\n  which is exposed on the [Window] or [Worker] interface,\n  queues a microtask to be executed at a safe time prior to control returning to the\n  browser's event loop.\n\n\n  The microtask is a short function which will run after\n  the current task has completed its work and when there is no other code waiting to be\n  run before control of the execution context is returned to the browser's event loop.\n\n\n  This lets your code run without interfering with any other, potentially higher\n  priority, code that is pending, but before the browser regains control over the\n  execution context, potentially depending on work you need to complete. You can learn\n  more about how to use microtasks and why you might choose to do so in our microtask guide.\n\n\n  The importance of microtasks comes in its ability to perform tasks asynchronously but\n  in a specific order. See Using microtasks in JavaScript\nwith queueMicrotask() for more details.\n\n\n  Microtasks are especially useful for libraries and frameworks that need to perform\n  final cleanup or other just-before-rendering tasks.\n",
    "members": []
  },
  "RadioNodeList": {
    "name": "RadioNodeList",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/RadioNodeList\"><code>RadioNodeList</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/RadioNodeList",
    "desc": "The  interface represents a collection of radio elements in a [<form>] or a [<fieldset>] element.\n  \n    \n    \n      NodeList\n    \n  \n  \n    \n    \n      RadioNodeList\n    \n  ",
    "members": []
  },
  "Range": {
    "name": "Range",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/Range\"><code>Range</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/Range",
    "desc": "The  interface represents a fragment of a document that can contain nodes and parts of text nodes.\nA range can be created by using the [Document.createRange()] method. Range objects can also be retrieved by using the [getRangeAt()] method of the [Selection] object or the [caretRangeFromPoint()] method of the [Document] object.\nThere also is the [Range()] constructor available.\n  \n    \n    \n      AbstractRange\n    \n  \n  \n    \n    \n      Range\n    \n  ",
    "members": []
  },
  "ReadableByteStreamController": {
    "name": "ReadableByteStreamController",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/ReadableByteStreamController\"><code>ReadableByteStreamController</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/ReadableByteStreamController",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  interface of the Streams API represents a controller allowing control of a [ReadableStream]'s state and internal queue. Byte stream controllers are for byte streams.",
    "members": []
  },
  "ReadableStream": {
    "name": "ReadableStream",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/ReadableStream\"><code>ReadableStream</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/ReadableStream",
    "desc": "The  interface of the Streams API represents a readable stream of byte data. The Fetch API offers a concrete instance of a  through the [body] property of a [Response] object.",
    "members": []
  },
  "ReadableStreamBYOBReader": {
    "name": "ReadableStreamBYOBReader",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/ReadableStreamBYOBReader\"><code>ReadableStreamBYOBReader</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/ReadableStreamBYOBReader",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  interface of the Streams API represents a BYOB (\"bring your own buffer\") reader that can be used to read stream data supplied by the developer (e.g. a custom [ReadableStream()] constructor).",
    "members": []
  },
  "ReadableStreamBYOBRequest": {
    "name": "ReadableStreamBYOBRequest",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/ReadableStreamBYOBRequest\"><code>ReadableStreamBYOBRequest</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/ReadableStreamBYOBRequest",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  interface of the Streams API represents a pull request into a [ReadableByteStreamController] view.\nA view, as mentioned below, refers to a typed array representing the destination region to which the associated [ReadableByteStreamController] controller can write generated data.",
    "members": []
  },
  "ReadableStreamDefaultController": {
    "name": "ReadableStreamDefaultController",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/ReadableStreamDefaultController\"><code>ReadableStreamDefaultController</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/ReadableStreamDefaultController",
    "desc": "The  interface of the Streams API represents a controller allowing control of a [ReadableStream]'s state and internal queue. Default controllers are for streams that are not byte streams.",
    "members": []
  },
  "ReadableStreamDefaultReader": {
    "name": "ReadableStreamDefaultReader",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/ReadableStreamDefaultReader\"><code>ReadableStreamDefaultReader</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/ReadableStreamDefaultReader",
    "desc": "The  interface of the Streams API represents a default reader that can be used to read stream data supplied from a network (e.g. a fetch request).",
    "members": []
  },
  "RelativeOrientationSensor": {
    "name": "RelativeOrientationSensor",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/RelativeOrientationSensor\"><code>RelativeOrientationSensor</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/RelativeOrientationSensor",
    "desc": "The  interface of the Sensor APIs describes the device's physical orientation without regard to the Earth's reference coordinate system.\nTo use this sensor, the user must grant permission to the ['accelerometer'], and ['gyroscope'] device sensors through the Permissions API.\nIf a feature policy blocks use of a feature it is because your code is inconsistent with the policies set on your server. This is not something that would ever be shown to a user. The [Feature-Policy] HTTP header article contains implementation instructions.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Sensor\n    \n  \n  \n    \n    \n      OrientationSensor\n    \n  \n  \n    \n    \n      RelativeOrientationSensor\n    \n  ",
    "members": []
  },
  "RemotePlayback": {
    "name": "RemotePlayback",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/RemotePlayback\"><code>RemotePlayback</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/RemotePlayback",
    "desc": "The  interface of the Remote Playback API allows the page to detect availability of remote playback devices, then connect to and control playing on these devices.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      RemotePlayback\n    \n  ",
    "members": []
  },
  "Report": {
    "name": "Report",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/Report\"><code>Report</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/Report",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  interface of the Reporting API represents a single report.\nReports can be accessed in a number of ways:\n\n  Via the [ReportingObserver.takeRecords()] method — this returns all reports in an observer's report queue, and then empties the queue.\n  Via the [reports] parameter of the callback function passed into the [ReportingObserver()] constructor upon creation of a new observer instance. This contains the list of reports currently contained in the observer's report queue.\n  By sending requests to the endpoints defined via the [Report-To] HTTP header.\n",
    "members": []
  },
  "ReportBody": {
    "name": "ReportBody",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/ReportBody\"><code>ReportBody</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/ReportBody",
    "desc": "The  interface of the Reporting API represents the body of a report. Individual report types inherit from this interface, adding specific attributes relevant to the particular report.",
    "members": []
  },
  "reportError": {
    "name": "reportError",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/reportError\"><code>reportError()</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/reportError",
    "desc": "\n  Note: This feature is available in Web Workers\n\nThe [reportError()] global method may be used to report errors to the console or global event handlers, emulating an uncaught JavaScript exception.\n\n  This feature is primarily intended for custom event-dispatching or callback-manipulating libraries.\n  Libraries can use this feature to catch errors in callback code and re-throw them to the top level handler.\n  This ensures that an exception in one callback will not prevent others from being handled, while at the same time ensuring that stack trace information is still readily available for debugging at the top level.\n",
    "members": []
  },
  "ReportingObserver": {
    "name": "ReportingObserver",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/ReportingObserver\"><code>ReportingObserver</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/ReportingObserver",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  interface of the Reporting API allows you to collect and access reports.",
    "members": []
  },
  "ReportingObserverOptions": {
    "name": "ReportingObserverOptions",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/ReportingObserverOptions\"><code>ReportingObserverOptions</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/ReportingObserverOptions",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  dictionary of the Reporting API allows options to be set in the constructor when creating a [ReportingObserver].",
    "members": []
  },
  "Request": {
    "name": "Request",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/Request\"><code>Request</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/Request",
    "desc": "The  interface of the Fetch API represents a resource request.\nYou can create a new  object using the [Request()] constructor, but you are more likely to encounter a  object being returned as the result of another API operation, such as a service worker [FetchEvent.request].",
    "members": []
  },
  "ResizeObserver": {
    "name": "ResizeObserver",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/ResizeObserver\"><code>ResizeObserver</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/ResizeObserver",
    "desc": "The  interface reports changes to the dimensions of an [Element]'s content or border box, or the bounding box of an [SVGElement].\n\n  Note: The content box is the box in which content can be placed, meaning the border box minus the padding and border width. The border box encompasses the content, padding, and border. See The box model for further explanation.\n\n avoids infinite callback loops and cyclic dependencies that are often created when resizing via a callback function. It does this by only processing elements deeper in the DOM in subsequent frames. Implementations should, if they follow the specification, invoke resize events before paint and after layout.",
    "members": []
  },
  "ResizeObserverEntry": {
    "name": "ResizeObserverEntry",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/ResizeObserverEntry\"><code>ResizeObserverEntry</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/ResizeObserverEntry",
    "desc": "The  interface represents the object passed to the [ResizeObserver()] constructor's callback function, which allows you to access the new dimensions of the [Element] or [SVGElement] being observed.",
    "members": []
  },
  "ResizeObserverSize": {
    "name": "ResizeObserverSize",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/ResizeObserverSize\"><code>ResizeObserverSize</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/ResizeObserverSize",
    "desc": "The  interface of the [Resize Observer API] is used by the [ResizeObserverEntry] interface to access the box sizing properties of the element being observed.\n\n  Note: In multi-column layout, which is a fragmented context, the sizing returned by  will be the size of the first column.\n",
    "members": []
  },
  "Response": {
    "name": "Response",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/Response\"><code>Response</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/Response",
    "desc": "The  interface of the Fetch API represents the response to a request.\nYou can create a new  object using the [Response.Response()] constructor, but you are more likely to encounter a  object being returned as the result of another API operation—for example, a service worker [FetchEvent.respondWith], or a simple [fetch()].",
    "members": []
  },
  "RsaHashedImportParams": {
    "name": "RsaHashedImportParams",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/RsaHashedImportParams\"><code>RsaHashedImportParams</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/RsaHashedImportParams",
    "desc": "The  dictionary of the Web Crypto API represents the object that should be passed as the [algorithm] parameter into [SubtleCrypto.importKey()] or [SubtleCrypto.unwrapKey()], when importing any RSA-based key pair: that is, when the algorithm is identified as any of RSASSA-PKCS1-v1_5, RSA-PSS, or RSA-OAEP.",
    "members": []
  },
  "RsaHashedKeyGenParams": {
    "name": "RsaHashedKeyGenParams",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/RsaHashedKeyGenParams\"><code>RsaHashedKeyGenParams</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/RsaHashedKeyGenParams",
    "desc": "The  dictionary of the Web Crypto API represents the object that should be passed as the [algorithm] parameter into [SubtleCrypto.generateKey()], when generating any RSA-based key pair: that is, when the algorithm is identified as any of RSASSA-PKCS1-v1_5, RSA-PSS, or RSA-OAEP.",
    "members": []
  },
  "RsaOaepParams": {
    "name": "RsaOaepParams",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/RsaOaepParams\"><code>RsaOaepParams</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/RsaOaepParams",
    "desc": "The  dictionary of the Web Crypto API represents the object that should be passed as the [algorithm] parameter into [SubtleCrypto.encrypt()], [SubtleCrypto.decrypt()], [SubtleCrypto.wrapKey()], or [SubtleCrypto.unwrapKey()], when using the RSA_OAEP algorithm.",
    "members": []
  },
  "RsaPssParams": {
    "name": "RsaPssParams",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/RsaPssParams\"><code>RsaPssParams</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/RsaPssParams",
    "desc": "The  dictionary of the Web Crypto API represents the object that should be passed as the [algorithm] parameter into [SubtleCrypto.sign()] or [SubtleCrypto.verify()], when using the RSA-PSS algorithm.",
    "members": []
  },
  "RTCCertificate": {
    "name": "RTCCertificate",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/RTCCertificate\"><code>RTCCertificate</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/RTCCertificate",
    "desc": "The interface of the WebRTC API provides an object represents a certificate that an [RTCPeerConnection] uses to authenticate.",
    "members": []
  },
  "RTCDataChannel": {
    "name": "RTCDataChannel",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/RTCDataChannel\"><code>RTCDataChannel</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/RTCDataChannel",
    "desc": "The  interface represents a network channel which can be used for bidirectional peer-to-peer transfers of arbitrary data. Every data channel is associated with an [RTCPeerConnection], and each peer connection can have up to a theoretical maximum of 65,534 data channels (the actual limit may vary from browser to browser).\nTo create a data channel and ask a remote peer to join you, call the [RTCPeerConnection]'s [createDataChannel()] method. The peer being invited to exchange data receives a [datachannel] event (which has type [RTCDataChannelEvent]) to let it know the data channel has been added to the connection.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      RTCDataChannel\n    \n  ",
    "members": []
  },
  "RTCDataChannelEvent": {
    "name": "RTCDataChannelEvent",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/RTCDataChannelEvent\"><code>RTCDataChannelEvent</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/RTCDataChannelEvent",
    "desc": "\n  The  interface\n  represents an event related to a specific [RTCDataChannel].\n\n  \n    \n    \n      Event\n    \n  \n  \n    \n    \n      RTCDataChannelEvent\n    \n  ",
    "members": []
  },
  "RTCDtlsTransport": {
    "name": "RTCDtlsTransport",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/RTCDtlsTransport\"><code>RTCDtlsTransport</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/RTCDtlsTransport",
    "desc": "The  interface provides access to information about the Datagram Transport Layer Security (DTLS) transport over which a [RTCPeerConnection]'s RTP and RTCP packets are sent and received by its [RTCRtpSender] and [RTCRtpReceiver] objects.\nA  object is also used to provide information about SCTP packets transmitted and received by an connection's data channels.\nFeatures of the DTLS transport include the addition of security to the underlying transport; the  interface can be used to obtain information about the underlying transport and the security added to it by the DTLS layer.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      RTCDtlsTransport\n    \n  ",
    "members": []
  },
  "RTCDTMFSender": {
    "name": "RTCDTMFSender",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/RTCDTMFSender\"><code>RTCDTMFSender</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/RTCDTMFSender",
    "desc": "The  interface provides a mechanism for transmitting DTMF codes on a WebRTC [RTCPeerConnection]. You gain access to the connection's  through the [RTCRtpSender.dtmf] property on the audio track you wish to send DTMF with.\nThe primary purpose for WebRTC's DTMF support is to allow WebRTC-based communication clients to be connected to a public-switched telephone network (PSTN) or other legacy telephone service, including extant voice over IP (VoIP) services. For that reason, DTMF can't be used between two WebRTC-based devices, because there is no mechanism provided by WebRTC for receiving DTMF codes.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      RTCDTMFSender\n    \n  ",
    "members": []
  },
  "RTCDTMFToneChangeEvent": {
    "name": "RTCDTMFToneChangeEvent",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/RTCDTMFToneChangeEvent\"><code>RTCDTMFToneChangeEvent</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/RTCDTMFToneChangeEvent",
    "desc": "The  interface represents events sent to indicate that DTMF tones have started or finished playing. This interface is used by the [tonechange] event.\n  \n    \n    \n      Event\n    \n  \n  \n    \n    \n      RTCDTMFToneChangeEvent\n    \n  ",
    "members": []
  },
  "RTCError": {
    "name": "RTCError",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/RTCError\"><code>RTCError</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/RTCError",
    "desc": "The  interface describes an error which has occurred while handling WebRTC operations. It's based upon the standard [DOMException] interface that describes general DOM errors.\n  \n    \n    \n      DOMException\n    \n  \n  \n    \n    \n      RTCError\n    \n  ",
    "members": []
  },
  "RTCErrorEvent": {
    "name": "RTCErrorEvent",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/RTCErrorEvent\"><code>RTCErrorEvent</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/RTCErrorEvent",
    "desc": "The WebRTC API's  interface represents an error sent to a WebRTC object. It's based on the standard [Event] interface, but adds RTC-specific information describing the error, as shown below.\n  \n    \n    \n      Event\n    \n  \n  \n    \n    \n      RTCErrorEvent\n    \n  ",
    "members": []
  },
  "RTCIceCandidate": {
    "name": "RTCIceCandidate",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/RTCIceCandidate\"><code>RTCIceCandidate</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/RTCIceCandidate",
    "desc": "The  interface—part of the WebRTC API—represents a candidate Interactive Connectivity Establishment (ICE) configuration which may be used to establish an [RTCPeerConnection].\nAn ICE candidate describes the protocols and routing needed for WebRTC to be able to communicate with a remote device. When starting a WebRTC peer connection, typically a number of candidates are proposed by each end of the connection, until they mutually agree upon one which describes the connection they decide will be best. WebRTC then uses that candidate's details to initiate the connection.\nFor details on how the ICE process works, see Lifetime of a WebRTC session. The article WebRTC connectivity provides additional useful details.",
    "members": []
  },
  "RTCIceCandidatePair": {
    "name": "RTCIceCandidatePair",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/RTCIceCandidatePair\"><code>RTCIceCandidatePair</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/RTCIceCandidatePair",
    "desc": "The  dictionary describes a pair of ICE candidates which together comprise a description of a viable connection between two WebRTC endpoints. It is used as the return value from [RTCIceTransport.getSelectedCandidatePair()] to identify the currently-selected candidate pair identified by the ICE agent.",
    "members": []
  },
  "RTCIceCandidatePairStats": {
    "name": "RTCIceCandidatePairStats",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/RTCIceCandidatePairStats\"><code>RTCIceCandidatePairStats</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/RTCIceCandidatePairStats",
    "desc": "The WebRTC  dictionary reports statistics which provide insight into the quality and performance of an [RTCPeerConnection] while connected and configured as described by the specified pair of ICE candidates.\nIf a [RTCStats]-based object's [type] is [candidate-pair], it's an  object.",
    "members": []
  },
  "RTCIceCandidateStats": {
    "name": "RTCIceCandidateStats",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/RTCIceCandidateStats\"><code>RTCIceCandidateStats</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/RTCIceCandidateStats",
    "desc": "The WebRTC API's  dictionary provides statistics related to an [RTCIceCandidate].",
    "members": []
  },
  "RTCIceCredentialType": {
    "name": "RTCIceCredentialType",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/RTCIceCredentialType\"><code>RTCIceCredentialType</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/RTCIceCredentialType",
    "desc": "The WebRTC API's  enumerated string type defines the authentication method used to gain access to an ICE server identified by an [RTCIceServer] object.",
    "members": []
  },
  "RTCIceParameters": {
    "name": "RTCIceParameters",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/RTCIceParameters\"><code>RTCIceParameters</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/RTCIceParameters",
    "desc": "The  dictionary specifies the username fragment and password assigned to an ICE session.\nDuring ICE negotiation, each peer's username fragment and password are recorded in an  object, which can be obtained from the [RTCIceTransport] by calling its [getLocalParameters()] or [getRemoteParameters()] method, depending on which end interests you.",
    "members": []
  },
  "RTCIceRole": {
    "name": "RTCIceRole",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/RTCIceRole\"><code>RTCIceRole</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/RTCIceRole",
    "desc": "The  enumerated type lists the string values that identify whether a connection's ICE agent is serving as the controlling agent or the controlled agent, as indicated by [RTCIceTransport.role].\nYou can learn more about ICE roles in Choosing a candidate pair in WebRTC connectivity.",
    "members": []
  },
  "RTCIceServer": {
    "name": "RTCIceServer",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/RTCIceServer\"><code>RTCIceServer</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/RTCIceServer",
    "desc": "The  dictionary defines how to connect to a single ICE server (such as a STUN or TURN server). Objects of this type are provided in the configuration of an [RTCPeerConnection], in the [iceServers] array.",
    "members": []
  },
  "RTCIceTransport": {
    "name": "RTCIceTransport",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/RTCIceTransport\"><code>RTCIceTransport</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/RTCIceTransport",
    "desc": "\n  The  interface provides access to information about the ICE transport layer over which the data is being sent and received.\n  This is particularly useful if you need to access state information about the connection.\n\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      RTCIceTransport\n    \n  ",
    "members": []
  },
  "RTCIceTransportState": {
    "name": "RTCIceTransportState",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/RTCIceTransportState\"><code>RTCIceTransportState</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/RTCIceTransportState",
    "desc": "The  enumerated type defines the string values which may be returned by the [state] property on [RTCIceTransport] objects. The transport state indicates which stage of the candidate gathering process is currently underway.",
    "members": []
  },
  "RTCIdentityAssertion": {
    "name": "RTCIdentityAssertion",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/RTCIdentityAssertion\"><code>RTCIdentityAssertion</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/RTCIdentityAssertion",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  interface of the WebRTC API represents the identity of a remote peer of the current connection. If no peer has yet been set and verified, then this interface returns [null]. Once set it can't be changed.",
    "members": []
  },
  "RTCInboundRtpStreamStats": {
    "name": "RTCInboundRtpStreamStats",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/RTCInboundRtpStreamStats\"><code>RTCInboundRtpStreamStats</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/RTCInboundRtpStreamStats",
    "desc": "The WebRTC API's  dictionary, based upon [RTCReceivedRtpStreamStats] and [RTCStats], contains statistics related to the receiving end of an RTP stream on the local end of the [RTCPeerConnection].",
    "members": []
  },
  "RTCNetworkType": {
    "name": "RTCNetworkType",
    "experimental": false,
    "deprecated": true,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/RTCNetworkType\"><code>RTCNetworkType</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/RTCNetworkType",
    "desc": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.\nThe WebRTC  enumerated type defines a set of strings used to identify the type of network used by a connection between two peers.\nThis type is used as the value or the following properties:\n\n  [RTCIceCandidate]'s [networkType]\n  [RTCStunServerConnectionStats]'s [networkType]\n",
    "members": []
  },
  "RTCOutboundRtpStreamStats": {
    "name": "RTCOutboundRtpStreamStats",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/RTCOutboundRtpStreamStats\"><code>RTCOutboundRtpStreamStats</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/RTCOutboundRtpStreamStats",
    "desc": "The  dictionary is the [RTCStats]-based object which provides metrics and statistics related to an outbound RTP stream being sent by an [RTCRtpSender].",
    "members": []
  },
  "RTCPeerConnection": {
    "name": "RTCPeerConnection",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/RTCPeerConnection",
    "desc": "The  interface represents a WebRTC connection between the local computer and a remote peer. It provides methods to connect to a remote peer, maintain and monitor the connection, and close the connection once it's no longer needed.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      RTCPeerConnection\n    \n  ",
    "members": []
  },
  "RTCPeerConnectionIceErrorEvent": {
    "name": "RTCPeerConnectionIceErrorEvent",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/RTCPeerConnectionIceErrorEvent\"><code>RTCPeerConnectionIceErrorEvent</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/RTCPeerConnectionIceErrorEvent",
    "desc": "The  interface—based upon the [Event] interface—provides details pertaining to an ICE error announced by sending an [icecandidateerror] event to the [RTCPeerConnection] object.\n  \n    \n    \n      Event\n    \n  \n  \n    \n    \n      RTCPeerConnectionIceErrorEvent\n    \n  ",
    "members": []
  },
  "RTCPeerConnectionIceEvent": {
    "name": "RTCPeerConnectionIceEvent",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/RTCPeerConnectionIceEvent\"><code>RTCPeerConnectionIceEvent</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/RTCPeerConnectionIceEvent",
    "desc": "The  interface represents events that occur in relation to ICE candidates with the target, usually an [RTCPeerConnection].\nOnly one event is of this type: [icecandidate].\n  \n    \n    \n      Event\n    \n  \n  \n    \n    \n      RTCPeerConnectionIceEvent\n    \n  ",
    "members": []
  },
  "RTCRemoteOutboundRtpStreamStats": {
    "name": "RTCRemoteOutboundRtpStreamStats",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/RTCRemoteOutboundRtpStreamStats\"><code>RTCRemoteOutboundRtpStreamStats</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/RTCRemoteOutboundRtpStreamStats",
    "desc": "The WebRTC statistics model's  dictionary extends the underlying [RTCSentRtpStreamStats] dictionary with properties measuring metrics specific to outgoing RTP streams.",
    "members": []
  },
  "RTCRtcpParameters": {
    "name": "RTCRtcpParameters",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/RTCRtcpParameters\"><code>RTCRtcpParameters</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/RTCRtcpParameters",
    "desc": "The  dictionary provides parameters of an RTCP connection. It's used as the value of the [rtcp] property of the parameters of an [RTCRtpSender] or [RTCRtpReceiver].",
    "members": []
  },
  "RTCRtpCapabilities": {
    "name": "RTCRtpCapabilities",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/RTCRtpCapabilities\"><code>RTCRtpCapabilities</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/RTCRtpCapabilities",
    "desc": "The  dictionary is a data type used to describe the capabilities of an [RTCRtpSender] or [RTCRtpReceiver] in response to a call to the [RTCRtpSender.getCapabilities()] or [RTCRtpReceiver.getCapabilities()] static functions, both of which return an array of  objects.\nAn  object contains an array of objects conforming to [RTCRtpCodecCapability] (each describing the capabilities of one codec) and an array of the supported RTP header extensions for that codec.",
    "members": []
  },
  "RTCRtpCodecCapability": {
    "name": "RTCRtpCodecCapability",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/RTCRtpCodecCapability\"><code>RTCRtpCodecCapability</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/RTCRtpCodecCapability",
    "desc": "The WebRTC API's  dictionary provides information describing the capabilities of a single media codec.",
    "members": []
  },
  "RTCRtpCodecParameters": {
    "name": "RTCRtpCodecParameters",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/RTCRtpCodecParameters\"><code>RTCRtpCodecParameters</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/RTCRtpCodecParameters",
    "desc": "The  dictionary, part of the WebRTC API, is used to describe the configuration parameters for a single media codec.\nIn addition to being the type of the [RTCRtpParameters.codecs] property, it's used when calling [RTCRtpTransceiver.setCodecPreferences()] to configure a transceiver's codecs before beginning the offer/answer process to establish a WebRTC peer connection.\nMost of the fields in this property take values which are defined and maintained by the Internet Assigned Numbers Authority (IANA). References to relevant IANA documents are provided in the see also section at the end of this article.",
    "members": []
  },
  "RTCRtpContributingSource": {
    "name": "RTCRtpContributingSource",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/RTCRtpContributingSource\"><code>RTCRtpContributingSource</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/RTCRtpContributingSource",
    "desc": "The  dictionary of the WebRTC API is used by [getContributingSources()] to provide information about a given contributing source (CSRC), including the most recent time a packet that the source contributed was played out.\nThe information provided is based on the last ten seconds of media received.",
    "members": []
  },
  "RTCRtpEncodingParameters": {
    "name": "RTCRtpEncodingParameters",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/RTCRtpEncodingParameters\"><code>RTCRtpEncodingParameters</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/RTCRtpEncodingParameters",
    "desc": "An instance of the WebRTC API's  dictionary describes a single configuration of a codec for an [RTCRtpSender].\nThis dictionary is used in the [RTCRtpSendParameters] describing the configuration of an RTP sender's [encodings]; [RTCRtpDecodingParameters] is used to describe the configuration of an RTP receiver's [encodings].",
    "members": []
  },
  "RTCRtpParameters": {
    "name": "RTCRtpParameters",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/RTCRtpParameters\"><code>RTCRtpParameters</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/RTCRtpParameters",
    "desc": "The  dictionary is the basic object describing the parameters of an RTP transport. It is extended separately for senders and receivers in the form of the [RTCRtpSendParameters] and [RTCRtpReceiveParameters] dictionaries.\nTo obtain the parameters of a sender or receiver, call its [getParameters()] method:\n\n  [getParameters()]\n  [getParameters()]\n",
    "members": []
  },
  "RTCRtpReceiveParameters": {
    "name": "RTCRtpReceiveParameters",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/RTCRtpReceiveParameters\"><code>RTCRtpReceiveParameters</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/RTCRtpReceiveParameters",
    "desc": "The  dictionary, based upon the [RTCRtpParameters] dictionary, is returned by the [RTCRtpReceiver] method [getParameters()]. It describes the parameters being used by the receiver's RTP connection to the remote peer.",
    "members": []
  },
  "RTCRtpReceiver": {
    "name": "RTCRtpReceiver",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/RTCRtpReceiver\"><code>RTCRtpReceiver</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/RTCRtpReceiver",
    "desc": "The  interface of the WebRTC API manages the reception and decoding of data for a [MediaStreamTrack] on an [RTCPeerConnection].",
    "members": []
  },
  "RTCRtpSender": {
    "name": "RTCRtpSender",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/RTCRtpSender\"><code>RTCRtpSender</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/RTCRtpSender",
    "desc": "The  interface provides the ability to control and obtain details about how a particular [MediaStreamTrack] is encoded and sent to a remote peer.\nWith it, you can configure the encoding used for the corresponding track, get information about the device's media capabilities, and so forth. You can also obtain access to an [RTCDTMFSender] which can be used to send DTMF codes (to simulate the user pressing buttons on a telephone's dial pad) to the remote peer.",
    "members": []
  },
  "RTCRtpSendParameters": {
    "name": "RTCRtpSendParameters",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/RTCRtpSendParameters\"><code>RTCRtpSendParameters</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/RTCRtpSendParameters",
    "desc": "The WebRTC API's  dictionary is used to specify the parameters for an [RTCRtpSender] when calling its [setParameters()] method.",
    "members": []
  },
  "RTCRtpStreamStats": {
    "name": "RTCRtpStreamStats",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/RTCRtpStreamStats\"><code>RTCRtpStreamStats</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/RTCRtpStreamStats",
    "desc": "The  dictionary is returned by the [RTCPeerConnection.getStats()], [RTCRtpSender.getStats()], and [RTCRtpReceiver.getStats()] methods to provide detailed statistics about WebRTC connectivity.\nWhile the dictionary has a base set of properties that are present in each of these cases, there are also additional properties added depending on which interface the method is called on.\n is the base class for all RTP-related statistics reports. It's based on RTCStats and adds the following additional fields.\n\n  Note: This interface was called [RTCRTPStreamStats] until a specification update in the spring of 2017. Check the Browser compatibility table to know if and when the name change was implemented in specific browsers.\n",
    "members": []
  },
  "RTCRtpTransceiver": {
    "name": "RTCRtpTransceiver",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/RTCRtpTransceiver\"><code>RTCRtpTransceiver</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/RTCRtpTransceiver",
    "desc": "The WebRTC interface  describes a permanent pairing of an [RTCRtpSender] and an [RTCRtpReceiver], along with some shared state.\nEach SDP media section describes one bidirectional SRTP (\"Secure Real Time Protocol\") stream (excepting the media section for [RTCDataChannel], if present). This pairing of send and receive SRTP streams is significant for some applications, so  is used to represent this pairing, along with other important state from the media section. Each non-disabled SRTP media section is always represented by exactly one transceiver.\nA transceiver is uniquely identified using its [mid] property, which is the same as the media ID ([mid]) of its corresponding m-line. An  is associated with an m-line if its [mid] is non-null; otherwise it's considered disassociated.",
    "members": []
  },
  "RTCSctpTransport": {
    "name": "RTCSctpTransport",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/RTCSctpTransport\"><code>RTCSctpTransport</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/RTCSctpTransport",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  interface provides information which describes a Stream Control Transmission Protocol (SCTP) transport. This provides information about limitations of the transport, but also provides a way to access the underlying Datagram Transport Layer Security (DTLS) transport over which SCTP packets for all of an [RTCPeerConnection]'s data channels are sent and received.\nYou don't create  objects yourself; instead, you get access to the  for a given [RTCPeerConnection] through its [sctp] property.\nPossibly the most useful property on this interface is its [maxMessageSize] property, which you can use to determine the upper limit on the size of messages you can send over a data channel on the peer connection.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      RTCSctpTransport\n    \n  ",
    "members": []
  },
  "RTCSessionDescription": {
    "name": "RTCSessionDescription",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/RTCSessionDescription\"><code>RTCSessionDescription</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/RTCSessionDescription",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  interface describes one end of a connection—or potential connection—and how it's configured. Each  consists of a description [type] indicating which part of the offer/answer negotiation process it describes and of the SDP descriptor of the session.\nThe process of negotiating a connection between two peers involves exchanging  objects back and forth, with each description suggesting one combination of connection configuration options that the sender of the description supports. Once the two peers agree upon a configuration for the connection, negotiation is complete.",
    "members": []
  },
  "RTCStats": {
    "name": "RTCStats",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/RTCStats\"><code>RTCStats</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/RTCStats",
    "desc": "The  dictionary is the basic statistics object used by WebRTC's statistics monitoring model, providing the properties required of all statistics data objects.\nSpecific classes of statistic are defined as dictionaries based on . For example, statistics about a received RTP stream are represented by [RTCReceivedRtpStreamStats].",
    "members": []
  },
  "RTCStatsIceCandidatePairState": {
    "name": "RTCStatsIceCandidatePairState",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/RTCStatsIceCandidatePairState\"><code>RTCStatsIceCandidatePairState</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/RTCStatsIceCandidatePairState",
    "desc": "The  enumerated type represents the set of string values which are possible for the [RTCIceCandidatePairStats] object's [state] property.\nThis represents the state of this candidate pair within the ICE check list for the [RTCPeerConnection].\nSee ICE check lists in [RTCIceCandidatePairStats.state] for further information about how ICE check lsits work.",
    "members": []
  },
  "RTCStatsReport": {
    "name": "RTCStatsReport",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/RTCStatsReport\"><code>RTCStatsReport</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/RTCStatsReport",
    "desc": "Draft: This page is not complete.This page is currently incomplete and under active construction. Please be aware that it's not going to answer all of your questions just yet.\nThe  interface provides a statistics report obtained by calling one of the [RTCPeerConnection.getStats()], [RTCRtpReceiver.getStats()], and [RTCRtpSender.getStats()] methods.\nThis statistics report contains a mapping of statistic category string names to objects containing the corresponding statistics data.\nCalling [getStats()] on an [RTCPeerConnection] lets you specify whether you wish to obtain statistics for outbound, inbound, or all streams on the connection. The [RTCRtpReceiver] and [RTCRtpSender] versions of [getStats()] specifically only return statistics available to the incoming or outgoing stream on which you call them.",
    "members": []
  },
  "RTCStatsType": {
    "name": "RTCStatsType",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/RTCStatsType\"><code>RTCStatsType</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/RTCStatsType",
    "desc": "The  enumerated type (enum) is a set of strings which define the [type] of statistics reported in a record found in the [RTCStatsReport] object.\nThis type determines which of the [RTCStats]-based dictionaries the record is based upon.",
    "members": []
  },
  "RTCTrackEvent": {
    "name": "RTCTrackEvent",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/RTCTrackEvent\"><code>RTCTrackEvent</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/RTCTrackEvent",
    "desc": "The WebRTC API interface  represents the [track] event, which is sent when a new [MediaStreamTrack] is added to an [RTCRtpReceiver] which is part of the [RTCPeerConnection].\nThe target is the [RTCPeerConnection] object to which the track is being added.\nThis event is sent by the WebRTC layer to the web site or application, so you will not typically need to instantiate an  yourself.\n  \n    \n    \n      Event\n    \n  \n  \n    \n    \n      RTCTrackEvent\n    \n  ",
    "members": []
  },
  "Sanitizer": {
    "name": "Sanitizer",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/Sanitizer\"><code>Sanitizer</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/Sanitizer",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\n\n  The  interface of the [HTML Sanitizer API] provides methods to sanitize untrusted strings of HTML, [Document] and [DocumentFragment] objects.\n  After sanitization, unwanted elements or attributes are removed, and the returned objects can safely be inserted into a document’s DOM.\n\nA  object is also used by the [Element.setHTML()] method to parse and sanitize a string of HTML, and immediately insert it into an element.\n\n  The default configuration strips out XSS-relevant input by default, including [<script>] tags, custom elements, and comments.\n  This configuration may be customized using constructor options.\n",
    "members": []
  },
  "Screen": {
    "name": "Screen",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/Screen\"><code>Screen</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/Screen",
    "desc": "The  interface represents a screen, usually the one on which the current window is being rendered, and is obtained using [window.screen].\nNote that browsers determine which screen to report as current by detecting which screen has the center of the browser window.",
    "members": []
  },
  "ScreenOrientation": {
    "name": "ScreenOrientation",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/ScreenOrientation\"><code>ScreenOrientation</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/ScreenOrientation",
    "desc": "The  interface of the Screen Orientation API provides information about the current orientation of the document.\nA  instance object can be retrieved using the [screen.orientation] property.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      ScreenOrientation\n    \n  ",
    "members": []
  },
  "ScriptProcessorNode": {
    "name": "ScriptProcessorNode",
    "experimental": false,
    "deprecated": true,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/ScriptProcessorNode\"><code>ScriptProcessorNode</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/ScriptProcessorNode",
    "desc": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.\nThe  interface allows the generation, processing, or analyzing of audio using JavaScript.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      AudioNode\n    \n  \n  \n    \n    \n      ScriptProcessorNode\n    \n  \n\n  Note: This feature was replaced by AudioWorklets and the [AudioWorkletNode] interface.\n\nThe  interface is an [AudioNode] audio-processing module that is linked to two buffers, one containing the input audio data, one containing the processed output audio data. An event, implementing the [AudioProcessingEvent] interface, is sent to the object each time the input buffer contains new data, and the event handler terminates when it has filled the output buffer with data.\n\n  \n\nThe size of the input and output buffer are defined at the creation time, when the [BaseAudioContext.createScriptProcessor] method is called (both are defined by [BaseAudioContext.createScriptProcessor]'s [bufferSize] parameter). The buffer size must be a power of 2 between [256] and [16384], that is [256], [512], [1024], [2048], [4096], [8192] or [16384]. Small numbers lower the latency, but large number may be necessary to avoid audio breakup and glitches.\nIf the buffer size is not defined, which is recommended, the browser will pick one that its heuristic deems appropriate.\n\n  \n    \n      Number of inputs\n      [1]\n    \n    \n      Number of outputs\n      [1]\n    \n    \n      Channel count mode\n      [\"max\"]\n    \n    \n      Channel count\n      [2] (not used in the default count mode)\n    \n    \n      Channel interpretation\n      [\"speakers\"]\n    \n  \n",
    "members": []
  },
  "SecurityPolicyViolationEvent": {
    "name": "SecurityPolicyViolationEvent",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SecurityPolicyViolationEvent\"><code>SecurityPolicyViolationEvent</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/SecurityPolicyViolationEvent",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  interface inherits from [Event], and represents the event object of an event sent on a document or worker when its content security policy is violated.\n  \n    \n    \n      Event\n    \n  \n  \n    \n    \n      SecurityPolicyViolationEvent\n    \n  ",
    "members": []
  },
  "Selection": {
    "name": "Selection",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/Selection\"><code>Selection</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/Selection",
    "desc": "A  object represents the range of text selected by the user or the current position of the caret. To obtain a  object for examination or manipulation, call [window.getSelection()].\nA user may make a selection from left to right (in document order) or right to left (reverse of document order). The anchor is where the user began the selection and the focus is where the user ends the selection. If you make a selection with a desktop mouse, the anchor is placed where you pressed the mouse button, and the focus is placed where you released the mouse button.\n\n  Note: Anchor and focus should not be confused with the start and end positions of a selection. The anchor can be placed before the focus or vice-versa, depending on the direction you made your selection.\n",
    "members": []
  },
  "crypto": {
    "name": "crypto",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/crypto_property\"><code>self.crypto</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/Crypto",
    "desc": "\n  The [Crypto] interface represents basic cryptography features available in the current context.\n  It allows access to a cryptographically strong random number generator and to cryptographic primitives.\n\n  Note: This feature is available in Web Workers\n\nThe Web Crypto API is accessed through the global  property, which is a [Crypto] object.",
    "members": []
  },
  "performance": {
    "name": "performance",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/performance_property\"><code>self.performance</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/Performance",
    "desc": "The [Performance] interface provides access to performance-related information for the current page. It's part of the High Resolution Time API, but is enhanced by the Performance Timeline API, the Navigation Timing API, the User Timing API, and the Resource Timing API.\nAn object of this type can be obtained by calling the [window.performance] read-only attribute.\n\n  Note: This interface and its members are available in Web Workers via [WorkerGlobalScope.performance] , except where indicated below. Also, note that performance markers and measures are per context. If you create a mark on the main thread (or other worker), you cannot see it in a worker thread, and vice versa.\n\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Performance\n    \n  ",
    "members": []
  },
  "Sensor": {
    "name": "Sensor",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/Sensor\"><code>Sensor</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/Sensor",
    "desc": "The  interface of the Sensor APIs is the base class for all the other sensor interfaces. This interface cannot be used directly. Instead it provides properties, event handlers, and methods accessed by interfaces that inherit from it.\nIf a feature policy blocks use of a feature it is because your code is inconsistent with the policies set on your server. This is not something that would ever be shown to a user. The [Feature-Policy] HTTP header article contains implementation instructions.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Sensor\n    \n  \nWhen initially created, the  object is idle, meaning it does not take measures. Once the [start()]} method is called, it prepares itself to read data and, once ready, the [activate] event is sent and the sensor becomes activated. It then sends a [reading] event each time new data is available.\nIn case of an error, the [error] event is sent, reading stops, and the  object becomes idle again. The [start()]} method needs to be called again before it can read further data.",
    "members": []
  },
  "SensorErrorEvent": {
    "name": "SensorErrorEvent",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SensorErrorEvent\"><code>SensorErrorEvent</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SensorErrorEvent",
    "desc": "The  interface of the Sensor APIs provides information about errors thrown by a [Sensor] or derived interface.\n  \n    \n    \n      Event\n    \n  \n  \n    \n    \n      SensorErrorEvent\n    \n  ",
    "members": []
  },
  "Serial": {
    "name": "Serial",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/Serial\"><code>Serial</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/Serial",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  interface of the [Web Serial API] provides attributes and methods for finding and connecting to serial ports from a web page.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Serial\n    \n  ",
    "members": []
  },
  "SerialPort": {
    "name": "SerialPort",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SerialPort\"><code>SerialPort</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SerialPort",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  interface of the [Web Serial API] provides access to a serial port on the host device.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      SerialPort\n    \n  ",
    "members": []
  },
  "ServiceWorker": {
    "name": "ServiceWorker",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/ServiceWorker\"><code>ServiceWorker</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/ServiceWorker",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  interface of the Service Worker API provides a reference to a service worker. Multiple browsing contexts (e.g. pages, workers, etc.) can be associated with the same service worker, each through a unique  object.\nA  object is available in the [ServiceWorkerRegistration.active] property, and the [ServiceWorkerContainer.controller] property — this is a service worker that has been activated and is controlling the page (the service worker has been successfully registered, and the controlled page has been reloaded.)\nThe  interface is dispatched a set of lifecycle events — [install] and [activate] — and functional events including [fetch]. A  object has an associated [ServiceWorker.state], related to its lifecycle.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      ServiceWorker\n    \n  ",
    "members": []
  },
  "ServiceWorkerContainer": {
    "name": "ServiceWorkerContainer",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/ServiceWorkerContainer\"><code>ServiceWorkerContainer</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/ServiceWorkerContainer",
    "desc": "The  interface of the Service Worker API provides an object representing the service worker as an overall unit in the network ecosystem, including facilities to register, unregister and update service workers, and access the state of service workers and their registrations.\nMost importantly, it exposes the [ServiceWorkerContainer.register()] method used to register service workers, and the [ServiceWorkerContainer.controller] property used to determine whether or not the current page is actively controlled.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      ServiceWorkerContainer\n    \n  ",
    "members": []
  },
  "ServiceWorkerGlobalScope": {
    "name": "ServiceWorkerGlobalScope",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/ServiceWorkerGlobalScope\"><code>ServiceWorkerGlobalScope</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/ServiceWorkerGlobalScope",
    "desc": "The  interface of the Service Worker API represents the global execution context of a service worker.\nDevelopers should keep in mind that the ServiceWorker state is not persisted across the termination/restart cycle, so each event handler should assume it's being invoked with a bare, default global state.\nOnce successfully registered, a service worker can and will be terminated when idle to conserve memory and processor power. An active service worker is automatically restarted to respond to events, such as [ServiceWorkerGlobalScope.onfetch] or [ServiceWorkerGlobalScope.onmessage].\nAdditionally, synchronous requests are not allowed from within a service worker — only asynchronous requests, like those initiated via the [fetch()] method, can be used.\nThis interface inherits from the [WorkerGlobalScope] interface, and its parent [EventTarget].\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      WorkerGlobalScope\n    \n  \n  \n    \n    \n      ServiceWorkerGlobalScope\n    \n  ",
    "members": []
  },
  "ServiceWorkerMessageEvent": {
    "name": "ServiceWorkerMessageEvent",
    "experimental": true,
    "deprecated": true,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/ServiceWorkerMessageEvent\"><code>ServiceWorkerMessageEvent</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/ServiceWorkerMessageEvent",
    "desc": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.\n\n  Warning: In modern browsers, this interface has been deprecated. Service worker messages will now use the [MessageEvent] interface, for consistency with other web messaging features.\n\nThe  interface of the [ServiceWorker API] contains information about an event sent to a [ServiceWorkerContainer] target. This extends the default [message] event to allow setting a [ServiceWorker] object as the source of a message. The event object is accessed via the handler function of a [message] event, when fired by a message received from a service worker.\nThis interface inherits from the [Event] interface.",
    "members": []
  },
  "ServiceWorkerRegistration": {
    "name": "ServiceWorkerRegistration",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/ServiceWorkerRegistration\"><code>ServiceWorkerRegistration</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/ServiceWorkerRegistration",
    "desc": "The  interface of the Service Worker API represents the service worker registration. You register a service worker to control one or more pages that share the same origin.\nThe lifetime of a service worker registration is beyond that of the  objects that represent them within the lifetime of their corresponding service worker clients. The browser maintains a persistent list of active  objects.\n\n  Note: This feature is available in Web Workers.\n\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      ServiceWorkerRegistration\n    \n  ",
    "members": []
  },
  "setInterval": {
    "name": "setInterval",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/setInterval\"><code>setInterval()</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/setInterval",
    "desc": "\n  The [setInterval()] method,\n  offered on the [Window] and [Worker] interfaces, repeatedly\n  calls a function or executes a code snippet, with a fixed time delay between each\n  call.\n\n\n  This method returns an interval ID which uniquely identifies the interval, so you\n  can remove it later by calling [clearInterval()].\n",
    "members": []
  },
  "setTimeout": {
    "name": "setTimeout",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/setTimeout\"><code>setTimeout()</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/setTimeout",
    "desc": "\n  The global [setTimeout()] method sets a timer which executes a function or specified\n  piece of code once the timer expires.\n",
    "members": []
  },
  "ShadowRoot": {
    "name": "ShadowRoot",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/ShadowRoot\"><code>ShadowRoot</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/ShadowRoot",
    "desc": "The  interface of the Shadow DOM API is the root node of a DOM subtree that is rendered separately from a document's main DOM tree.\nYou can retrieve a reference to an element's shadow root using its [Element.shadowRoot] property, provided it was created using [Element.attachShadow()] with the [mode] option set to [open].\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      DocumentFragment\n    \n  \n  \n    \n    \n      ShadowRoot\n    \n  ",
    "members": []
  },
  "SharedWorker": {
    "name": "SharedWorker",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SharedWorker\"><code>SharedWorker</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SharedWorker",
    "desc": "The  interface represents a specific kind of worker that can be accessed from several browsing contexts, such as several windows, iframes or even workers. They implement an interface different than dedicated workers and have a different global scope, [SharedWorkerGlobalScope].\n\n  Note: If SharedWorker can be accessed from several browsing contexts, all those browsing contexts must share the exact same origin (same protocol, host and port).\n\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      SharedWorker\n    \n  ",
    "members": []
  },
  "SharedWorkerGlobalScope": {
    "name": "SharedWorkerGlobalScope",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SharedWorkerGlobalScope\"><code>SharedWorkerGlobalScope</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SharedWorkerGlobalScope",
    "desc": "The  object (the [SharedWorker] global scope) is accessible through the [self] keyword. Some additional global functions, namespaces objects, and constructors, not typically associated with the worker global scope, but available on it, are listed in the JavaScript Reference. See the complete list of functions available to workers.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      WorkerGlobalScope\n    \n  \n  \n    \n    \n      SharedWorkerGlobalScope\n    \n  ",
    "members": []
  },
  "SourceBuffer": {
    "name": "SourceBuffer",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SourceBuffer\"><code>SourceBuffer</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/SourceBuffer",
    "desc": "The  interface represents a chunk of media to be passed into an [HTMLMediaElement] and played, via a [MediaSource] object. This can be made up of one or several media segments.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      SourceBuffer\n    \n  ",
    "members": []
  },
  "SourceBufferList": {
    "name": "SourceBufferList",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SourceBufferList\"><code>SourceBufferList</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/SourceBufferList",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  interface represents a simple container list for multiple [SourceBuffer] objects.\nThe source buffer list containing the [SourceBuffer]s appended to a particular [MediaSource] can be retrieved using the [MediaSource.sourceBuffers] property.\nThe individual source buffers can be accessed using the array operator [[]].\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      SourceBufferList\n    \n  ",
    "members": []
  },
  "SpeechGrammar": {
    "name": "SpeechGrammar",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SpeechGrammar\"><code>SpeechGrammar</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/SpeechGrammar",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  interface of the Web Speech API represents a set of words or patterns of words that we want the recognition service to recognize.\nGrammar is defined using JSpeech Grammar Format (JSGF.) Other formats may also be supported in the future.",
    "members": []
  },
  "SpeechGrammarList": {
    "name": "SpeechGrammarList",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SpeechGrammarList\"><code>SpeechGrammarList</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/SpeechGrammarList",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  interface of the Web Speech API represents a list of [SpeechGrammar] objects containing words or patterns of words that we want the recognition service to recognize.\nGrammar is defined using JSpeech Grammar Format (JSGF.) Other formats may also be supported in the future.",
    "members": []
  },
  "SpeechRecognition": {
    "name": "SpeechRecognition",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SpeechRecognition\"><code>SpeechRecognition</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SpeechRecognition",
    "desc": "The  interface of the Web Speech API is the controller interface for the recognition service; this also handles the [SpeechRecognitionEvent] sent from the recognition service.\n\n  Note: On some browsers, like Chrome, using Speech Recognition on a web page involves a server-based recognition engine. Your audio is sent to a web service for recognition processing, so it won't work offline.\n\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      SpeechRecognition\n    \n  ",
    "members": []
  },
  "SpeechRecognitionAlternative": {
    "name": "SpeechRecognitionAlternative",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SpeechRecognitionAlternative\"><code>SpeechRecognitionAlternative</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/SpeechRecognitionAlternative",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  interface of the Web Speech API represents a single word that has been recognized by the speech recognition service.",
    "members": []
  },
  "SpeechRecognitionError": {
    "name": "SpeechRecognitionError",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SpeechRecognitionError\"><code>SpeechRecognitionError</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/SpeechRecognitionError",
    "desc": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.\nThe  interface of the Web Speech API represents error messages from the recognition service.\n\n  Note: This  interface was renamed to [SpeechRecognitionErrorEvent] in the Web Speech API specification.\n",
    "members": []
  },
  "SpeechRecognitionErrorEvent": {
    "name": "SpeechRecognitionErrorEvent",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SpeechRecognitionErrorEvent\"><code>SpeechRecognitionErrorEvent</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SpeechRecognitionErrorEvent",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  interface of the Web Speech API represents error messages from the recognition service.\n  \n    \n    \n      Event\n    \n  \n  \n    \n    \n      SpeechRecognitionErrorEvent\n    \n  ",
    "members": []
  },
  "SpeechRecognitionEvent": {
    "name": "SpeechRecognitionEvent",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SpeechRecognitionEvent\"><code>SpeechRecognitionEvent</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/SpeechRecognitionEvent",
    "desc": "The  interface of the Web Speech API represents the event object for the [result] and [nomatch] events, and contains all the data associated with an interim or final speech recognition result.\n  \n    \n    \n      Event\n    \n  \n  \n    \n    \n      SpeechRecognitionEvent\n    \n  ",
    "members": []
  },
  "SpeechRecognitionResult": {
    "name": "SpeechRecognitionResult",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SpeechRecognitionResult\"><code>SpeechRecognitionResult</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/SpeechRecognitionResult",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  interface of the Web Speech API represents a single recognition match, which may contain multiple [SpeechRecognitionAlternative] objects.",
    "members": []
  },
  "SpeechRecognitionResultList": {
    "name": "SpeechRecognitionResultList",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SpeechRecognitionResultList\"><code>SpeechRecognitionResultList</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/SpeechRecognitionResultList",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  interface of the Web Speech API represents a list of [SpeechRecognitionResult] objects, or a single one if results are being captured in [continuous] mode.",
    "members": []
  },
  "SpeechSynthesis": {
    "name": "SpeechSynthesis",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SpeechSynthesis\"><code>SpeechSynthesis</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SpeechSynthesis",
    "desc": "The  interface of the Web Speech API is the controller interface for the speech service; this can be used to retrieve information about the synthesis voices available on the device, start and pause speech, and other commands besides.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      SpeechSynthesis\n    \n  ",
    "members": []
  },
  "SpeechSynthesisErrorEvent": {
    "name": "SpeechSynthesisErrorEvent",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SpeechSynthesisErrorEvent\"><code>SpeechSynthesisErrorEvent</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/SpeechSynthesisErrorEvent",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  interface of the Web Speech API contains information about any errors that occur while processing [SpeechSynthesisUtterance] objects in the speech service.\n  \n    \n    \n      Event\n    \n  \n  \n    \n    \n      SpeechSynthesisEvent\n    \n  \n  \n    \n    \n      SpeechSynthesisErrorEvent\n    \n  ",
    "members": []
  },
  "SpeechSynthesisEvent": {
    "name": "SpeechSynthesisEvent",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SpeechSynthesisEvent\"><code>SpeechSynthesisEvent</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SpeechSynthesisEvent",
    "desc": "The  interface of the Web Speech API contains information about the current state of [SpeechSynthesisUtterance] objects that have been processed in the speech service.\n  \n    \n    \n      Event\n    \n  \n  \n    \n    \n      SpeechSynthesisEvent\n    \n  ",
    "members": []
  },
  "SpeechSynthesisUtterance": {
    "name": "SpeechSynthesisUtterance",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SpeechSynthesisUtterance\"><code>SpeechSynthesisUtterance</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SpeechSynthesisUtterance",
    "desc": "\n  The  interface of the Web Speech API represents a speech request.\n  It contains the content the speech service should read and information about how to read it (e.g. language, pitch and volume.)\n\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      SpeechSynthesisUtterance\n    \n  ",
    "members": []
  },
  "SpeechSynthesisVoice": {
    "name": "SpeechSynthesisVoice",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SpeechSynthesisVoice\"><code>SpeechSynthesisVoice</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SpeechSynthesisVoice",
    "desc": "\n  The  interface of the Web Speech API represents a voice that the system supports.\n  Every  has its own relative speech service including information about language, name and URI.\n",
    "members": []
  },
  "StaticRange": {
    "name": "StaticRange",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/StaticRange\"><code>StaticRange</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/StaticRange",
    "desc": "The DOM  interface extends [AbstractRange] to provide a method to specify a range of content in the DOM whose contents don't update to reflect changes which occur within the DOM tree.\nThis interface offers the same set of properties and methods as [AbstractRange].\n[AbstractRange] and  are not available from web workers.\n  \n    \n    \n      AbstractRange\n    \n  \n  \n    \n    \n      StaticRange\n    \n  ",
    "members": []
  },
  "StereoPannerNode": {
    "name": "StereoPannerNode",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/StereoPannerNode\"><code>StereoPannerNode</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/StereoPannerNode",
    "desc": "The  interface of the Web Audio API represents a simple stereo panner node that can be used to pan an audio stream left or right. It is an [AudioNode] audio-processing module that positions an incoming audio stream in a stereo image using a low-cost equal-power panning algorithm.\nThe [pan] property takes a unitless value between [-1] (full left pan) and [1] (full right pan). This interface was introduced as a much simpler way to apply a simple panning effect than having to use a full [PannerNode].\n\n  \n\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      AudioNode\n    \n  \n  \n    \n    \n      StereoPannerNode\n    \n  \n\n  \n    \n      Number of inputs\n      [1]\n    \n    \n      Number of outputs\n      [1]\n    \n    \n      Channel count mode\n      [\"clamped-max\"]\n    \n    \n      Channel count\n      [2]\n    \n    \n      Channel interpretation\n      [\"speakers\"]\n    \n  \n",
    "members": []
  },
  "Storage": {
    "name": "Storage",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/Storage\"><code>Storage</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/Storage",
    "desc": "The  interface of the Web Storage API provides access to a particular domain's session or local storage. It allows, for example, the addition, modification, or deletion of stored data items.\nTo manipulate, for instance, the session storage for a domain, a call to [Window.sessionStorage] is made; whereas for local storage the call is made to [Window.localStorage].",
    "members": []
  },
  "StorageEvent": {
    "name": "StorageEvent",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/StorageEvent\"><code>StorageEvent</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/StorageEvent",
    "desc": "\n  The  interface is implemented by the [storage] event, which is\n  sent to a window\n  when a storage area the window has access to is changed within the context of another document.\n\n  \n    \n    \n      Event\n    \n  \n  \n    \n    \n      StorageEvent\n    \n  ",
    "members": []
  },
  "StorageManager": {
    "name": "StorageManager",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/StorageManager\"><code>StorageManager</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/StorageManager",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  interface of the Storage API provides an interface for managing persistance permissions and estimating available storage. You can get a reference to this interface using either [navigator.storage] or [WorkerNavigator.storage].",
    "members": []
  },
  "structuredClone": {
    "name": "structuredClone",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/structuredClone\"><code>structuredClone()</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/structuredClone",
    "desc": "The global [structuredClone()] method creates a deep clone of a given value using the structured clone algorithm.\n\n  The method also allows transferable objects in the original value to be transferred rather than cloned to the new object.\n  Transferred objects are detached from the original object and attached to the new object; they are no longer accessible in the original object.\n",
    "members": []
  },
  "StylePropertyMap": {
    "name": "StylePropertyMap",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/StylePropertyMap\"><code>StylePropertyMap</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/StylePropertyMap",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  interface of the CSS Typed Object Model API provides a representation of a CSS declaration block that is an alternative to [CSSStyleDeclaration].\n  \n    \n    \n      StylePropertyMapReadOnly\n    \n  \n  \n    \n    \n      StylePropertyMap\n    \n  ",
    "members": []
  },
  "StylePropertyMapReadOnly": {
    "name": "StylePropertyMapReadOnly",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/StylePropertyMapReadOnly\"><code>StylePropertyMapReadOnly</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/StylePropertyMapReadOnly",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  interface of the CSS Typed Object Model API provides a read-only representation of a CSS declaration block that is an alternative to [CSSStyleDeclaration]. Retrieve an instance of this interface using [Element.computedStyleMap()].",
    "members": []
  },
  "StyleSheet": {
    "name": "StyleSheet",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/StyleSheet\"><code>StyleSheet</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/StyleSheet",
    "desc": "An object implementing the  interface represents a single style sheet. CSS style sheets will further implement the more specialized [CSSStyleSheet] interface.",
    "members": []
  },
  "StyleSheetList": {
    "name": "StyleSheetList",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/StyleSheetList\"><code>StyleSheetList</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/StyleSheetList",
    "desc": "The  interface represents a list of [CSSStyleSheet] objects. An instance of this object can be returned by [Document.styleSheets].\nIt is an array-like object but can't be iterated over using [Array] methods. However it can be iterated over in a standard [for] loop over its indices, or converted to an [Array].",
    "members": []
  },
  "SubmitEvent": {
    "name": "SubmitEvent",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SubmitEvent\"><code>SubmitEvent</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SubmitEvent",
    "desc": "The  interface defines the object used to represent an HTML form's [submit] event. This event is fired at the [<form>] when the form's submit action is invoked.\n  \n    \n    \n      Event\n    \n  \n  \n    \n    \n      SubmitEvent\n    \n  ",
    "members": []
  },
  "SubtleCrypto": {
    "name": "SubtleCrypto",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SubtleCrypto\"><code>SubtleCrypto</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SubtleCrypto",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  interface of the Web Crypto API provides a number of low-level cryptographic functions. Access to the features of  is obtained through the [subtle] property of the [Crypto] object you get from the [crypto] property.\n\n  Warning: This API provides a number of low-level cryptographic primitives. It's very easy to misuse them, and the pitfalls involved can be very subtle.\n  Even assuming you use the basic cryptographic functions correctly, secure key management and overall security system design are extremely hard to get right, and are generally the domain of specialist security experts.\n  Errors in security system design and implementation can make the security of the system completely ineffective.\n  Please learn and experiment, but don't guarantee or imply the security of your work before an individual knowledgeable in this subject matter thoroughly reviews it. The Crypto 101 Course can be a great place to start learning about the design and implementation of secure systems.\n",
    "members": []
  },
  "SVGAElement": {
    "name": "SVGAElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGAElement\"><code>SVGAElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGAElement",
    "desc": "The  interface provides access to the properties of an [<a>] element, as well as methods to manipulate them.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      SVGElement\n    \n  \n  \n    \n    \n      SVGGraphicsElement\n    \n  \n  \n    \n    \n      SVGAElement\n    \n  ",
    "members": []
  },
  "SVGAltGlyphDefElement": {
    "name": "SVGAltGlyphDefElement",
    "experimental": false,
    "deprecated": true,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGAltGlyphDefElement\"><code>SVGAltGlyphDefElement</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGAltGlyphDefElement",
    "desc": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.\nThe  interface corresponds to the [<altGlyphDef>] element.\n\n  Warning: This interface was removed in the SVG 2 specification.\n",
    "members": []
  },
  "SVGAltGlyphElement": {
    "name": "SVGAltGlyphElement",
    "experimental": false,
    "deprecated": true,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGAltGlyphElement\"><code>SVGAltGlyphElement</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGAltGlyphElement",
    "desc": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.\nThe  interface represents an [<altglyph>] element. This interface makes it possible to implement more sophisticated and particular glyph characters. For some textual representations as: ligatures (e.g. æ, ß, etc ), special-purpose fonts (e.g. musical symbols) or even alternate glyphs such as Asian text strings it is required that a different set of glyphs be used than the normal given character data.",
    "members": []
  },
  "SVGAltGlyphItemElement": {
    "name": "SVGAltGlyphItemElement",
    "experimental": false,
    "deprecated": true,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGAltGlyphItemElement\"><code>SVGAltGlyphItemElement</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGAltGlyphItemElement",
    "desc": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.\nThe  interface corresponds to the [<altGlyphItem>] element.\n\n  Warning: This interface was removed in the SVG 2 specification.\n",
    "members": []
  },
  "SVGAngle": {
    "name": "SVGAngle",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGAngle\"><code>SVGAngle</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGAngle",
    "desc": "The  interface is used to represent a value that can be an [<angle>] or [<number>] value. An  reflected through the [animVal] attribute is always read only.\nAn  object can be designated as read only, which means that attempts to modify the object will result in an exception being thrown.\nAn  object can be associated with a particular element. The associated element is used to determine which element's content attribute to update if the object reflects an attribute. Unless otherwise described, an  object is not associated with any element.\nEvery  object operates in one of two modes:\n\n  Reflect the base value of a reflected animatable attribute (being exposed through the [baseVal] member of an [SVGAnimatedAngle]),\n  Be detached, which is the case for  objects created with [SVGSVGElement.createSVGAngle()].\n",
    "members": []
  },
  "SVGAnimateColorElement": {
    "name": "SVGAnimateColorElement",
    "experimental": false,
    "deprecated": true,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGAnimateColorElement\"><code>SVGAnimateColorElement</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGAnimateColorElement",
    "desc": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.\nThe  interface corresponds to the [<animateColor>] element.",
    "members": []
  },
  "SVGAnimatedAngle": {
    "name": "SVGAnimatedAngle",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGAnimatedAngle\"><code>SVGAnimatedAngle</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGAnimatedAngle",
    "members": []
  },
  "SVGAnimatedBoolean": {
    "name": "SVGAnimatedBoolean",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGAnimatedBoolean\"><code>SVGAnimatedBoolean</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGAnimatedBoolean",
    "members": []
  },
  "SVGAnimatedEnumeration": {
    "name": "SVGAnimatedEnumeration",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGAnimatedEnumeration\"><code>SVGAnimatedEnumeration</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGAnimatedEnumeration",
    "members": []
  },
  "SVGAnimatedInteger": {
    "name": "SVGAnimatedInteger",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGAnimatedInteger\"><code>SVGAnimatedInteger</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGAnimatedInteger",
    "members": []
  },
  "SVGAnimatedLength": {
    "name": "SVGAnimatedLength",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGAnimatedLength\"><code>SVGAnimatedLength</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGAnimatedLength",
    "desc": "The  interface represents attributes of type <length> which can be animated.",
    "members": []
  },
  "SVGAnimatedLengthList": {
    "name": "SVGAnimatedLengthList",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGAnimatedLengthList\"><code>SVGAnimatedLengthList</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGAnimatedLengthList",
    "members": []
  },
  "SVGAnimatedNumber": {
    "name": "SVGAnimatedNumber",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGAnimatedNumber\"><code>SVGAnimatedNumber</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGAnimatedNumber",
    "members": []
  },
  "SVGAnimatedNumberList": {
    "name": "SVGAnimatedNumberList",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGAnimatedNumberList\"><code>SVGAnimatedNumberList</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGAnimatedNumberList",
    "members": []
  },
  "SVGAnimatedPreserveAspectRatio": {
    "name": "SVGAnimatedPreserveAspectRatio",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGAnimatedPreserveAspectRatio\"><code>SVGAnimatedPreserveAspectRatio</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGAnimatedPreserveAspectRatio",
    "members": []
  },
  "SVGAnimatedRect": {
    "name": "SVGAnimatedRect",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGAnimatedRect\"><code>SVGAnimatedRect</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGAnimatedRect",
    "desc": "The  interface is used for attributes of basic [SVGRect] which can be animated.",
    "members": []
  },
  "SVGAnimatedString": {
    "name": "SVGAnimatedString",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGAnimatedString\"><code>SVGAnimatedString</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGAnimatedString",
    "desc": "The  interface represents string attributes which can be animated from each SVG declaration. You need to create SVG attribute before doing anything else, everything should be declared inside this.",
    "members": []
  },
  "SVGAnimatedTransformList": {
    "name": "SVGAnimatedTransformList",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGAnimatedTransformList\"><code>SVGAnimatedTransformList</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGAnimatedTransformList",
    "members": []
  },
  "SVGAnimateElement": {
    "name": "SVGAnimateElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGAnimateElement\"><code>SVGAnimateElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGAnimateElement",
    "desc": "The  interface corresponds to the [<animate>] element.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      SVGElement\n    \n  \n  \n    \n    \n      SVGAnimationElement\n    \n  \n  \n    \n    \n      SVGAnimateElement\n    \n  ",
    "members": []
  },
  "SVGAnimateMotionElement": {
    "name": "SVGAnimateMotionElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGAnimateMotionElement\"><code>SVGAnimateMotionElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGAnimateMotionElement",
    "desc": "The  interface corresponds to the [<animateMotion>] element.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      SVGElement\n    \n  \n  \n    \n    \n      SVGAnimationElement\n    \n  \n  \n    \n    \n      SVGAnimateMotionElement\n    \n  ",
    "members": []
  },
  "SVGAnimateTransformElement": {
    "name": "SVGAnimateTransformElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGAnimateTransformElement\"><code>SVGAnimateTransformElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGAnimateTransformElement",
    "desc": "The  interface corresponds to the [<animateTransform>] element.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      SVGElement\n    \n  \n  \n    \n    \n      SVGAnimationElement\n    \n  \n  \n    \n    \n      SVGAnimateTransformElement\n    \n  ",
    "members": []
  },
  "SVGAnimationElement": {
    "name": "SVGAnimationElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGAnimationElement\"><code>SVGAnimationElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGAnimationElement",
    "desc": "The  interface is the base interface for all of the animation element interfaces: [SVGAnimateElement], [SVGSetElement], [SVGAnimateColorElement], [SVGAnimateMotionElement] and [SVGAnimateTransformElement].\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      SVGElement\n    \n  \n  \n    \n    \n      SVGAnimationElement\n    \n  ",
    "members": []
  },
  "SVGCircleElement": {
    "name": "SVGCircleElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGCircleElement\"><code>SVGCircleElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGCircleElement",
    "desc": "The  interface is an interface for the [<circle>] element.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      SVGElement\n    \n  \n  \n    \n    \n      SVGGraphicsElement\n    \n  \n  \n    \n    \n      SVGGeometryElement\n    \n  \n  \n    \n    \n      SVGCircleElement\n    \n  ",
    "members": []
  },
  "SVGClipPathElement": {
    "name": "SVGClipPathElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGClipPathElement\"><code>SVGClipPathElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGClipPathElement",
    "desc": "The  interface provides access to the properties of [<clipPath>] elements, as well as methods to manipulate them.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      SVGElement\n    \n  \n  \n    \n    \n      SVGClipPathElement\n    \n  ",
    "members": []
  },
  "SVGComponentTransferFunctionElement": {
    "name": "SVGComponentTransferFunctionElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGComponentTransferFunctionElement\"><code>SVGComponentTransferFunctionElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGComponentTransferFunctionElement",
    "desc": "The  interface defines a base interface used by the component transfer function interfaces.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      SVGElement\n    \n  \n  \n    \n    \n      SVGComponentTransferFunctionElement\n    \n  ",
    "members": []
  },
  "SVGCursorElement": {
    "name": "SVGCursorElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGCursorElement\"><code>SVGCursorElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGCursorElement",
    "desc": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.\nThe  interface provides access to the properties of [<cursor>] elements, as well as methods to manipulate them.",
    "members": []
  },
  "SVGDefsElement": {
    "name": "SVGDefsElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGDefsElement\"><code>SVGDefsElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGDefsElement",
    "desc": "The  interface corresponds to the [<defs>] element.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      SVGElement\n    \n  \n  \n    \n    \n      SVGGraphicsElement\n    \n  \n  \n    \n    \n      SVGDefsElement\n    \n  ",
    "members": []
  },
  "SVGDescElement": {
    "name": "SVGDescElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGDescElement\"><code>SVGDescElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGDescElement",
    "desc": "The  interface corresponds to the [<desc>] element.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      SVGElement\n    \n  \n  \n    \n    \n      SVGDescElement\n    \n  ",
    "members": []
  },
  "SVGElement": {
    "name": "SVGElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGElement\"><code>SVGElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGElement",
    "desc": "All of the SVG DOM interfaces that correspond directly to elements in the SVG language derive from the  interface.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      SVGElement\n    \n  ",
    "members": []
  },
  "SVGEllipseElement": {
    "name": "SVGEllipseElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGEllipseElement\"><code>SVGEllipseElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGEllipseElement",
    "desc": "The  interface provides access to the properties of [<ellipse>] elements.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      SVGElement\n    \n  \n  \n    \n    \n      SVGGraphicsElement\n    \n  \n  \n    \n    \n      SVGGeometryElement\n    \n  \n  \n    \n    \n      SVGEllipseElement\n    \n  ",
    "members": []
  },
  "SVGEvent": {
    "name": "SVGEvent",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGEvent\"><code>SVGEvent</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGEvent",
    "desc": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.\nThe  interface represents the event object for most SVG-related events.",
    "members": []
  },
  "SVGFEBlendElement": {
    "name": "SVGFEBlendElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGFEBlendElement\"><code>SVGFEBlendElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGFEBlendElement",
    "desc": "The  interface corresponds to the [<feBlend>] element.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      SVGElement\n    \n  \n  \n    \n    \n      SVGFEBlendElement\n    \n  ",
    "members": []
  },
  "SVGFEColorMatrixElement": {
    "name": "SVGFEColorMatrixElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGFEColorMatrixElement\"><code>SVGFEColorMatrixElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGFEColorMatrixElement",
    "desc": "The  interface corresponds to the [<feColorMatrix>] element.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      SVGElement\n    \n  \n  \n    \n    \n      SVGFEColorMatrixElement\n    \n  ",
    "members": []
  },
  "SVGFEComponentTransferElement": {
    "name": "SVGFEComponentTransferElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGFEComponentTransferElement\"><code>SVGFEComponentTransferElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGFEComponentTransferElement",
    "desc": "The  interface corresponds to the [<feComponentTransfer>] element.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      SVGElement\n    \n  \n  \n    \n    \n      SVGFEComponentTransferElement\n    \n  ",
    "members": []
  },
  "SVGFECompositeElement": {
    "name": "SVGFECompositeElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGFECompositeElement\"><code>SVGFECompositeElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGFECompositeElement",
    "desc": "The  interface corresponds to the [<feComposite>] element.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      SVGElement\n    \n  \n  \n    \n    \n      SVGFECompositeElement\n    \n  ",
    "members": []
  },
  "SVGFEConvolveMatrixElement": {
    "name": "SVGFEConvolveMatrixElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGFEConvolveMatrixElement\"><code>SVGFEConvolveMatrixElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGFEConvolveMatrixElement",
    "desc": "The  interface corresponds to the [<feConvolveMatrix>] element.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      SVGElement\n    \n  \n  \n    \n    \n      SVGFEConvolveMatrixElement\n    \n  ",
    "members": []
  },
  "SVGFEDiffuseLightingElement": {
    "name": "SVGFEDiffuseLightingElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGFEDiffuseLightingElement\"><code>SVGFEDiffuseLightingElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGFEDiffuseLightingElement",
    "desc": "The  interface corresponds to the [<feDiffuseLighting>] element.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      SVGElement\n    \n  \n  \n    \n    \n      SVGFEDiffuseLightingElement\n    \n  ",
    "members": []
  },
  "SVGFEDisplacementMapElement": {
    "name": "SVGFEDisplacementMapElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGFEDisplacementMapElement\"><code>SVGFEDisplacementMapElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGFEDisplacementMapElement",
    "desc": "The  interface corresponds to the [<feDisplacementMap>] element.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      SVGElement\n    \n  \n  \n    \n    \n      SVGFEDisplacementMapElement\n    \n  ",
    "members": []
  },
  "SVGFEDistantLightElement": {
    "name": "SVGFEDistantLightElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGFEDistantLightElement\"><code>SVGFEDistantLightElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGFEDistantLightElement",
    "desc": "The  interface corresponds to the [<feDistantLight>] element.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      SVGElement\n    \n  \n  \n    \n    \n      SVGFEDistantLightElement\n    \n  ",
    "members": []
  },
  "SVGFEDropShadowElement": {
    "name": "SVGFEDropShadowElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGFEDropShadowElement\"><code>SVGFEDropShadowElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGFEDropShadowElement",
    "desc": "The  interface corresponds to the [<feDropShadow>] element.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      SVGElement\n    \n  \n  \n    \n    \n      SVGFEDropShadowElement\n    \n  ",
    "members": []
  },
  "SVGFEFloodElement": {
    "name": "SVGFEFloodElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGFEFloodElement\"><code>SVGFEFloodElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGFEFloodElement",
    "desc": "The  interface corresponds to the [<feFlood>] element.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      SVGElement\n    \n  \n  \n    \n    \n      SVGFEFloodElement\n    \n  ",
    "members": []
  },
  "SVGFEFuncAElement": {
    "name": "SVGFEFuncAElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGFEFuncAElement\"><code>SVGFEFuncAElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGFEFuncAElement",
    "desc": "The  interface corresponds to the [<feFuncA>] element.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      SVGElement\n    \n  \n  \n    \n    \n      SVGComponentTransferFunctionElement\n    \n  \n  \n    \n    \n      SVGFEFuncAElement\n    \n  ",
    "members": []
  },
  "SVGFEFuncBElement": {
    "name": "SVGFEFuncBElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGFEFuncBElement\"><code>SVGFEFuncBElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGFEFuncBElement",
    "desc": "The  interface corresponds to the [<feFuncB>] element.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      SVGElement\n    \n  \n  \n    \n    \n      SVGComponentTransferFunctionElement\n    \n  \n  \n    \n    \n      SVGFEFuncBElement\n    \n  ",
    "members": []
  },
  "SVGFEFuncGElement": {
    "name": "SVGFEFuncGElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGFEFuncGElement\"><code>SVGFEFuncGElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGFEFuncGElement",
    "desc": "The  interface corresponds to the [<feFuncG>] element.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      SVGElement\n    \n  \n  \n    \n    \n      SVGComponentTransferFunctionElement\n    \n  \n  \n    \n    \n      SVGFEFuncGElement\n    \n  ",
    "members": []
  },
  "SVGFEFuncRElement": {
    "name": "SVGFEFuncRElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGFEFuncRElement\"><code>SVGFEFuncRElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGFEFuncRElement",
    "desc": "The  interface corresponds to the [<feFuncR>] element.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      SVGElement\n    \n  \n  \n    \n    \n      SVGComponentTransferFunctionElement\n    \n  \n  \n    \n    \n      SVGFEFuncRElement\n    \n  ",
    "members": []
  },
  "SVGFEGaussianBlurElement": {
    "name": "SVGFEGaussianBlurElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGFEGaussianBlurElement\"><code>SVGFEGaussianBlurElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGFEGaussianBlurElement",
    "desc": "The  interface corresponds to the [<feGaussianBlur>] element.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      SVGElement\n    \n  \n  \n    \n    \n      SVGFEGaussianBlurElement\n    \n  ",
    "members": []
  },
  "SVGFEImageElement": {
    "name": "SVGFEImageElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGFEImageElement\"><code>SVGFEImageElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGFEImageElement",
    "desc": "The  interface corresponds to the [<feImage>] element.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      SVGElement\n    \n  \n  \n    \n    \n      SVGFEImageElement\n    \n  ",
    "members": []
  },
  "SVGFEMergeElement": {
    "name": "SVGFEMergeElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGFEMergeElement\"><code>SVGFEMergeElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGFEMergeElement",
    "desc": "The  interface corresponds to the [<feMerge>] element.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      SVGElement\n    \n  \n  \n    \n    \n      SVGFEMergeElement\n    \n  ",
    "members": []
  },
  "SVGFEMergeNodeElement": {
    "name": "SVGFEMergeNodeElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGFEMergeNodeElement\"><code>SVGFEMergeNodeElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGFEMergeNodeElement",
    "desc": "The  interface corresponds to the [<feMergeNode>] element.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      SVGElement\n    \n  \n  \n    \n    \n      SVGFEMergeNodeElement\n    \n  ",
    "members": []
  },
  "SVGFEMorphologyElement": {
    "name": "SVGFEMorphologyElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGFEMorphologyElement\"><code>SVGFEMorphologyElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGFEMorphologyElement",
    "desc": "The  interface corresponds to the [<feMorphology>] element.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      SVGElement\n    \n  \n  \n    \n    \n      SVGFEMorphologyElement\n    \n  ",
    "members": []
  },
  "SVGFEOffsetElement": {
    "name": "SVGFEOffsetElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGFEOffsetElement\"><code>SVGFEOffsetElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGFEOffsetElement",
    "desc": "The  interface corresponds to the [<feOffset>] element.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      SVGElement\n    \n  \n  \n    \n    \n      SVGFEOffsetElement\n    \n  ",
    "members": []
  },
  "SVGFEPointLightElement": {
    "name": "SVGFEPointLightElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGFEPointLightElement\"><code>SVGFEPointLightElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGFEPointLightElement",
    "desc": "The  interface corresponds to the [<fePointLight>] element.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      SVGElement\n    \n  \n  \n    \n    \n      SVGFEPointLightElement\n    \n  ",
    "members": []
  },
  "SVGFESpecularLightingElement": {
    "name": "SVGFESpecularLightingElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGFESpecularLightingElement\"><code>SVGFESpecularLightingElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGFESpecularLightingElement",
    "desc": "The  interface corresponds to the [<feSpecularLighting>] element.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      SVGElement\n    \n  \n  \n    \n    \n      SVGFESpecularLightingElement\n    \n  ",
    "members": []
  },
  "SVGFESpotLightElement": {
    "name": "SVGFESpotLightElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGFESpotLightElement\"><code>SVGFESpotLightElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGFESpotLightElement",
    "desc": "The  interface corresponds to the [<feSpotLight>] element.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      SVGElement\n    \n  \n  \n    \n    \n      SVGFESpotLightElement\n    \n  ",
    "members": []
  },
  "SVGFETileElement": {
    "name": "SVGFETileElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGFETileElement\"><code>SVGFETileElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGFETileElement",
    "desc": "The  interface corresponds to the [<feTile>] element.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      SVGElement\n    \n  \n  \n    \n    \n      SVGFETileElement\n    \n  ",
    "members": []
  },
  "SVGFETurbulenceElement": {
    "name": "SVGFETurbulenceElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGFETurbulenceElement\"><code>SVGFETurbulenceElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGFETurbulenceElement",
    "desc": "The  interface corresponds to the [<feTurbulence>] element.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      SVGElement\n    \n  \n  \n    \n    \n      SVGFETurbulenceElement\n    \n  ",
    "members": []
  },
  "SVGFilterElement": {
    "name": "SVGFilterElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGFilterElement\"><code>SVGFilterElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGFilterElement",
    "desc": "The  interface provides access to the properties of [<filter>] elements, as well as methods to manipulate them.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      SVGElement\n    \n  \n  \n    \n    \n      SVGFilterElement\n    \n  ",
    "members": []
  },
  "SVGFontElement": {
    "name": "SVGFontElement",
    "experimental": false,
    "deprecated": true,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGFontElement\"><code>SVGFontElement</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGFontElement",
    "desc": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.\nThe  interface corresponds to the [<font>] elements.\nObject-oriented access to the attributes of the [<font>] element via the SVG DOM is not possible.",
    "members": []
  },
  "SVGFontFaceElement": {
    "name": "SVGFontFaceElement",
    "experimental": false,
    "deprecated": true,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGFontFaceElement\"><code>SVGFontFaceElement</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGFontFaceElement",
    "desc": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.\nThe  interface corresponds to the [<font-face>] elements.\nObject-oriented access to the attributes of the [<font-face>] element via the SVG DOM is not possible.",
    "members": []
  },
  "SVGFontFaceFormatElement": {
    "name": "SVGFontFaceFormatElement",
    "experimental": false,
    "deprecated": true,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGFontFaceFormatElement\"><code>SVGFontFaceFormatElement</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGFontFaceFormatElement",
    "desc": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.\nThe  interface corresponds to the [<font-face-format>] elements.\nObject-oriented access to the attributes of the [<font-face-format>] element via the SVG DOM is not possible.",
    "members": []
  },
  "SVGFontFaceNameElement": {
    "name": "SVGFontFaceNameElement",
    "experimental": false,
    "deprecated": true,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGFontFaceNameElement\"><code>SVGFontFaceNameElement</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGFontFaceNameElement",
    "desc": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.\nThe  interface corresponds to the [<font-face-name>] elements.\nObject-oriented access to the attributes of the [<font-face-name>] element via the SVG DOM is not possible.",
    "members": []
  },
  "SVGFontFaceSrcElement": {
    "name": "SVGFontFaceSrcElement",
    "experimental": false,
    "deprecated": true,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGFontFaceSrcElement\"><code>SVGFontFaceSrcElement</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGFontFaceSrcElement",
    "desc": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.\nThe  interface corresponds to the [<font-face-src>] elements.\nObject-oriented access to the attributes of the [<font-face-src>] element via the SVG DOM is not possible.",
    "members": []
  },
  "SVGFontFaceUriElement": {
    "name": "SVGFontFaceUriElement",
    "experimental": false,
    "deprecated": true,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGFontFaceUriElement\"><code>SVGFontFaceUriElement</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGFontFaceUriElement",
    "desc": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.\nThe  interface corresponds to the [<font-face-uri>] elements.\nObject-oriented access to the attributes of the [<font-face-uri>] element via the SVG DOM is not possible.",
    "members": []
  },
  "SVGForeignObjectElement": {
    "name": "SVGForeignObjectElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGForeignObjectElement\"><code>SVGForeignObjectElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGForeignObjectElement",
    "desc": "The  interface provides access to the properties of [<foreignObject>] elements, as well as methods to manipulate them.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      SVGElement\n    \n  \n  \n    \n    \n      SVGGraphicsElement\n    \n  \n  \n    \n    \n      SVGForeignObjectElement\n    \n  ",
    "members": []
  },
  "SVGGElement": {
    "name": "SVGGElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGGElement\"><code>SVGGElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGGElement",
    "desc": "The  interface corresponds to the [<g>] element.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      SVGElement\n    \n  \n  \n    \n    \n      SVGGraphicsElement\n    \n  \n  \n    \n    \n      SVGGElement\n    \n  ",
    "members": []
  },
  "SVGGeometryElement": {
    "name": "SVGGeometryElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGGeometryElement\"><code>SVGGeometryElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGGeometryElement",
    "desc": "The  interface represents SVG elements whose rendering is defined by geometry with an equivalent path, and which can be filled and stroked. This includes paths and the basic shapes.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      SVGElement\n    \n  \n  \n    \n    \n      SVGGraphicsElement\n    \n  \n  \n    \n    \n      SVGGeometryElement\n    \n  ",
    "members": []
  },
  "SVGGlyphElement": {
    "name": "SVGGlyphElement",
    "experimental": false,
    "deprecated": true,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGGlyphElement\"><code>SVGGlyphElement</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGGlyphElement",
    "desc": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.\nThe  interface corresponds to the [<glyph>] element.\nObject-oriented access to the attributes of the [<glyph>] element via the SVG DOM is not possible.\n\n  Warning: This interface was removed in the SVG 2 specification.\n",
    "members": []
  },
  "SVGGlyphRefElement": {
    "name": "SVGGlyphRefElement",
    "experimental": false,
    "deprecated": true,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGGlyphRefElement\"><code>SVGGlyphRefElement</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGGlyphRefElement",
    "desc": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.\nThe  interface corresponds to the [<glyphRef>] elements.",
    "members": []
  },
  "SVGGradientElement": {
    "name": "SVGGradientElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGGradientElement\"><code>SVGGradientElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGGradientElement",
    "desc": "The [SVGGradient] interface is a base interface used by [SVGLinearGradientElement] and [SVGRadialGradientElement].\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      SVGElement\n    \n  \n  \n    \n    \n      SVGGradientElement\n    \n  ",
    "members": []
  },
  "SVGGraphicsElement": {
    "name": "SVGGraphicsElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGGraphicsElement\"><code>SVGGraphicsElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGGraphicsElement",
    "desc": "The  interface represents SVG elements whose primary purpose is to directly render graphics into a group.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      SVGElement\n    \n  \n  \n    \n    \n      SVGGraphicsElement\n    \n  ",
    "members": []
  },
  "SVGHKernElement": {
    "name": "SVGHKernElement",
    "experimental": false,
    "deprecated": true,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGHKernElement\"><code>SVGHKernElement</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGHKernElement",
    "desc": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.\nThe  interface corresponds to the [<hkern>] elements.\nObject-oriented access to the attributes of the [<hkern>] element via the SVG DOM is not possible.",
    "members": []
  },
  "SVGImageElement": {
    "name": "SVGImageElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGImageElement\"><code>SVGImageElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGImageElement",
    "desc": "The  interface corresponds to the [<image>] element.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      SVGElement\n    \n  \n  \n    \n    \n      SVGGraphicsElement\n    \n  \n  \n    \n    \n      SVGImageElement\n    \n  ",
    "members": []
  },
  "SVGLength": {
    "name": "SVGLength",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGLength\"><code>SVGLength</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGLength",
    "members": []
  },
  "SVGLengthList": {
    "name": "SVGLengthList",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGLengthList\"><code>SVGLengthList</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGLengthList",
    "members": []
  },
  "SVGLinearGradientElement": {
    "name": "SVGLinearGradientElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGLinearGradientElement\"><code>SVGLinearGradientElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGLinearGradientElement",
    "desc": "The  interface corresponds to the [<linearGradient>] element.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      SVGElement\n    \n  \n  \n    \n    \n      SVGGradientElement\n    \n  \n  \n    \n    \n      SVGLinearGradientElement\n    \n  ",
    "members": []
  },
  "SVGLineElement": {
    "name": "SVGLineElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGLineElement\"><code>SVGLineElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGLineElement",
    "desc": "The  interface provides access to the properties of [<line>] elements, as well as methods to manipulate them.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      SVGElement\n    \n  \n  \n    \n    \n      SVGGraphicsElement\n    \n  \n  \n    \n    \n      SVGGeometryElement\n    \n  \n  \n    \n    \n      SVGLineElement\n    \n  ",
    "members": []
  },
  "SVGMarkerElement": {
    "name": "SVGMarkerElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGMarkerElement\"><code>SVGMarkerElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGMarkerElement",
    "desc": "The  interface provides access to the properties of [<marker>] elements, as well as methods to manipulate them. The [<marker>] element defines the graphics used for drawing marks on a shape.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      SVGElement\n    \n  \n  \n    \n    \n      SVGMarkerElement\n    \n  \nThe following properties and methods all return, or act on the attributes of the [<marker>] element represented by .",
    "members": []
  },
  "SVGMaskElement": {
    "name": "SVGMaskElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGMaskElement\"><code>SVGMaskElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGMaskElement",
    "desc": "The  interface provides access to the properties of [<mask>] elements, as well as methods to manipulate them.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      SVGElement\n    \n  \n  \n    \n    \n      SVGMaskElement\n    \n  ",
    "members": []
  },
  "SVGMatrix": {
    "name": "SVGMatrix",
    "experimental": false,
    "deprecated": true,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGMatrix\"><code>SVGMatrix</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGMatrix",
    "desc": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.\nMany of SVG's graphics operations utilize 2x3 matrices of the form:\n[a c e]\n[b d f]\n\nwhich, when expanded into a 3x3 matrix for the purposes of matrix arithmetic, become:\n[a c e]\n[b d f]\n[0 0 1]\n\nAn  object can be designated as read only, which means that attempts to modify the object will result in an exception being thrown.\n does not have a public constructor. You can create an  using the [createSVGMatrix()] method of [SVGSVGElement].\n\n  Warning: SVG 2 replaced the  interface by the more general [DOMMatrix] and [DOMMatrixReadOnly] interfaces.\n",
    "members": []
  },
  "SVGMetadataElement": {
    "name": "SVGMetadataElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGMetadataElement\"><code>SVGMetadataElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGMetadataElement",
    "desc": "The  interface corresponds to the [<metadata>] element.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      SVGElement\n    \n  \n  \n    \n    \n      SVGMetadataElement\n    \n  ",
    "members": []
  },
  "SVGMissingGlyphElement": {
    "name": "SVGMissingGlyphElement",
    "experimental": false,
    "deprecated": true,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGMissingGlyphElement\"><code>SVGMissingGlyphElement</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGMissingGlyphElement",
    "desc": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.\nThe  interface corresponds to the [<missing-glyph>] elements.\nObject-oriented access to the attributes of the [<missing-glyph>] element via the SVG DOM is not possible.",
    "members": []
  },
  "SVGMPathElement": {
    "name": "SVGMPathElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGMPathElement\"><code>SVGMPathElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGMPathElement",
    "desc": "The  interface corresponds to the [<mpath>] element.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      SVGElement\n    \n  \n  \n    \n    \n      SVGMPathElement\n    \n  ",
    "members": []
  },
  "SVGNumber": {
    "name": "SVGNumber",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGNumber\"><code>SVGNumber</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGNumber",
    "desc": "The  interface corresponds to the [<number>] basic data type.\nAn  object can be designated as read only, which means that attempts to modify the object will result in an exception being thrown.",
    "members": []
  },
  "SVGNumberList": {
    "name": "SVGNumberList",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGNumberList\"><code>SVGNumberList</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGNumberList",
    "members": []
  },
  "SVGPathElement": {
    "name": "SVGPathElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGPathElement\"><code>SVGPathElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGPathElement",
    "desc": "The  interface corresponds to the [<path>] element.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      SVGElement\n    \n  \n  \n    \n    \n      SVGGraphicsElement\n    \n  \n  \n    \n    \n      SVGGeometryElement\n    \n  \n  \n    \n    \n      SVGPathElement\n    \n  \n\n  Note: In SVG 2 the [getPathSegAtLength()] and [createSVGPathSeg*] methods were removed and the [pathLength] property and the [getTotalLength()] and [getPointAtLength()] methods were moved to [SVGGeometryElement].\n",
    "members": []
  },
  "SVGPatternElement": {
    "name": "SVGPatternElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGPatternElement\"><code>SVGPatternElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGPatternElement",
    "desc": "The  interface corresponds to the [<pattern>] element.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      SVGElement\n    \n  \n  \n    \n    \n      SVGPatternElement\n    \n  ",
    "members": []
  },
  "SVGPoint": {
    "name": "SVGPoint",
    "experimental": false,
    "deprecated": true,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGPoint\"><code>SVGPoint</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGPoint",
    "desc": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.\n\n  \n    Warning:  is deprecated.\n    Use [DOMPoint] or [DOMPointReadOnly] instead.\n  \n\nAn  represents a 2D or 3D point in the SVG coordinate system.",
    "members": []
  },
  "SVGPointList": {
    "name": "SVGPointList",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGPointList\"><code>SVGPointList</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGPointList",
    "desc": "The  interface represents a list of [SVGPoint] objects.\nAn  can be designated as read-only, which means that attempts to modify the object will result in an exception being thrown.",
    "members": []
  },
  "SVGPolygonElement": {
    "name": "SVGPolygonElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGPolygonElement\"><code>SVGPolygonElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGPolygonElement",
    "desc": "The  interface provides access to the properties of [<polygon>] elements, as well as methods to manipulate them.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      SVGElement\n    \n  \n  \n    \n    \n      SVGGraphicsElement\n    \n  \n  \n    \n    \n      SVGGeometryElement\n    \n  \n  \n    \n    \n      SVGPolygonElement\n    \n  ",
    "members": []
  },
  "SVGPolylineElement": {
    "name": "SVGPolylineElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGPolylineElement\"><code>SVGPolylineElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGPolylineElement",
    "desc": "The  interface provides access to the properties of [<polyline>] elements, as well as methods to manipulate them.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      SVGElement\n    \n  \n  \n    \n    \n      SVGGraphicsElement\n    \n  \n  \n    \n    \n      SVGGeometryElement\n    \n  \n  \n    \n    \n      SVGPolylineElement\n    \n  ",
    "members": []
  },
  "SVGPreserveAspectRatio": {
    "name": "SVGPreserveAspectRatio",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGPreserveAspectRatio\"><code>SVGPreserveAspectRatio</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGPreserveAspectRatio",
    "members": []
  },
  "SVGRadialGradientElement": {
    "name": "SVGRadialGradientElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGRadialGradientElement\"><code>SVGRadialGradientElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGRadialGradientElement",
    "desc": "The  interface corresponds to the [<RadialGradient>] element.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      SVGElement\n    \n  \n  \n    \n    \n      SVGGradientElement\n    \n  \n  \n    \n    \n      SVGRadialGradientElement\n    \n  ",
    "members": []
  },
  "SVGRect": {
    "name": "SVGRect",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGRect\"><code>SVGRect</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGRect",
    "desc": "The  represents a rectangle. Rectangles consist of an [x] and [y] coordinate pair identifying a minimum [x] value, a minimum [y] value, and a [width] and [height], which are constrained to be non-negative.\nAn  object can be designated as read only, which means that attempts to modify the object will result in an exception being thrown.",
    "members": []
  },
  "SVGRectElement": {
    "name": "SVGRectElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGRectElement\"><code>SVGRectElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGRectElement",
    "desc": "The  interface provides access to the properties of [<rect>] elements, as well as methods to manipulate them.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      SVGElement\n    \n  \n  \n    \n    \n      SVGGraphicsElement\n    \n  \n  \n    \n    \n      SVGGeometryElement\n    \n  \n  \n    \n    \n      SVGRectElement\n    \n  ",
    "members": []
  },
  "SVGRenderingIntent": {
    "name": "SVGRenderingIntent",
    "experimental": false,
    "deprecated": true,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGRenderingIntent\"><code>SVGRenderingIntent</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGRenderingIntent",
    "desc": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.\nThe  interface defines the enumerated list of possible values for [rendering-intent] attributes or descriptors.\n\n  Warning: This interface was removed in the SVG 2 specification.\n",
    "members": []
  },
  "SVGScriptElement": {
    "name": "SVGScriptElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGScriptElement\"><code>SVGScriptElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGScriptElement",
    "desc": "The  interface corresponds to the SVG [<script>] element.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      SVGElement\n    \n  \n  \n    \n    \n      SVGScriptElement\n    \n  ",
    "members": []
  },
  "SVGSetElement": {
    "name": "SVGSetElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGSetElement\"><code>SVGSetElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGSetElement",
    "desc": "The  interface corresponds to the [<set>] element.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      SVGElement\n    \n  \n  \n    \n    \n      SVGAnimationElement\n    \n  \n  \n    \n    \n      SVGSetElement\n    \n  ",
    "members": []
  },
  "SVGStopElement": {
    "name": "SVGStopElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGStopElement\"><code>SVGStopElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGStopElement",
    "desc": "The  interface corresponds to the [<stop>] element.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      SVGElement\n    \n  \n  \n    \n    \n      SVGStopElement\n    \n  ",
    "members": []
  },
  "SVGStringList": {
    "name": "SVGStringList",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGStringList\"><code>SVGStringList</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGStringList",
    "members": []
  },
  "SVGStyleElement": {
    "name": "SVGStyleElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGStyleElement\"><code>SVGStyleElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGStyleElement",
    "members": []
  },
  "SVGSVGElement": {
    "name": "SVGSVGElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGSVGElement\"><code>SVGSVGElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGSVGElement",
    "desc": "The  interface provides access to the properties of [<svg>] elements, as well as methods to manipulate them. This interface contains also various miscellaneous commonly-used utility methods, such as matrix operations and the ability to control the time of redraw on visual rendering devices.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      SVGElement\n    \n  \n  \n    \n    \n      SVGGraphicsElement\n    \n  \n  \n    \n    \n      SVGSVGElement\n    \n  ",
    "members": []
  },
  "SVGSwitchElement": {
    "name": "SVGSwitchElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGSwitchElement\"><code>SVGSwitchElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGSwitchElement",
    "desc": "The  interface corresponds to the [<switch>] element.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      SVGElement\n    \n  \n  \n    \n    \n      SVGGraphicsElement\n    \n  \n  \n    \n    \n      SVGSwitchElement\n    \n  ",
    "members": []
  },
  "SVGSymbolElement": {
    "name": "SVGSymbolElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGSymbolElement\"><code>SVGSymbolElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGSymbolElement",
    "desc": "The  interface corresponds to the [<symbol>] element.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      SVGElement\n    \n  \n  \n    \n    \n      SVGGraphicsElement\n    \n  \n  \n    \n    \n      SVGSymbolElement\n    \n  ",
    "members": []
  },
  "SVGTextContentElement": {
    "name": "SVGTextContentElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGTextContentElement\"><code>SVGTextContentElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGTextContentElement",
    "desc": "The  interface is implemented by elements that support rendering child text content. It is inherited by various text-related interfaces, such as [SVGTextElement], [SVGTSpanElement], [SVGTRefElement], [SVGAltGlyphElement] and [SVGTextPathElement].\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      SVGElement\n    \n  \n  \n    \n    \n      SVGGraphicsElement\n    \n  \n  \n    \n    \n      SVGTextContentElement\n    \n  ",
    "members": []
  },
  "SVGTextElement": {
    "name": "SVGTextElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGTextElement\"><code>SVGTextElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGTextElement",
    "desc": "The  interface corresponds to the [<text>] elements.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      SVGElement\n    \n  \n  \n    \n    \n      SVGGraphicsElement\n    \n  \n  \n    \n    \n      SVGTextContentElement\n    \n  \n  \n    \n    \n      SVGTextPositioningElement\n    \n  \n  \n    \n    \n      SVGTextElement\n    \n  ",
    "members": []
  },
  "SVGTextPathElement": {
    "name": "SVGTextPathElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGTextPathElement\"><code>SVGTextPathElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGTextPathElement",
    "desc": "The  interface corresponds to the [<textPath>] element.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      SVGElement\n    \n  \n  \n    \n    \n      SVGGraphicsElement\n    \n  \n  \n    \n    \n      SVGTextContentElement\n    \n  \n  \n    \n    \n      SVGTextPathElement\n    \n  ",
    "members": []
  },
  "SVGTextPositioningElement": {
    "name": "SVGTextPositioningElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGTextPositioningElement\"><code>SVGTextPositioningElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGTextPositioningElement",
    "desc": "The  interface is implemented by elements that support attributes that position individual text glyphs. It is inherited by [SVGTextElement], [SVGTSpanElement], [SVGTRefElement] and [SVGAltGlyphElement].\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      SVGElement\n    \n  \n  \n    \n    \n      SVGGraphicsElement\n    \n  \n  \n    \n    \n      SVGTextContentElement\n    \n  \n  \n    \n    \n      SVGTextPositioningElement\n    \n  ",
    "members": []
  },
  "SVGTitleElement": {
    "name": "SVGTitleElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGTitleElement\"><code>SVGTitleElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGTitleElement",
    "desc": "The  interface corresponds to the [<title>] element.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      SVGElement\n    \n  \n  \n    \n    \n      SVGTitleElement\n    \n  ",
    "members": []
  },
  "SVGTransform": {
    "name": "SVGTransform",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGTransform\"><code>SVGTransform</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGTransform",
    "members": []
  },
  "SVGTransformList": {
    "name": "SVGTransformList",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGTransformList\"><code>SVGTransformList</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGTransformList",
    "members": []
  },
  "SVGTRefElement": {
    "name": "SVGTRefElement",
    "experimental": false,
    "deprecated": true,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGTRefElement\"><code>SVGTRefElement</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGTRefElement",
    "desc": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.\nThe  interface corresponds to the [<tref>] elements.\nObject-oriented access to the attributes of the [<tref>] element via the SVG DOM is not possible.",
    "members": []
  },
  "SVGTSpanElement": {
    "name": "SVGTSpanElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGTSpanElement\"><code>SVGTSpanElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGTSpanElement",
    "desc": "The  interface represents a [<tspan>] element.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      SVGElement\n    \n  \n  \n    \n    \n      SVGGraphicsElement\n    \n  \n  \n    \n    \n      SVGTextContentElement\n    \n  \n  \n    \n    \n      SVGTextPositioningElement\n    \n  \n  \n    \n    \n      SVGTSpanElement\n    \n  ",
    "members": []
  },
  "SVGUnitTypes": {
    "name": "SVGUnitTypes",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGUnitTypes\"><code>SVGUnitTypes</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGUnitTypes",
    "desc": "The  interface defines a commonly used set of constants used for reflecting [gradientUnits], [patternContentUnits] and other similar attributes.",
    "members": []
  },
  "SVGUseElement": {
    "name": "SVGUseElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGUseElement\"><code>SVGUseElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGUseElement",
    "members": []
  },
  "SVGViewElement": {
    "name": "SVGViewElement",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGViewElement\"><code>SVGViewElement</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGViewElement",
    "desc": "The  interface provides access to the properties of [<view>] elements, as well as methods to manipulate them.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Element\n    \n  \n  \n    \n    \n      SVGElement\n    \n  \n  \n    \n    \n      SVGViewElement\n    \n  ",
    "members": []
  },
  "SVGVKernElement": {
    "name": "SVGVKernElement",
    "experimental": false,
    "deprecated": true,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SVGVKernElement\"><code>SVGVKernElement</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/SVGVKernElement",
    "desc": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.\nThe  interface corresponds to the [<vkern>] elements.\nObject-oriented access to the attributes of the [<vkern>] element via the SVG DOM is not possible.",
    "members": []
  },
  "SyncEvent": {
    "name": "SyncEvent",
    "experimental": false,
    "deprecated": false,
    "standard": false,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SyncEvent\"><code>SyncEvent</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/SyncEvent",
    "desc": "Non-standard: This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.\nThe  interface represents a sync action that is dispatched on the [ServiceWorkerGlobalScope] of a ServiceWorker.\nThis interface inherits from the [ExtendableEvent] interface.\n  \n    \n    \n      Event\n    \n  \n  \n    \n    \n      ExtendableEvent\n    \n  \n  \n    \n    \n      SyncEvent\n    \n  ",
    "members": []
  },
  "SyncManager": {
    "name": "SyncManager",
    "experimental": false,
    "deprecated": false,
    "standard": false,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/SyncManager\"><code>SyncManager</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/SyncManager",
    "desc": "The  interface of the ServiceWorker API provides an interface for registering and listing sync registrations.",
    "members": []
  },
  "TaskAttributionTiming": {
    "name": "TaskAttributionTiming",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/TaskAttributionTiming\"><code>TaskAttributionTiming</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/TaskAttributionTiming",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  interface of the Long Tasks API returns information about the work involved in a long task and its associate frame context. The frame context, also called the container, is the iframe, embed or object that is being implicated, on the whole, for a long task.\n  \n    \n    \n      PerformanceEntry\n    \n  \n  \n    \n    \n      TaskAttributionTiming\n    \n  ",
    "members": []
  },
  "Text": {
    "name": "Text",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/Text\"><code>Text</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/Text",
    "desc": "The  interface represents a text [node] in a DOM tree.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      CharacterData\n    \n  \n  \n    \n    \n      Text\n    \n  \nTo understand what a text node is, consider the following document:\n[<html class=\"e\"><head><title>Aliens?</title></head>\n <body>Why yes.\n</body></html>\n]\nIn that document, there are three text nodes, with the following contents:\n\n  \"[Aliens?]\" (the contents of the [title] element)\n  \"[\\n]\" (after the [</head>] end tag, a newline followed by a space)\n  \"[Why yes.\\n]\" (the contents of the [body] element)\n\nEach of those text nodes is an object that has the properties and methods documented in this article.",
    "members": []
  },
  "TextDecoder": {
    "name": "TextDecoder",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/TextDecoder\"><code>TextDecoder</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/TextDecoder",
    "desc": "The  interface represents a decoder for a specific text encoding, such as [UTF-8], [ISO-8859-2], [KOI8-R], [GBK], etc. A decoder takes a stream of bytes as input and emits a stream of code points.\n  Note: This feature is available in Web Workers\n",
    "members": []
  },
  "TextDecoderStream": {
    "name": "TextDecoderStream",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/TextDecoderStream\"><code>TextDecoderStream</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/TextDecoderStream",
    "desc": "The  interface of the Encoding API converts a stream of strings into bytes in the UTF-8 encoding. It is the streaming equivalent of [TextDecoder].",
    "members": []
  },
  "TextEncoder": {
    "name": "TextEncoder",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/TextEncoder\"><code>TextEncoder</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/TextEncoder",
    "desc": "The  interface takes a stream of code points as input and emits a stream of UTF-8 bytes.\n  Note: This feature is available in Web Workers\n",
    "members": []
  },
  "TextEncoderStream": {
    "name": "TextEncoderStream",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/TextEncoderStream\"><code>TextEncoderStream</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/TextEncoderStream",
    "desc": "The  interface of the Encoding API converts a stream of strings into bytes in the UTF-8 encoding. It is the streaming equivalent of [TextEncoder].",
    "members": []
  },
  "TextMetrics": {
    "name": "TextMetrics",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/TextMetrics\"><code>TextMetrics</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/TextMetrics",
    "desc": "The  interface represents the dimensions of a piece of text in the canvas; a  instance can be retrieved using the [CanvasRenderingContext2D.measureText()] method.",
    "members": []
  },
  "TextTrack": {
    "name": "TextTrack",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/TextTrack\"><code>TextTrack</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/TextTrack",
    "desc": "The  interface—part of the API for handling WebVTT (text tracks on media presentations)—describes and controls the text track associated with a particular [<track>] element.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      TextTrack\n    \n  ",
    "members": []
  },
  "TextTrackCue": {
    "name": "TextTrackCue",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/TextTrackCue\"><code>TextTrackCue</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/TextTrackCue",
    "desc": " is an abstract class which is used as the basis for the various derived cue types, such as [VTTCue]; you will instead work with those derived types. These cues represent strings of text presented for some duration of time during the performance of a [TextTrack]. The cue includes the start time (the time at which the text will be displayed) and the end time (the time at which it will be removed from the display), as well as other information.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      TextTrackCue\n    \n  ",
    "members": []
  },
  "TextTrackCueList": {
    "name": "TextTrackCueList",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/TextTrackCueList\"><code>TextTrackCueList</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/TextTrackCueList",
    "desc": "The  array-like object represents a dynamically updating list of [TextTrackCue] objects.\nThis interface has no constructor. Retrieve an instance of this object with [TextTrack.cues] which returns all of the cues in a [TextTrack] object.",
    "members": []
  },
  "TextTrackList": {
    "name": "TextTrackList",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/TextTrackList\"><code>TextTrackList</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/TextTrackList",
    "desc": "The  interface is used to represent a list of the text tracks defined by the [<track>] element, with each track represented by a separate [textTrack] object in the list.\nRetrieve an instance of this object with the [textTracks] property of an [HTMLMediaElement] object.\nFor a given [HTMLMediaElement] object media, the individual tracks can be accessed using:\n\n  [media.TextTracks[n]], to get the nth text track from the object’s list of text tracks\n  the [media.textTracks].[getTrackById()] method\n\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      TextTrackList\n    \n  ",
    "members": []
  },
  "TimeEvent": {
    "name": "TimeEvent",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/TimeEvent\"><code>TimeEvent</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/TimeEvent",
    "desc": "The  interface, a part of SVG SMIL animation, provides specific contextual information associated with Time events.\n  \n    \n    \n      Event\n    \n  \n  \n    \n    \n      TimeEvent\n    \n  ",
    "members": []
  },
  "TimeRanges": {
    "name": "TimeRanges",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/TimeRanges\"><code>TimeRanges</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/TimeRanges",
    "desc": "When loading a media resource for use by an [<audio>] or [<video>] element, the  interface is used for representing the time ranges of the media resource that have been buffered, the time ranges that have been played, and the time ranges that are seekable.\nA  object includes one or more ranges of time, each specified by a starting time offset and an ending time offset. You reference each time range by using the [start()] and [end()] methods, passing the index number of the time range you want to retrieve.",
    "members": []
  },
  "Touch": {
    "name": "Touch",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/Touch\"><code>Touch</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/Touch",
    "desc": "The  interface represents a single contact point on a touch-sensitive device. The contact point is commonly a finger or stylus and the device may be a touchscreen or trackpad.\nThe [Touch.radiusX], [Touch.radiusY], and [Touch.rotationAngle] describe the area of contact between the user and the screen, the touch area. This can be helpful when dealing with imprecise pointing devices such as fingers. These values are set to describe an ellipse that as closely as possible matches the entire area of contact (such as the user's fingertip). \n    \n\n\n  Note: Many of the properties' values are hardware-dependent; for example, if the device doesn't have a way to detect the amount of pressure placed on the surface, the [force] value will always be 0. This may also be the case for [radiusX] and [radiusY]; if the hardware reports only a single point, these values will be 1.\n",
    "members": []
  },
  "TouchEvent": {
    "name": "TouchEvent",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/TouchEvent\"><code>TouchEvent</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/TouchEvent",
    "desc": "The  interface represents an [UIEvent] which is sent when the state of contacts with a touch-sensitive surface changes. This surface can be a touch screen or trackpad, for example. The event can describe one or more points of contact with the screen and includes support for detecting movement, addition and removal of contact points, and so forth.\nTouches are represented by the [Touch] object; each touch is described by a position, size and shape, amount of pressure, and target element. Lists of touches are represented by [TouchList] objects.\n  \n    \n    \n      Event\n    \n  \n  \n    \n    \n      UIEvent\n    \n  \n  \n    \n    \n      TouchEvent\n    \n  ",
    "members": []
  },
  "TouchList": {
    "name": "TouchList",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/TouchList\"><code>TouchList</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/TouchList",
    "desc": "The  interface represents a list of contact points on a touch surface. For example, if the user has three fingers on the touch surface (such as a screen or trackpad), the corresponding  object would have one [Touch] object for each finger, for a total of three entries.",
    "members": []
  },
  "TrackEvent": {
    "name": "TrackEvent",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/TrackEvent\"><code>TrackEvent</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/TrackEvent",
    "desc": "The  interface, which is part of the HTML DOM specification, is used for events which represent changes to a set of available tracks on an HTML media element; these events are [addtrack] and [removetrack].\nIt's important not to confuse  with the [RTCTrackEvent] interface, which is used for tracks which are part of an [RTCPeerConnection].\nEvents based on  are always sent to one of the media track list types:\n\n  Events involving video tracks are always sent to the [VideoTrackList] found in [HTMLMediaElement.videoTracks]\n  Events involving audio tracks are always sent to the [AudioTrackList] specified in [HTMLMediaElement.audioTracks]\n  Events affecting text tracks are sent to the [TextTrackList] object indicated by [HTMLMediaElement.textTracks].\n\n  \n    \n    \n      Event\n    \n  \n  \n    \n    \n      TrackEvent\n    \n  ",
    "members": []
  },
  "TransformStream": {
    "name": "TransformStream",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/TransformStream\"><code>TransformStream</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/TransformStream",
    "desc": "The  interface of the Streams API represents a set of transformable data.",
    "members": []
  },
  "TransformStreamDefaultController": {
    "name": "TransformStreamDefaultController",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/TransformStreamDefaultController\"><code>TransformStreamDefaultController</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/TransformStreamDefaultController",
    "desc": "The  interface of the Streams API provides methods to manipulate the associated [ReadableStream] and [WritableStream].\nWhen constructing a [TransformStream], the  is created. It therefore has no constructor. The way to get an instance of  is via the callback methods of [TransformStream.TransformStream()].",
    "members": []
  },
  "TransitionEvent": {
    "name": "TransitionEvent",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/TransitionEvent\"><code>TransitionEvent</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/TransitionEvent",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  interface represents events providing information related to transitions.\n  \n    \n    \n      Event\n    \n  \n  \n    \n    \n      TransitionEvent\n    \n  ",
    "members": []
  },
  "TreeWalker": {
    "name": "TreeWalker",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/TreeWalker\"><code>TreeWalker</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/TreeWalker",
    "desc": "The  object represents the nodes of a document subtree and a position within them.\nA  can be created using the [Document.createTreeWalker()] method.",
    "members": []
  },
  "TrustedHTML": {
    "name": "TrustedHTML",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/TrustedHTML\"><code>TrustedHTML</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/TrustedHTML",
    "desc": "The  interface of the [Trusted Types API] represents a string that a developer can insert into an injection sink that will render it as HTML. These objects are created via [TrustedTypePolicy.createHTML()] and therefore have no constructor.\nThe value of a TrustedHTML object is set when the object is created and cannot be changed by JavaScript as there is no setter exposed.",
    "members": []
  },
  "TrustedScript": {
    "name": "TrustedScript",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/TrustedScript\"><code>TrustedScript</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/TrustedScript",
    "desc": "The  interface of the [Trusted Types API] represents a string with an uncompiled script body that a developer can insert into an injection sink that might execute the script. These objects are created via [TrustedTypePolicy.createScript()] and therefore have no constructor.\nThe value of a TrustedScript object is set when the object is created and cannot be changed by JavaScript as there is no setter exposed.",
    "members": []
  },
  "TrustedScriptURL": {
    "name": "TrustedScriptURL",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/TrustedScriptURL\"><code>TrustedScriptURL</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/TrustedScriptURL",
    "desc": "The  interface of the [Trusted Types API] represents a string that a developer can insert into an injection sink that will parse it as a URL of an external script. These objects are created via [TrustedTypePolicy.createScriptURL()] and therefore have no constructor.\nThe value of a TrustedScriptURL object is set when the object is created and cannot be changed by JavaScript as there is no setter exposed.",
    "members": []
  },
  "TrustedTypePolicy": {
    "name": "TrustedTypePolicy",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/TrustedTypePolicy\"><code>TrustedTypePolicy</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/TrustedTypePolicy",
    "desc": "The  interface of the [Trusted Types API] defines a group of functions which create [TrustedType] objects.\nA  object is created by [TrustedTypePolicyFactory.createPolicy()] to define a policy for enforcing security rules on input. Therefore,  has no constructor.",
    "members": []
  },
  "TrustedTypePolicyFactory": {
    "name": "TrustedTypePolicyFactory",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/TrustedTypePolicyFactory\"><code>TrustedTypePolicyFactory</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/TrustedTypePolicyFactory",
    "desc": "The  interface of the [Trusted Types API] creates policies and allows the verification of Trusted Type objects against created policies.",
    "members": []
  },
  "UIEvent": {
    "name": "UIEvent",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/UIEvent\"><code>UIEvent</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/UIEvent",
    "desc": "The  interface represents simple user interface events.\n derives from [Event]. Although the [UIEvent.initUIEvent()] method is kept for backward compatibility, you should create a  object using the [UIEvent()] constructor.\nSeveral interfaces are direct or indirect descendants of this one: [MouseEvent], [TouchEvent], [FocusEvent], [KeyboardEvent], [WheelEvent], [InputEvent], and [CompositionEvent].\n  \n    \n    \n      Event\n    \n  \n  \n    \n    \n      UIEvent\n    \n  ",
    "members": []
  },
  "URL": {
    "name": "URL",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/URL\"><code>URL</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/URL",
    "desc": "The  interface is used to parse, construct, normalize, and encode URLs. It works by providing properties which allow you to easily read and modify the components of a URL.\nYou normally create a new  object by specifying the URL as a string when calling its constructor, or by providing a relative URL and a base URL. You can then easily read the parsed components of the URL or make changes to the URL.\nIf a browser doesn't yet support the [URL()] constructor, you can access a URL object using the [Window] interface's  property. Be sure to check to see if any of your target browsers require this to be prefixed.\n  Note: This feature is available in Web Workers\n",
    "members": []
  },
  "URLPattern": {
    "name": "URLPattern",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/URLPattern\"><code>URLPattern</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/URLPattern",
    "desc": "\n  The  interface matches URLs or parts of URLs against a pattern.\n  The pattern can contain capturing groups that extract parts of the matched URL.\n\n\n  More information about the syntax of patterns can be found on the API overview\n  page: URL Pattern API\n\n  Note: This feature is available in Web Workers\n",
    "members": []
  },
  "URLSearchParams": {
    "name": "URLSearchParams",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/URLSearchParams\"><code>URLSearchParams</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/URLSearchParams",
    "desc": "The  interface defines utility methods to work with the query string of a URL.\nAn object implementing  can directly be used in a [for...of] structure to iterate over key/value pairs in the same order as they appear in the query string, for example the following two lines are equivalent:\n[for (const [key, value] of mySearchParams) {}\nfor (const [key, value] of mySearchParams.entries()) {}\n]\n  Note: This feature is available in Web Workers\n",
    "members": []
  },
  "USB": {
    "name": "USB",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/USB\"><code>USB</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/USB",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  interface of the WebUSB API provides attributes and methods for finding and connecting USB devices from a web page.\nUse [navigator.usb] to get access to the  object.\nThe USB interface inherits from [EventTarget].\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      USB\n    \n  ",
    "members": []
  },
  "USBAlternateInterface": {
    "name": "USBAlternateInterface",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/USBAlternateInterface\"><code>USBAlternateInterface</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/USBAlternateInterface",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  interface of the WebUSB API provides information about a particular configuration of an interface provided by the USB device. An interface includes one or more alternate settings which can configure a set of endpoints based on the operating mode of the device.",
    "members": []
  },
  "USBConfiguration": {
    "name": "USBConfiguration",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/USBConfiguration\"><code>USBConfiguration</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/USBConfiguration",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  interface of the WebUSB API provides information about a particular configuration of a USB device and the interfaces that it supports.",
    "members": []
  },
  "USBConnectionEvent": {
    "name": "USBConnectionEvent",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/USBConnectionEvent\"><code>USBConnectionEvent</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/USBConnectionEvent",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  interface of the WebUSB API is the event type passed to [USB.onconnect] and [USB.ondisconnect] when the user agent detects that a new USB device has been connected or disconnected.\n  \n    \n    \n      Event\n    \n  \n  \n    \n    \n      USBConnectionEvent\n    \n  ",
    "members": []
  },
  "USBDevice": {
    "name": "USBDevice",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/USBDevice\"><code>USBDevice</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/USBDevice",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  interface of the WebUSB API provides access to metadata about a paired USB device and methods for controlling it.",
    "members": []
  },
  "USBEndpoint": {
    "name": "USBEndpoint",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/USBEndpoint\"><code>USBEndpoint</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/USBEndpoint",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  interface of the WebUSB API provides information about an endpoint provided by the USB device. An endpoint represents a unidirectional data stream into or out of a device.",
    "members": []
  },
  "USBInterface": {
    "name": "USBInterface",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/USBInterface\"><code>USBInterface</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/USBInterface",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  interface of the WebUSB API provides information about an interface provided by the USB device. An interface represents a feature of the device which implements a particular protocol and may contain endpoints for bidirectional communication.",
    "members": []
  },
  "USBInTransferResult": {
    "name": "USBInTransferResult",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/USBInTransferResult\"><code>USBInTransferResult</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/USBInTransferResult",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  interface of the WebUSB API provides the result from a call to the [transferIn()] and [controlTransferIn()] methods of the [USBDevice] interface. It represents the result from requesting a transfer of data from the USB device to the USB host.",
    "members": []
  },
  "USBIsochronousInTransferPacket": {
    "name": "USBIsochronousInTransferPacket",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/USBIsochronousInTransferPacket\"><code>USBIsochronousInTransferPacket</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/USBIsochronousInTransferPacket",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  interface of the WebUSB API is part of the response from a call to the [isochronousTransferIn()] method of the [USBDevice] interface. It represents the status of an individual packet from a request to transfer data from the USB device to the USB host over an isochronous endpoint.",
    "members": []
  },
  "USBIsochronousInTransferResult": {
    "name": "USBIsochronousInTransferResult",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/USBIsochronousInTransferResult\"><code>USBIsochronousInTransferResult</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/USBIsochronousInTransferResult",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  interface of the WebUSB API provides the result from a call to the [isochronousTransferIn()] method of the [USBDevice] interface. It represents the result from requesting a transfer of data from the USB device to the USB host.",
    "members": []
  },
  "USBIsochronousOutTransferPacket": {
    "name": "USBIsochronousOutTransferPacket",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/USBIsochronousOutTransferPacket\"><code>USBIsochronousOutTransferPacket</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/USBIsochronousOutTransferPacket",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  interface of the WebUSB API is part of the response from a call to the [isochronousTransferOut()] method of the [USBDevice] interface. It represents the status of an individual packet from a request to transfer data from the USB host to the USB device over an isochronous endpoint.",
    "members": []
  },
  "USBIsochronousOutTransferResult": {
    "name": "USBIsochronousOutTransferResult",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/USBIsochronousOutTransferResult\"><code>USBIsochronousOutTransferResult</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/USBIsochronousOutTransferResult",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  interface of the WebUSB API provides the result from a call to the [isochronousTransferOut()] method of the [USBDevice] interface. It represents the result from requesting a transfer of data from the USB host to the USB device.",
    "members": []
  },
  "USBOutTransferResult": {
    "name": "USBOutTransferResult",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/USBOutTransferResult\"><code>USBOutTransferResult</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/USBOutTransferResult",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  interface of the WebUSB API provides the result from a call to the [transferOut()] and [controlTransferOut()] methods of the [USBDevice] interface. It represents the result from requesting a transfer of data from the USB host to the USB device.",
    "members": []
  },
  "UserProximityEvent": {
    "name": "UserProximityEvent",
    "experimental": true,
    "deprecated": true,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/UserProximityEvent\"><code>UserProximityEvent</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/UserProximityEvent",
    "desc": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.\n\n  Warning:  is not supported by any current major browser, and should not be used.\n\nThe  indicates whether a nearby physical object is present by using the proximity sensor of a device.",
    "members": []
  },
  "USVString": {
    "name": "USVString",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/USVString\"><code>USVString</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/USVString",
    "desc": "A  is a sequence of Unicode scalar values. This definition differs from that of [DOMString] or the JavaScript [String] type in that it always represents a valid sequence suitable for text processing, while the latter can contain surrogate code points. The  type is generally found in APIs that perform text processing, while [DOMString] is used by most other APIs.\nWhen a  is provided to JavaScript, it maps to the JavaScript primitive [String] with the UTF-16 encoding of its sequence of Unicode scalar values.\nWhen a Web API accepts a , the JavaScript value provided is first stringified, in the same way as for [DOMString]. The resulting string is then further converted to  by replacing any surrogate code points (or equivalently, any unpaired surrogate code units) with the Unicode \"replacement character\" U+FFFD (�).",
    "members": []
  },
  "ValidityState": {
    "name": "ValidityState",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/ValidityState\"><code>ValidityState</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/ValidityState",
    "desc": "The  interface represents the validity states that an element can be in, with respect to constraint validation. Together, they help explain why an element's value fails to validate, if it's not valid.",
    "members": []
  },
  "VideoColorSpace": {
    "name": "VideoColorSpace",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/VideoColorSpace\"><code>VideoColorSpace</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/VideoColorSpace",
    "desc": "The  interface of the WebCodecs API represents the color space of a video.",
    "members": []
  },
  "VideoConfiguration": {
    "name": "VideoConfiguration",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/VideoConfiguration\"><code>VideoConfiguration</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/VideoConfiguration",
    "desc": "The  dictionary of the Media Capabilities API is used to define the video file being tested when calling the [MediaCapabilities] methods [encodingInfo()] and [decodingInfo()] to determine whether or not the described video configuration is supported, and how smoothly and how smooth and power-efficient it can be handled.",
    "members": []
  },
  "VideoDecoder": {
    "name": "VideoDecoder",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/VideoDecoder\"><code>VideoDecoder</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/VideoDecoder",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  interface of the WebCodecs API decodes chunks of video.",
    "members": []
  },
  "VideoEncoder": {
    "name": "VideoEncoder",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/VideoEncoder\"><code>VideoEncoder</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/VideoEncoder",
    "desc": "The  interface of the WebCodecs API encodes [VideoFrame] objects.",
    "members": []
  },
  "VideoFrame": {
    "name": "VideoFrame",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/VideoFrame\"><code>VideoFrame</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/VideoFrame",
    "desc": "The  interface of the Web Codecs API represents a frame of a video.",
    "members": []
  },
  "VideoPlaybackQuality": {
    "name": "VideoPlaybackQuality",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/VideoPlaybackQuality\"><code>VideoPlaybackQuality</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/VideoPlaybackQuality",
    "desc": "A  object is returned by the [HTMLVideoElement.getVideoPlaybackQuality()] method and contains metrics that can be used to determine the playback quality of a video.",
    "members": []
  },
  "VideoTrack": {
    "name": "VideoTrack",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/VideoTrack\"><code>VideoTrack</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/VideoTrack",
    "desc": "The  interface represents a single video track from a [<video>] element.\nThe most common use for accessing a  object is to toggle its [selected] property in order to make it the active video track for its [<video>] element.",
    "members": []
  },
  "VideoTrackList": {
    "name": "VideoTrackList",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/VideoTrackList\"><code>VideoTrackList</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/VideoTrackList",
    "desc": "The  interface is used to represent a list of the video tracks contained within a [<video>] element, with each track represented by a separate [VideoTrack] object in the list.\nRetrieve an instance of this object with [HTMLMediaElement.videoTracks]. The individual tracks can be accessed using array syntax or functions such as [forEach()] for example.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      VideoTrackList\n    \n  ",
    "members": []
  },
  "VisualViewport": {
    "name": "VisualViewport",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/VisualViewport\"><code>VisualViewport</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/VisualViewport",
    "desc": "The  interface of the Visual Viewport API represents the visual viewport for a given window. For a page containing iframes, each iframe, as well as the containing page, will have a unique window object. Each window on a page will have a unique  representing the properties associated with that window.\nYou can get a window's visual viewport using [Window.visualViewport].\n\n  Note: Only the top-level window has a visual viewport that's distinct from the layout viewport. Therefore, it's generally only the  object of the top-level window that's useful. For an [<iframe>], visual viewport metrics like [VisualViewport.width] always correspond to layout viewport metrics like [document.documentElement.clientWidth].\n\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      VisualViewport\n    \n  ",
    "members": []
  },
  "VRDisplay": {
    "name": "VRDisplay",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/VRDisplay\"><code>VRDisplay</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/VRDisplay",
    "desc": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.\nThe  interface of the WebVR API represents any VR device supported by this API. It includes generic information such as device IDs and descriptions, as well as methods for starting to present a VR scene, retrieving eye parameters and display capabilities, and other important functionality.\n\n  Note: This interface was part of the old WebVR API. It has been superseded by the WebXR Device API.\n\nAn array of all connected VR Devices can be returned by invoking the [Navigator.getVRDisplays()] method.",
    "members": []
  },
  "VRDisplayCapabilities": {
    "name": "VRDisplayCapabilities",
    "experimental": false,
    "deprecated": true,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/VRDisplayCapabilities\"><code>VRDisplayCapabilities</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/VRDisplayCapabilities",
    "desc": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.\nThe  interface of the WebVR API describes the capabilities of a [VRDisplay] — its features can be used to perform VR device capability tests, for example can it return position information.\n\n  Note: This interface was part of the old WebVR API. It has been superseded by the WebXR Device API.\n\nThis interface is accessible through the [VRDisplay.capabilities] property.",
    "members": []
  },
  "VRDisplayEvent": {
    "name": "VRDisplayEvent",
    "experimental": false,
    "deprecated": true,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/VRDisplayEvent\"><code>VRDisplayEvent</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/VRDisplayEvent",
    "desc": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.\nThe  interface of the WebVR API represents the event object of WebVR-related events (see the list of WebVR window extensions).\n\n  Note: This interface was part of the old WebVR API. It has been superseded by the WebXR Device API.\n",
    "members": []
  },
  "VREyeParameters": {
    "name": "VREyeParameters",
    "experimental": false,
    "deprecated": true,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/VREyeParameters\"><code>VREyeParameters</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/VREyeParameters",
    "desc": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.\nThe  interface of the WebVR API represents all the information required to correctly render a scene for a given eye, including field of view information.\n\n  Note: This interface was part of the old WebVR API. It has been superseded by the WebXR Device API.\n\nThis interface is accessible through the [VRDisplay.getEyeParameters()] method.\n\n  Warning: The values in this interface should not be used to compute view or projection matrices. In order to ensure the widest possible hardware compatibility use the matrices provided by [VRFrameData].\n",
    "members": []
  },
  "VRFieldOfView": {
    "name": "VRFieldOfView",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/VRFieldOfView\"><code>VRFieldOfView</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/VRFieldOfView",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.\nThe  interface of the WebVR API represents a field of view defined by 4 different degree values describing the view from a center point.\n\n  Note: This interface was part of the old WebVR API. It has been superseded by the WebXR Device API.\n",
    "members": []
  },
  "VRFrameData": {
    "name": "VRFrameData",
    "experimental": false,
    "deprecated": true,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/VRFrameData\"><code>VRFrameData</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/VRFrameData",
    "desc": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.\nThe  interface of the WebVR API represents all the information needed to render a single frame of a VR scene; constructed by [VRDisplay.getFrameData()].\n\n  Note: This interface was part of the old WebVR API. It has been superseded by the WebXR Device API.\n",
    "members": []
  },
  "VRLayerInit": {
    "name": "VRLayerInit",
    "experimental": false,
    "deprecated": true,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/VRLayerInit\"><code>VRLayerInit</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/VRLayerInit",
    "desc": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.\nThe  dictionary of the WebVR API represents a content layer (an [HTMLCanvasElement] or [OffscreenCanvas]) that you want to present in a VR display.\n\n  Note: This dictionary was part of the old WebVR API. It has been superseded by the WebXR Device API.\n\nYou can retrieve  objects using [VRDisplay.getLayers()], and present them using the [VRDisplay.requestPresent()] method.",
    "members": []
  },
  "VRPose": {
    "name": "VRPose",
    "experimental": false,
    "deprecated": true,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/VRPose\"><code>VRPose</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/VRPose",
    "desc": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.\nThe  interface of the WebVR API represents the state of a VR sensor at a given timestamp (which includes orientation, position, velocity, and acceleration information.)\n\n  Note: This interface was part of the old WebVR API. It has been superseded by the WebXR Device API.\n\nThis interface is accessible through the [VRDisplay.getPose()] and [VRDisplay.getFrameData()] methods. [VRDisplay.getPose()] is deprecated.",
    "members": []
  },
  "VRStageParameters": {
    "name": "VRStageParameters",
    "experimental": false,
    "deprecated": true,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/VRStageParameters\"><code>VRStageParameters</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/VRStageParameters",
    "desc": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.\nThe  interface of the WebVR API represents the values describing the stage area for devices that support room-scale experiences.\n\n  Note: This interface was part of the old WebVR API. It has been superseded by the WebXR Device API.\n\nThis interface is accessible through the [VRDisplay.stageParameters] property.",
    "members": []
  },
  "VTTCue": {
    "name": "VTTCue",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/VTTCue\"><code>VTTCue</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/VTTCue",
    "desc": "The  interface—part of the API for handling WebVTT (text tracks on media presentations)—describes and controls the text track associated with a particular [<track>] element.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      TextTrackCue\n    \n  \n  \n    \n    \n      VTTCue\n    \n  ",
    "members": []
  },
  "VTTRegion": {
    "name": "VTTRegion",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/VTTRegion\"><code>VTTRegion</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/VTTRegion",
    "desc": "The  interface—part of the API for handling WebVTT (text tracks on media presentations)—describes a portion of the video to render a [VTTCue] onto.",
    "members": []
  },
  "WakeLock": {
    "name": "WakeLock",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/WakeLock\"><code>WakeLock</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/WakeLock",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  interface of the [Screen Wake Lock API] prevents device screens from dimming or locking when an application needs to keep running.\nThe system wake lock is exposed through the global [Navigator.wakeLock] property.",
    "members": []
  },
  "WakeLockSentinel": {
    "name": "WakeLockSentinel",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/WakeLockSentinel\"><code>WakeLockSentinel</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/WakeLockSentinel",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  interface of the [Screen Wake Lock API] provides a handle to the underlying platform wake lock and can be manually released and reacquired. An [Object] representing the wake lock is returned via the [navigator.wakelock.request()] method.\nAn acquired  can be released manually via the [release()] method, or automatically via the platform wake lock. This can happen if the document becomes inactive or looses visibility, if the device is low on power or the user turns on a power save mode. Releasing all  instances of a given wake lock type will cause the underlying platform wake lock to be released.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      WakeLockSentinel\n    \n  ",
    "members": []
  },
  "WaveShaperNode": {
    "name": "WaveShaperNode",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/WaveShaperNode\"><code>WaveShaperNode</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/WaveShaperNode",
    "desc": "The  interface represents a non-linear distorter.\nIt is an [AudioNode] that uses a curve to apply a wave shaping distortion to the signal. Beside obvious distortion effects, it is often used to add a warm feeling to the signal.\nA  always has exactly one input and one output.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      AudioNode\n    \n  \n  \n    \n    \n      WaveShaperNode\n    \n  \n\n  \n    \n      Number of inputs\n      [1]\n    \n    \n      Number of outputs\n      [1]\n    \n    \n      Channel count mode\n      [\"max\"]\n    \n    \n      Channel count\n      [2] (not used in the default count mode)\n    \n    \n      Channel interpretation\n      [\"speakers\"]\n    \n  \n",
    "members": []
  },
  "WEBGL_color_buffer_float": {
    "name": "WEBGL_color_buffer_float",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/WEBGL_color_buffer_float\"><code>WEBGL_color_buffer_float</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/WEBGL_color_buffer_float",
    "desc": "The  extension is part of the WebGL API and adds the ability to render to 32-bit floating-point color buffers.\nWebGL extensions are available using the [WebGLRenderingContext.getExtension()] method. For more information, see also Using Extensions in the WebGL tutorial.\n\n  Note: This extension is available to WebGL 1 contexts only. For WebGL 2, use the [EXT_color_buffer_float] extension.\n  The [OES_texture_float] extension implicitly enables this extension.\n",
    "members": []
  },
  "WEBGL_compressed_texture_astc": {
    "name": "WEBGL_compressed_texture_astc",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/WEBGL_compressed_texture_astc\"><code>WEBGL_compressed_texture_astc</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/WEBGL_compressed_texture_astc",
    "desc": "The  extension is part of the WebGL API and exposes Adaptive Scalable Texture Compression (ASTC) compressed texture formats to WebGL.\nFor more information, see the article Using ASTC Texture Compression for Game Assets by nvidia.\nWebGL extensions are available using the [WebGLRenderingContext.getExtension()] method. For more information, see also Using Extensions in the WebGL tutorial.\n\n  Note: ASTC compression is typically available on Mali ARM GPUs, Intel GPUs, and Nividia Tegra chips.\n  This extension is available to both, WebGL1 and WebGL2 contexts.\n",
    "members": []
  },
  "WEBGL_compressed_texture_etc": {
    "name": "WEBGL_compressed_texture_etc",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/WEBGL_compressed_texture_etc\"><code>WEBGL_compressed_texture_etc</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/WEBGL_compressed_texture_etc",
    "desc": "The  extension is part of the WebGL API and exposes 10 ETC/EAC compressed texture formats.\nCompressed textures reduce the amount of memory needed to store a texture on the GPU, allowing for higher resolution textures or more of the same resolution textures.\nWebGL extensions are available using the [WebGLRenderingContext.getExtension()] method. For more information, see also Using Extensions in the WebGL tutorial.\n\n  Note: This extension is available to both, WebGL1 and WebGL2 contexts.\n",
    "members": []
  },
  "WEBGL_compressed_texture_etc1": {
    "name": "WEBGL_compressed_texture_etc1",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/WEBGL_compressed_texture_etc1\"><code>WEBGL_compressed_texture_etc1</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/WEBGL_compressed_texture_etc1",
    "desc": "The  extension is part of the WebGL API and exposes the ETC1 compressed texture format.\nCompressed textures reduce the amount of memory needed to store a texture on the GPU, allowing for higher resolution textures or more of the same resolution textures.\nWebGL extensions are available using the [WebGLRenderingContext.getExtension()] method. For more information, see also Using Extensions in the WebGL tutorial.\n\n  Note: This extension is available to both, WebGL1 and WebGL2 contexts.\n",
    "members": []
  },
  "WEBGL_compressed_texture_pvrtc": {
    "name": "WEBGL_compressed_texture_pvrtc",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/WEBGL_compressed_texture_pvrtc\"><code>WEBGL_compressed_texture_pvrtc</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/WEBGL_compressed_texture_pvrtc",
    "desc": "The  extension is part of the WebGL API and exposes four PVRTC compressed texture formats.\nCompressed textures reduce the amount of memory needed to store a texture on the GPU, allowing for higher resolution textures or more of the same resolution textures.\nWebGL extensions are available using the [WebGLRenderingContext.getExtension()] method. For more information, see also Using Extensions in the WebGL tutorial.\n\n  \n    Note: PVRTC is typically only available on mobile devices with PowerVR chipsets.\n    It is used in all generations of the iPhone, iPod Touch and iPad and supported on certain Android devices that use a PowerVR GPU.\n  \n  This extension is available to both, WebGL1 and WebGL2 contexts.\n\n\n  Note: On iOS devices, this extension is named [WEBKIT_WEBGL_compressed_texture_pvrtc].\n",
    "members": []
  },
  "WEBGL_compressed_texture_s3tc": {
    "name": "WEBGL_compressed_texture_s3tc",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/WEBGL_compressed_texture_s3tc\"><code>WEBGL_compressed_texture_s3tc</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/WEBGL_compressed_texture_s3tc",
    "desc": "The  extension is part of the WebGL API and exposes four S3TC compressed texture formats.\nCompressed textures reduce the amount of memory needed to store a texture on the GPU, allowing for higher resolution textures or more of the same resolution textures.\nWebGL extensions are available using the [WebGLRenderingContext.getExtension()] method. For more information, see also Using Extensions in the WebGL tutorial.\n\n  Note: This extension is available to both, WebGL1 and WebGL2 contexts.\n",
    "members": []
  },
  "WEBGL_compressed_texture_s3tc_srgb": {
    "name": "WEBGL_compressed_texture_s3tc_srgb",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/WEBGL_compressed_texture_s3tc_srgb\"><code>WEBGL_compressed_texture_s3tc_srgb</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/WEBGL_compressed_texture_s3tc_srgb",
    "desc": "The  extension is part of the WebGL API and exposes four S3TC compressed texture formats for the sRGB colorspace.\nCompressed textures reduce the amount of memory needed to store a texture on the GPU, allowing for higher resolution textures or more of the same resolution textures.\nWebGL extensions are available using the [WebGLRenderingContext.getExtension()] method. For more information, see also Using Extensions in the WebGL tutorial.\n\n  Note: This extension is available to both WebGL1 and WebGL2 contexts.\n",
    "members": []
  },
  "WEBGL_debug_renderer_info": {
    "name": "WEBGL_debug_renderer_info",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/WEBGL_debug_renderer_info\"><code>WEBGL_debug_renderer_info</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/WEBGL_debug_renderer_info",
    "desc": "The  extension is part of the WebGL API and exposes two constants with information about the graphics driver for debugging purposes.\nDepending on the privacy settings of the browser, this extension might only be available to privileged contexts. Generally, the graphics driver information should only be used in edge cases to optimize your WebGL content or to debug GPU problems. The [WebGLRenderingContext.getParameter()] method can help you to detect which features are supported and the [failIfMajorPerformanceCaveat] context attribute lets you control if a context should be returned at all, if the performance would be dramatically slow.\nWebGL extensions are available using the [WebGLRenderingContext.getExtension()] method. For more information, see also Using Extensions in the WebGL tutorial.\n\n  Note: Depending on the privacy settings of the browser, this extension might only be available to privileged contexts or not work at all. In Firefox, if [privacy.resistFingerprinting] is set to [true], this extensions is disabled.\n  This extension is available to both, WebGL1 and WebGL2 contexts.\n",
    "members": []
  },
  "WEBGL_debug_shaders": {
    "name": "WEBGL_debug_shaders",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/WEBGL_debug_shaders\"><code>WEBGL_debug_shaders</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/WEBGL_debug_shaders",
    "desc": "The  extension is part of the WebGL API and exposes a method to debug shaders from privileged contexts.\nThis extension is not directly available to web sites as the way of how the shader is translated may uncover personally-identifiable information to the web page about the kind of graphics card in the user's computer.\nWebGL extensions are available using the [WebGLRenderingContext.getExtension()] method. For more information, see also Using Extensions in the WebGL tutorial.\n\n  Note: Depending on the privacy settings of the browser, this extension might only be available to privileged contexts.\n  This extension is available to both, WebGL1 and WebGL2 contexts.\n",
    "members": []
  },
  "WEBGL_depth_texture": {
    "name": "WEBGL_depth_texture",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/WEBGL_depth_texture\"><code>WEBGL_depth_texture</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/WEBGL_depth_texture",
    "desc": "The  extension is part of the WebGL API and defines 2D depth and depth-stencil textures.\nWebGL extensions are available using the [WebGLRenderingContext.getExtension()] method. For more information, see also Using Extensions in the WebGL tutorial.\n\n  Note: This extension is only available to WebGL1 contexts. In WebGL2, the functionality of this extension is available on the WebGL2 context by default. The constant in WebGL2 is [gl.UNSIGNED_INT_24_8].\n",
    "members": []
  },
  "WEBGL_draw_buffers": {
    "name": "WEBGL_draw_buffers",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/WEBGL_draw_buffers\"><code>WEBGL_draw_buffers</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/WEBGL_draw_buffers",
    "desc": "The  extension is part of the WebGL API and enables a fragment shader to write to several textures, which is useful for deferred shading, for example.\nWebGL extensions are available using the [WebGLRenderingContext.getExtension()] method. For more information, see also Using Extensions in the WebGL tutorial.\n\n  Note: This extension is only available to WebGL1 contexts. In WebGL2, the functionality of this extension is available on the WebGL2 context by default. In WebGL 2, the constants are available without the \"WEBGL\" suffix and the new GLSL built-ins require GLSL [#version 300 es].\n",
    "members": []
  },
  "WEBGL_lose_context": {
    "name": "WEBGL_lose_context",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/WEBGL_lose_context\"><code>WEBGL_lose_context</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/WEBGL_lose_context",
    "desc": "The WEBGL_lose_context extension is part of the WebGL API and exposes functions to simulate losing and restoring a [WebGLRenderingContext].\nWebGL extensions are available using the [WebGLRenderingContext.getExtension()] method. For more information, see also Using Extensions in the WebGL tutorial.\n\n  Note: This extension is available to both, WebGL1 and WebGL2 contexts.\n",
    "members": []
  },
  "WEBGL_multi_draw": {
    "name": "WEBGL_multi_draw",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/WEBGL_multi_draw\"><code>WEBGL_multi_draw</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/WEBGL_multi_draw",
    "desc": "\n  The  extension is part of the\n  WebGL API and allows to render more\n  than one primitive with a single function call. This can improve a WebGL application's performance\n  as it reduces binding costs in the renderer and speeds up GPU thread time with uniform data.\n\nWhen this extension is enabled:\n\n  \n    New methods that handle multiple lists of arguments in one call are added\n    (see method list below).\n  \n  The [gl_DrawID] built-in is added to the shading language.\n\n\n  \n    Note: This extension is available to both,\n    WebGL 1 and\n    WebGL 2 contexts.\n  \n  \n    In shader code, the directive [#extension GL_ANGLE_multi_draw]\n    needs to be called to enable the extension.\n  \n  This extension enables the [ANGLE_instanced_arrays] extension implicitly.\n",
    "members": []
  },
  "WebGL2RenderingContext": {
    "name": "WebGL2RenderingContext",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/WebGL2RenderingContext\"><code>WebGL2RenderingContext</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/WebGL2RenderingContext",
    "desc": "The WebGL2RenderingContext interface provides the OpenGL ES 3.0 rendering context for the drawing surface of an HTML [<canvas>] element.\nTo get an object of this interface, call [getContext()] on a [<canvas>] element, supplying \"webgl2\" as the argument:\n[var canvas = document.getElementById('myCanvas');\nvar gl = canvas.getContext('webgl2');\n]\n\n  Note: WebGL 2 is an extension to WebGL 1. The  interface implements all members of the [WebGLRenderingContext] interface. Some methods of the WebGL 1 context can accept additional values when used in a WebGL 2 context. You will find this info noted on the WebGL 1 reference pages.\n\nThe WebGL tutorial has more information, examples, and resources on how to get started with WebGL.",
    "members": []
  },
  "WebGLActiveInfo": {
    "name": "WebGLActiveInfo",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/WebGLActiveInfo\"><code>WebGLActiveInfo</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/WebGLActiveInfo",
    "desc": "The WebGLActiveInfo interface is part of the WebGL API and represents the information returned by calling the [WebGLRenderingContext.getActiveAttrib()] and [WebGLRenderingContext.getActiveUniform()] methods.",
    "members": []
  },
  "WebGLBuffer": {
    "name": "WebGLBuffer",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/WebGLBuffer\"><code>WebGLBuffer</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/WebGLBuffer",
    "desc": "The WebGLBuffer interface is part of the WebGL API and represents an opaque buffer object storing data such as vertices or colors.\n  \n    \n    \n      WebGLObject\n    \n  \n  \n    \n    \n      WebGLBuffer\n    \n  ",
    "members": []
  },
  "WebGLContextEvent": {
    "name": "WebGLContextEvent",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/WebGLContextEvent\"><code>WebGLContextEvent</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/WebGLContextEvent",
    "desc": "The WebContextEvent interface is part of the WebGL API and is an interface for an event that is generated in response to a status change to the WebGL rendering context.\n  \n    \n    \n      Event\n    \n  \n  \n    \n    \n      WebGLContextEvent\n    \n  ",
    "members": []
  },
  "WebGLFramebuffer": {
    "name": "WebGLFramebuffer",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/WebGLFramebuffer\"><code>WebGLFramebuffer</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/WebGLFramebuffer",
    "desc": "The WebGLFramebuffer interface is part of the WebGL API and represents a collection of buffers that serve as a rendering destination.\n  \n    \n    \n      WebGLObject\n    \n  \n  \n    \n    \n      WebGLFramebuffer\n    \n  ",
    "members": []
  },
  "WebGLProgram": {
    "name": "WebGLProgram",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/WebGLProgram\"><code>WebGLProgram</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/WebGLProgram",
    "desc": "The  is part of the WebGL API and is a combination of two compiled [WebGLShader]s consisting of a vertex shader and a fragment shader (both written in GLSL).\n  \n    \n    \n      WebGLObject\n    \n  \n  \n    \n    \n      WebGLProgram\n    \n  \nTo create a , call the GL context's [createProgram()] function. After attaching the shader programs using [attachShader()], you link them into a usable program. This is shown in the code below.\n[var program = gl.createProgram();\n\n// Attach pre-existing shaders\ngl.attachShader(program, vertexShader);\ngl.attachShader(program, fragmentShader);\n\ngl.linkProgram(program);\n\nif ( !gl.getProgramParameter( program, gl.LINK_STATUS) ) {\n  var info = gl.getProgramInfoLog(program);\n  throw 'Could not compile WebGL program. \\n\\n' + info;\n}\n]\nSee [WebGLShader] for information on creating the [vertexShader] and [fragmentShader] in the above example.",
    "members": []
  },
  "WebGLQuery": {
    "name": "WebGLQuery",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/WebGLQuery\"><code>WebGLQuery</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/WebGLQuery",
    "desc": "The  interface is part of the WebGL 2 API and provides ways to asynchronously query for information. By default, occlusion queries and primitive queries are available.\nAnother kind of queries are disjoint timer queries, which allow you to measure performance and profiling of your GPU. Disjoint timer queries are available with the [EXT_disjoint_timer_query] extension only.\n  \n    \n    \n      WebGLObject\n    \n  \n  \n    \n    \n      WebGLQuery\n    \n  \nWhen working with  objects, the following methods of the [WebGL2RenderingContext] are useful:\n\n  [WebGL2RenderingContext.createQuery()]\n  [WebGL2RenderingContext.deleteQuery()]\n  [WebGL2RenderingContext.isQuery()]\n  [WebGL2RenderingContext.beginQuery()]\n  [WebGL2RenderingContext.endQuery()]\n  [WebGL2RenderingContext.getQuery()]\n  [WebGL2RenderingContext.getQueryParameter()]\n",
    "members": []
  },
  "WebGLRenderbuffer": {
    "name": "WebGLRenderbuffer",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/WebGLRenderbuffer\"><code>WebGLRenderbuffer</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/WebGLRenderbuffer",
    "desc": "The WebGLRenderbuffer interface is part of the WebGL API and represents a buffer that can contain an image, or that can be a source or target of a rendering operation.\n  \n    \n    \n      WebGLObject\n    \n  \n  \n    \n    \n      WebGLRenderbuffer\n    \n  ",
    "members": []
  },
  "WebGLRenderingContext": {
    "name": "WebGLRenderingContext",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/WebGLRenderingContext\"><code>WebGLRenderingContext</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/WebGLRenderingContext",
    "desc": "The  interface provides an interface to the OpenGL ES 2.0 graphics rendering context for the drawing surface of an HTML [<canvas>] element.\nTo get an access to a WebGL context for 2D and/or 3D graphics rendering, call [getContext()] on a [<canvas>] element, supplying \"webgl\" as the argument:\n[var canvas = document.getElementById('myCanvas');\nvar gl = canvas.getContext('webgl');\n]\nOnce you have the WebGL rendering context for a canvas, you can render within it. The WebGL tutorial has more information, examples, and resources on how to get started with WebGL.\nIf you require a WebGL 2.0 context, see [WebGL2RenderingContext]; this supplies access to an implementation of OpenGL ES 3.0 graphics.",
    "members": []
  },
  "WebGLSampler": {
    "name": "WebGLSampler",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/WebGLSampler\"><code>WebGLSampler</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/WebGLSampler",
    "desc": "The  interface is part of the WebGL 2 API and stores sampling parameters for [WebGLTexture] access inside of a shader.\n  \n    \n    \n      WebGLObject\n    \n  \n  \n    \n    \n      WebGLSampler\n    \n  \nWhen working with  objects, the following methods of the [WebGL2RenderingContext] are useful:\n\n  [WebGL2RenderingContext.createSampler()]\n  [WebGL2RenderingContext.deleteSampler()]\n  [WebGL2RenderingContext.isSampler()]\n  [WebGL2RenderingContext.bindSampler()]\n  [WebGL2RenderingContext.getSamplerParameter()]\n",
    "members": []
  },
  "WebGLShader": {
    "name": "WebGLShader",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/WebGLShader\"><code>WebGLShader</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/WebGLShader",
    "desc": "The WebGLShader is part of the WebGL API and can either be a vertex or a fragment shader. A [WebGLProgram] requires both types of shaders.\n  \n    \n    \n      WebGLObject\n    \n  \n  \n    \n    \n      WebGLShader\n    \n  ",
    "members": []
  },
  "WebGLShaderPrecisionFormat": {
    "name": "WebGLShaderPrecisionFormat",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/WebGLShaderPrecisionFormat\"><code>WebGLShaderPrecisionFormat</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/WebGLShaderPrecisionFormat",
    "desc": "The WebGLShaderPrecisionFormat interface is part of the WebGL API and represents the information returned by calling the [WebGLRenderingContext.getShaderPrecisionFormat()] method.",
    "members": []
  },
  "WebGLSync": {
    "name": "WebGLSync",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/WebGLSync\"><code>WebGLSync</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/WebGLSync",
    "desc": "The  interface is part of the WebGL 2 API and is used to synchronize activities between the GPU and the application.\n  \n    \n    \n      WebGLObject\n    \n  \n  \n    \n    \n      WebGLSync\n    \n  \nWhen working with  objects, the following methods of the [WebGL2RenderingContext] are useful:\n\n  [WebGL2RenderingContext.fenceSync()]\n  [WebGL2RenderingContext.deleteSync()]\n  [WebGL2RenderingContext.isSync()]\n  [WebGL2RenderingContext.clientWaitSync()]\n  [WebGL2RenderingContext.waitSync()]\n  [WebGL2RenderingContext.getSyncParameter()]\n",
    "members": []
  },
  "WebGLTexture": {
    "name": "WebGLTexture",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/WebGLTexture\"><code>WebGLTexture</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/WebGLTexture",
    "desc": "The WebGLTexture interface is part of the WebGL API and represents an opaque texture object providing storage and state for texturing operations.\n  \n    \n    \n      WebGLObject\n    \n  \n  \n    \n    \n      WebGLTexture\n    \n  ",
    "members": []
  },
  "WebGLTransformFeedback": {
    "name": "WebGLTransformFeedback",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/WebGLTransformFeedback\"><code>WebGLTransformFeedback</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/WebGLTransformFeedback",
    "desc": "The  interface is part of the WebGL 2 API and enables transform feedback, which is the process of capturing primitives generated by vertex processing. It allows to preserve the post-transform rendering state of an object and resubmit this data multiple times.\n  \n    \n    \n      WebGLObject\n    \n  \n  \n    \n    \n      WebGLTransformFeedback\n    \n  \nWhen working with  objects, the following methods of the [WebGL2RenderingContext] are useful:\n\n  [WebGL2RenderingContext.createTransformFeedback()]\n  [WebGL2RenderingContext.deleteTransformFeedback()]\n  [WebGL2RenderingContext.isTransformFeedback()]\n  [WebGL2RenderingContext.bindTransformFeedback()]\n  [WebGL2RenderingContext.beginTransformFeedback()]\n  [WebGL2RenderingContext.endTransformFeedback()]\n  [WebGL2RenderingContext.pauseTransformFeedback()]\n  [WebGL2RenderingContext.resumeTransformFeedback()]\n  [WebGL2RenderingContext.transformFeedbackVaryings()]\n  [WebGL2RenderingContext.getTransformFeedbackVarying()]\n",
    "members": []
  },
  "WebGLUniformLocation": {
    "name": "WebGLUniformLocation",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/WebGLUniformLocation\"><code>WebGLUniformLocation</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/WebGLUniformLocation",
    "desc": "The WebGLUniformLocation interface is part of the WebGL API and represents the location of a uniform variable in a shader program.",
    "members": []
  },
  "WebGLVertexArrayObject": {
    "name": "WebGLVertexArrayObject",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/WebGLVertexArrayObject\"><code>WebGLVertexArrayObject</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/WebGLVertexArrayObject",
    "desc": "The  interface is part of the WebGL 2 API, represents vertex array objects (VAOs) pointing to vertex array data, and provides names for different sets of vertex data.\n  \n    \n    \n      WebGLObject\n    \n  \n  \n    \n    \n      WebGLVertexArrayObject\n    \n  \nWhen working with  objects, the following methods are useful:\n\n  [WebGL2RenderingContext.createVertexArray()]\n  [WebGL2RenderingContext.deleteVertexArray()]\n  [WebGL2RenderingContext.isVertexArray()]\n  [WebGL2RenderingContext.bindVertexArray()]\n\n\n  Note: The [OES_vertex_array_object] extension allows you to use vertex array objects in a WebGL 1 context.\n",
    "members": []
  },
  "WebSocket": {
    "name": "WebSocket",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/WebSocket\"><code>WebSocket</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/WebSocket",
    "desc": "The  object provides the API for creating and managing a WebSocket connection to a server, as well as for sending and receiving data on the connection.\nTo construct a , use the [WebSocket()] constructor.\n  Note: This feature is available in Web Workers\n\n\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      WebSocket\n    \n  ",
    "members": []
  },
  "WheelEvent": {
    "name": "WheelEvent",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/WheelEvent\"><code>WheelEvent</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/WheelEvent",
    "desc": "The  interface represents events that occur due to the user moving a mouse wheel or similar input device.\n\n  Note: This is the standard wheel event interface to use. Old versions of browsers implemented the non-standard and non-cross-browser-compatible [MouseWheelEvent] and [MouseScrollEvent] interfaces. Use this interface and avoid the non-standard ones.\n\n\n  Note: Do not confuse the [wheel] event with the [scroll] event. The default action of a [wheel] event is implementation-defined. Thus, a [wheel] event doesn't necessarily dispatch a [scroll] event. Even when it does, that doesn't mean that the [delta*] values in the [wheel] event necessarily reflect the content's scrolling direction. Therefore, do not rely on [delta*] properties to get the content's scrolling direction. Instead, detect value changes to [scrollLeft] and [scrollTop] of the target in the [scroll] event.\n\n  \n    \n    \n      Event\n    \n  \n  \n    \n    \n      UIEvent\n    \n  \n  \n    \n    \n      MouseEvent\n    \n  \n  \n    \n    \n      WheelEvent\n    \n  ",
    "members": []
  },
  "Window": {
    "name": "Window",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/Window\"><code>Window</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/Window",
    "desc": "The  interface represents a window containing a DOM document; the [document] property points to the DOM document loaded in that window.\nA window for a given document can be obtained using the [document.defaultView] property.\nA global variable, [window], representing the window in which the script is running, is exposed to JavaScript code.\nThe  interface is home to a variety of functions, namespaces, objects, and constructors which are not necessarily directly associated with the concept of a user interface window. However, the  interface is a suitable place to include these items that need to be globally available. Many of these are documented in the JavaScript Reference and the DOM Reference.\nIn a tabbed browser, each tab is represented by its own  object; the global [window] seen by JavaScript code running within a given tab always represents the tab in which the code is running. That said, even in a tabbed browser, some properties and methods still apply to the overall window that contains the tab, such as [resizeTo()] and [innerHeight]. Generally, anything that can't reasonably pertain to a tab pertains to the window instead.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Window\n    \n  ",
    "members": []
  },
  "WindowClient": {
    "name": "WindowClient",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/WindowClient\"><code>WindowClient</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/WindowClient",
    "desc": "The  interface of the ServiceWorker API represents the scope of a service worker client that is a document in a browsing context, controlled by an active worker. The service worker client independently selects and uses a service worker for its own loading and sub-resources.\n  \n    \n    \n      Client\n    \n  \n  \n    \n    \n      WindowClient\n    \n  ",
    "members": []
  },
  "WindowControlsOverlay": {
    "name": "WindowControlsOverlay",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/WindowControlsOverlay\"><code>WindowControlsOverlay</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/WindowControlsOverlay",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\n\n  The  interface of the Window Controls Overlay API exposes information about the geometry\n  of the title bar area in desktop Progressive Web Apps, and an event to know whenever it changes. This interface is accessible from [Navigator.windowControlsOverlay].\n\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      WindowControlsOverlay\n    \n  ",
    "members": []
  },
  "WindowControlsOverlayGeometryChangeEvent": {
    "name": "WindowControlsOverlayGeometryChangeEvent",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/WindowControlsOverlayGeometryChangeEvent\"><code>WindowControlsOverlayGeometryChangeEvent</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/WindowControlsOverlayGeometryChangeEvent",
    "desc": "The  interface of the Window Controls Overlay API is passed to [geometrychange] when the size or visibility of a desktop Progress Web App's title bar region changes.\n  \n    \n    \n      Event\n    \n  \n  \n    \n    \n      WindowControlsOverlayGeometryChangeEvent\n    \n  ",
    "members": []
  },
  "WindowEventHandlers": {
    "name": "WindowEventHandlers",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/WindowEventHandlers\"><code>WindowEventHandlers</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/WindowEventHandlers",
    "desc": "The  mixin describes the event handlers common to several interfaces like [Window], or [HTMLBodyElement] and [HTMLFrameSetElement]. Each of these interfaces can implement additional specific event handlers.\n\n  Note:  is a mixin and not an interface; you can't actually create an object of type .\n",
    "members": []
  },
  "Worker": {
    "name": "Worker",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/Worker\"><code>Worker</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/Worker",
    "desc": "The  interface of the Web Workers API represents a background task that can be created via script, which can send messages back to its creator.\nCreating a worker is done by calling the [Worker(\"path/to/worker/script\")] constructor.\nWorkers may themselves spawn new workers, as long as those workers are hosted at the same origin as the parent page. (Note: nested workers are not yet implemented in WebKit).\nNot all interfaces and functions are available to scripts inside a . Workers may use [XMLHttpRequest] for network communication, but its [responseXML] and [channel] attributes are always [null]. ([fetch] is also available, with no such restrictions.)\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Worker\n    \n  ",
    "members": []
  },
  "WorkerGlobalScope": {
    "name": "WorkerGlobalScope",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/WorkerGlobalScope\"><code>WorkerGlobalScope</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/WorkerGlobalScope",
    "desc": "The  interface of the Web Workers API is an interface representing the scope of any worker. Workers have no browsing context; this scope contains the information usually conveyed by [Window] objects — in this case event handlers, the console or the associated [WorkerNavigator] object. Each  has its own event loop.\nThis interface is usually specialized by each worker type: [DedicatedWorkerGlobalScope] for dedicated workers, [SharedWorkerGlobalScope] for shared workers, and [ServiceWorkerGlobalScope] for ServiceWorker. The [self] property returns the specialized scope for each context.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      WorkerGlobalScope\n    \n  ",
    "members": []
  },
  "WorkerLocation": {
    "name": "WorkerLocation",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/WorkerLocation\"><code>WorkerLocation</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/WorkerLocation",
    "desc": "The  interface defines the absolute location of the script executed by the [Worker]. Such an object is initialized for each worker and is available via the [WorkerGlobalScope.location] property obtained by calling [self.location].\nThis interface is only visible from inside a JavaScript script executed in the context of a Web worker.",
    "members": []
  },
  "WorkerNavigator": {
    "name": "WorkerNavigator",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/WorkerNavigator\"><code>WorkerNavigator</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/WorkerNavigator",
    "desc": "The  interface represents a subset of the [Navigator] interface allowed to be accessed from a [Worker]. Such an object is initialized for each worker and is available via the [self.navigator] property.",
    "members": []
  },
  "Worklet": {
    "name": "Worklet",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/Worklet\"><code>Worklet</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/Worklet",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  interface is a lightweight version of [Web Workers] and gives developers access to low-level parts of the rendering pipeline.\nWith Worklets, you can run JavaScript and WebAssembly code to do graphics rendering or audio processing where high performance is required.",
    "members": []
  },
  "WritableStream": {
    "name": "WritableStream",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/WritableStream\"><code>WritableStream</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/WritableStream",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  interface of the Streams API provides a standard abstraction for writing streaming data to a destination, known as a sink. This object comes with built-in backpressure and queuing.",
    "members": []
  },
  "WritableStreamDefaultController": {
    "name": "WritableStreamDefaultController",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/WritableStreamDefaultController\"><code>WritableStreamDefaultController</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/WritableStreamDefaultController",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  interface of the Streams API represents a controller allowing control of a [WritableStream]'s state. When constructing a [WritableStream], the underlying sink is given a corresponding  instance to manipulate.",
    "members": []
  },
  "WritableStreamDefaultWriter": {
    "name": "WritableStreamDefaultWriter",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/WritableStreamDefaultWriter\"><code>WritableStreamDefaultWriter</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/WritableStreamDefaultWriter",
    "desc": "Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\nThe  interface of the Streams API is the object returned by [WritableStream.getWriter()] and once created locks the writer to the [WritableStream] ensuring that no other streams can write to the underlying sink.",
    "members": []
  },
  "XMLDocument": {
    "name": "XMLDocument",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/XMLDocument\"><code>XMLDocument</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/XMLDocument",
    "desc": "The XMLDocument interface represents an XML document. It inherits from the generic [Document] and does not add any specific methods or properties to it: nevertheless, several algorithms behave differently with the two types of documents.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      Node\n    \n  \n  \n    \n    \n      Document\n    \n  \n  \n    \n    \n      XMLDocument\n    \n  ",
    "members": []
  },
  "XMLHttpRequest": {
    "name": "XMLHttpRequest",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/XMLHttpRequest\"><code>XMLHttpRequest</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/XMLHttpRequest",
    "desc": " (XHR) objects are used to interact with servers. You can retrieve data from a URL without having to do a full page refresh. This enables a Web page to update just part of a page without disrupting what the user is doing.\n is used heavily in AJAX programming.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      XMLHttpRequestEventTarget\n    \n  \n  \n    \n    \n      XMLHttpRequest\n    \n  \nDespite its name,  can be used to retrieve any type of data, not just XML.\nIf your communication needs to involve receiving event data or message data from a server, consider using server-sent events through the [EventSource] interface. For full-duplex communication, WebSockets may be a better choice.\n  Note: This feature is available in Web Workers, except for Service Workers\n",
    "members": []
  },
  "XMLHttpRequestEventTarget": {
    "name": "XMLHttpRequestEventTarget",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/XMLHttpRequestEventTarget\"><code>XMLHttpRequestEventTarget</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/XMLHttpRequestEventTarget",
    "desc": " is the interface that describes the event handlers you can implement in an object that will handle events for an [XMLHttpRequest].\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      XMLHttpRequestEventTarget\n    \n  ",
    "members": []
  },
  "XMLSerializer": {
    "name": "XMLSerializer",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/XMLSerializer\"><code>XMLSerializer</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/XMLSerializer",
    "desc": "The  interface provides the [serializeToString()] method to construct an XML string representing a DOM tree.",
    "members": []
  },
  "XPathEvaluator": {
    "name": "XPathEvaluator",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/XPathEvaluator\"><code>XPathEvaluator</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/XPathEvaluator",
    "desc": "The  interface allows to compile and evaluate XPath expressions.\nIt is implemented by the [Document] interface.",
    "members": []
  },
  "XPathException": {
    "name": "XPathException",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/XPathException\"><code>XPathException</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/XPathException",
    "desc": "Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.\nIn the DOM XPath API the  interface represents exception conditions that can be encountered while performing XPath operations.",
    "members": []
  },
  "XPathExpression": {
    "name": "XPathExpression",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/XPathExpression\"><code>XPathExpression</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/XPathExpression",
    "desc": "This interface is a compiled XPath expression that can be evaluated on a document or specific node to return information from its DOM tree.\nThis is useful when an expression will be reused in an application, because it is just compiled once and all namespace prefixes which occur within the expression are preresolved.\nObjects of this type are created by calling [XPathEvaluator.createExpression()].",
    "members": []
  },
  "XPathNSResolver": {
    "name": "XPathNSResolver",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/XPathNSResolver\"><code>XPathNSResolver</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/XPathNSResolver",
    "desc": "The  interface permits prefix strings in an XPath expression to be properly bound to namespace URI strings.\nThe [XPathEvaluator] interface can construct an implementation of  from a node, or the interface may be implemented by any application.",
    "members": []
  },
  "XPathResult": {
    "name": "XPathResult",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/XPathResult\"><code>XPathResult</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/XPathResult",
    "desc": "The  interface represents the results generated by evaluating an XPath expression within the context of a given node.\nSince XPath expressions can result in a variety of result types, this interface makes it possible to determine and handle the type and value of the result.",
    "members": []
  },
  "XRAnchor": {
    "name": "XRAnchor",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/XRAnchor\"><code>XRAnchor</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/XRAnchor",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  interface creates anchors which keep track of the pose that is fixed relative to the real world. With anchors, you can specify poses in the world that need to be updated to correctly reflect the evolving understanding of the world, such that the poses remain aligned with the same place in the physical world. That helps to build an illusion that the placed objects are really present in the user’s environment.",
    "members": []
  },
  "XRAnchorSet": {
    "name": "XRAnchorSet",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/XRAnchorSet\"><code>XRAnchorSet</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/XRAnchorSet",
    "desc": "The  interface exposes a collection of anchors. It is returned by [XRFrame.trackedAnchors] and is a [Set]-like object.",
    "members": []
  },
  "XRBoundedReferenceSpace": {
    "name": "XRBoundedReferenceSpace",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/XRBoundedReferenceSpace\"><code>XRBoundedReferenceSpace</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/XRBoundedReferenceSpace",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe WebXR Device API's  interface describes a virtual world reference space which has preset boundaries. This extends [XRReferenceSpace], which describes an essentially unrestricted space around the viewer's position. These bounds are defined using an array of points, each of which defines a vertex in a polygon inside which the user is allowed to move.\nThis is typically used when the XR system is capable of tracking the user's physical movement within a limited distance of their starting position. The specified bounds may, in fact, describe the shape and size of the room the user is located in, in order to let the WebXR site or application prevent the user from colliding with the walls or other obstacles in the real world.  At a minimum, the boundaries indicate the area in which the XR device is capable of tracking the user's movement. See the article Using bounded reference spaces for details on how bounded spaces work and why they're useful.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      XRSpace\n    \n  \n  \n    \n    \n      XRReferenceSpace\n    \n  \n  \n    \n    \n      XRBoundedReferenceSpace\n    \n  ",
    "members": []
  },
  "XRCompositionLayer": {
    "name": "XRCompositionLayer",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/XRCompositionLayer\"><code>XRCompositionLayer</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/XRCompositionLayer",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  interface of the WebXR Device API is a base class that defines a set of common properties and behaviors for WebXR layer types. It is not constructable on its own.\nSeveral layer types inherit from :\n\n  [XREquirectLayer]\n  [XRCubeLayer]\n  [XRCylinderLayer]\n  [XRProjectionLayer]\n  [XRQuadLayer]\n\n itself inherits from the general [XRLayer] class (which inherits from [EventTarget]).\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      XRLayer\n    \n  \n  \n    \n    \n      XRCompositionLayer\n    \n  ",
    "members": []
  },
  "XRCPUDepthInformation": {
    "name": "XRCPUDepthInformation",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/XRCPUDepthInformation\"><code>XRCPUDepthInformation</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/XRCPUDepthInformation",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  interface contains depth information from the CPU (returned by [XRFrame.getDepthInformation()]).\n  \n    \n    \n      XRDepthInformation\n    \n  \n  \n    \n    \n      XRCPUDepthInformation\n    \n  \nThis interface inherits properties from its parent, [XRDepthInformation].",
    "members": []
  },
  "XRCubeLayer": {
    "name": "XRCubeLayer",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/XRCubeLayer\"><code>XRCubeLayer</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/XRCubeLayer",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  interface of the WebXR Device API is a layer that renders directly from a cubemap and projects it onto the inside faces of a cube.\n requires the [layers] feature to be enabled for the [XRSession]. You can request it in [XRSystem.requestSession()].\nTo create a new , call [XRWebGLBinding.createCubeLayer()].\nTo present layers to the XR device, add them to the [layers] render state using [XRSession.updateRenderState()].\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      XRLayer\n    \n  \n  \n    \n    \n      XRCompositionLayer\n    \n  \n  \n    \n    \n      XRCubeLayer\n    \n  ",
    "members": []
  },
  "XRCylinderLayer": {
    "name": "XRCylinderLayer",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/XRCylinderLayer\"><code>XRCylinderLayer</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/XRCylinderLayer",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  interface of the WebXR Device API is a layer that takes up a curved rectangular space in the virtual environment. Only the front of the layer is visible.\n requires the [layers] feature to be enabled for the [XRSession]. You can request it in [XRSystem.requestSession()].\nTo create a new , call either:\n\n  [XRWebGLBinding.createCylinderLayer()] for a WebGL opaque texture layer, or\n  [XRMediaBinding.createCylinderLayer()] for an HTML [<video>] playback layer.\n\nTo present layers to the XR device, add them to the [layers] render state using [XRSession.updateRenderState()].\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      XRLayer\n    \n  \n  \n    \n    \n      XRCompositionLayer\n    \n  \n  \n    \n    \n      XRCylinderLayer\n    \n  ",
    "members": []
  },
  "XRDepthInformation": {
    "name": "XRDepthInformation",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/XRDepthInformation\"><code>XRDepthInformation</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/XRDepthInformation",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  interface contains information about the distance from the user’s device to the real-world geometry in the user’s environment.\nThis interface is the parent of:\n\n  [XRCPUDepthInformation]\n  \n    Depth information from the CPU (returned by [XRFrame.getDepthInformation()]).\n  \n  [XRWebGLDepthInformation]\n  \n    Depth information from WebGL (returned by [XRWebGLBinding.getDepthInformation()]).\n  \n\nYou will usually interact with these child interfaces. However,  provides some useful properties that are inherited:",
    "members": []
  },
  "XREquirectLayer": {
    "name": "XREquirectLayer",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/XREquirectLayer\"><code>XREquirectLayer</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/XREquirectLayer",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  interface of the WebXR Device API is a layer that maps equirectangular coded data onto the inside of a sphere.\n requires the [layers] feature to be enabled for the [XRSession]. You can request it in [XRSystem.requestSession()].\nTo create a new , call either:\n\n  [XRWebGLBinding.createEquirectLayer()] for a WebGL opaque texture layer, or\n  [XRMediaBinding.createEquirectLayer()] for an HTML [<video>] playback layer.\n\nTo present layers to the XR device, add them to the [layers] render state using [XRSession.updateRenderState()].\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      XRLayer\n    \n  \n  \n    \n    \n      XRCompositionLayer\n    \n  \n  \n    \n    \n      XREquirectLayer\n    \n  ",
    "members": []
  },
  "XRFrame": {
    "name": "XRFrame",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/XRFrame\"><code>XRFrame</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/XRFrame",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nA WebXR Device API  object is passed into the [requestAnimationFrame()] callback function and provides access to the information needed in order to render a single frame of animation for an [XRSession] describing a VR or AR scene. Events which communicate the tracking state of objects also provide an  reference as part of their structure.\nIn addition to providing a reference to the [XRSession] for which this frame is to be rendered, the [getViewerPose()] method is provided to obtain the [XRViewerPose] describing the viewer's position and orientation in space, and [getPose()] can be used to create an [XRPose] describing the relative position of one [XRSpace] relative to another.",
    "members": []
  },
  "XRHand": {
    "name": "XRHand",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/XRHand\"><code>XRHand</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/XRHand",
    "desc": "The  interface is pair iterator (an ordered map) with the key being the hand joints and the value being an [XRJointSpace].\n is returned by [XRInputSource.hand].",
    "members": []
  },
  "XRHitTestResult": {
    "name": "XRHitTestResult",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/XRHitTestResult\"><code>XRHitTestResult</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/XRHitTestResult",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  interface of the WebXR Device API contains a single result of a hit test. You can get an array of  objects for a frame by calling [XRFrame.getHitTestResults()].",
    "members": []
  },
  "XRHitTestSource": {
    "name": "XRHitTestSource",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/XRHitTestSource\"><code>XRHitTestSource</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/XRHitTestSource",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  interface of the WebXR Device API handles hit test subscriptions. You can get an  object by using the [XRSession.requestHitTestSource()] method.\nThis object doesn't itself contain hit test results, but it is used to compute hit tests for each [XRFrame] by calling [XRFrame.getHitTestResults()], which returns [XRHitTestResult] objects.",
    "members": []
  },
  "XRInputSource": {
    "name": "XRInputSource",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/XRInputSource\"><code>XRInputSource</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/XRInputSource",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe WebXR Device API's  interface describes a single source of control input which is part of the user's WebXR-compatible virtual or augmented reality system. The device is specific to the platform being used, but provides the direction in which it is being aimed and optionally may generate events if the user triggers performs actions using the device.",
    "members": []
  },
  "XRInputSourceArray": {
    "name": "XRInputSourceArray",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/XRInputSourceArray\"><code>XRInputSourceArray</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/XRInputSourceArray",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe interface  represents a live list of WebXR input sources, and is used as the return value of the [XRSession] property [inputSources]. Each entry is an [XRInputSource] representing one input device connected to the WebXR system.\nIn addition to being able to access the input sources in the list using standard array notation (that is, with index numbers inside square brackets), methods are available to allow the use of iterators and the [forEach()] method is also available.",
    "members": []
  },
  "XRInputSourceEvent": {
    "name": "XRInputSourceEvent",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/XRInputSourceEvent\"><code>XRInputSourceEvent</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/XRInputSourceEvent",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe WebXR Device API's  interface describes an event which has occurred on a WebXR user input device such as a hand controller, gaze tracking system, or motion tracking system. More specifically, they represent a change in the state of an [XRInputSource].\nTo learn more about handling inputs in a WebXR project, see the article Inputs and input sources.\n  \n    \n    \n      Event\n    \n  \n  \n    \n    \n      XRInputSourceEvent\n    \n  ",
    "members": []
  },
  "XRInputSourcesChangeEvent": {
    "name": "XRInputSourcesChangeEvent",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/XRInputSourcesChangeEvent\"><code>XRInputSourcesChangeEvent</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/XRInputSourcesChangeEvent",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe WebXR Device API interface  is used to represent the [inputsourceschange] event sent to an [XRSession] when the set of available WebXR input controllers changes.\n  \n    \n    \n      Event\n    \n  \n  \n    \n    \n      XRInputSourcesChangeEvent\n    \n  ",
    "members": []
  },
  "XRJointPose": {
    "name": "XRJointPose",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/XRJointPose\"><code>XRJointPose</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/XRJointPose",
    "desc": "The  interface is an [XRPose] with additional information about the size of the skeleton joint it represents.\n  \n    \n    \n      XRPose\n    \n  \n  \n    \n    \n      XRJointPose\n    \n  ",
    "members": []
  },
  "XRJointSpace": {
    "name": "XRJointSpace",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/XRJointSpace\"><code>XRJointSpace</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/XRJointSpace",
    "desc": "The  interface is an [XRSpace] and represents the position and orientation of an [XRHand] joint.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      XRSpace\n    \n  \n  \n    \n    \n      XRJointSpace\n    \n  ",
    "members": []
  },
  "XRLayer": {
    "name": "XRLayer",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/XRLayer\"><code>XRLayer</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/XRLayer",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  interface of the WebXR Device API is the base class for WebXR layer types. It inherits methods from [EventTarget].\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      XRLayer\n    \n  ",
    "members": []
  },
  "XRLayerEvent": {
    "name": "XRLayerEvent",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/XRLayerEvent\"><code>XRLayerEvent</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/XRLayerEvent",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  interface of the WebXR Device API is the event type for events related to a change of state of an [XRLayer] object. These events occur, for example, when the layer needs to be redrawn.\n  \n    \n    \n      Event\n    \n  \n  \n    \n    \n      XRLayerEvent\n    \n  ",
    "members": []
  },
  "XRLightEstimate": {
    "name": "XRLightEstimate",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/XRLightEstimate\"><code>XRLightEstimate</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/XRLightEstimate",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  interface of the WebXR Device API provides the estimated lighting values for an [XRLightProbe] at the time represented by an [XRFrame].\nTo get an object, call the [XRFrame.getLightEstimate()] method.",
    "members": []
  },
  "XRLightProbe": {
    "name": "XRLightProbe",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/XRLightProbe\"><code>XRLightProbe</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/XRLightProbe",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  interface of the WebXR Device API contains lighting information at a given point in the user's environment. You can get an [XRLighting] object using the [XRSession.requestLightProbe()] method.\nThis object doesn't itself contain lighting values, but it is used to collect lighting states for each [XRFrame]. See [XRLightEstimate] for the estimated lighting values for an .\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      XRLightProbe\n    \n  ",
    "members": []
  },
  "XRMediaBinding": {
    "name": "XRMediaBinding",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/XRMediaBinding\"><code>XRMediaBinding</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/XRMediaBinding",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  interface is used to create layers that display the content of an [HTMLVideoElement].\n\n  \n    Note:\n    Only the video frames will be displayed in the layer. Video controls need to be implemented separately and must be drawn in another layer.\n  \n",
    "members": []
  },
  "XRPermissionStatus": {
    "name": "XRPermissionStatus",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/XRPermissionStatus\"><code>XRPermissionStatus</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/XRPermissionStatus",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  interface defines the object returned by calling [navigator.permissions.query()] for the [xr] permission name; it indicates whether or not the app or site has permission to use WebXR, and may be monitored over time for changes to that permissions tate.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      PermissionStatus\n    \n  \n  \n    \n    \n      XRPermissionStatus\n    \n  ",
    "members": []
  },
  "XRPose": {
    "name": "XRPose",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/XRPose\"><code>XRPose</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/XRPose",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\n is a WebXR API interface representing a position and orientation in the 3D space, relative to the [XRSpace] within which it resides. The [XRSpace]—which is either an [XRReferenceSpace] or an [XRBoundedReferenceSpace]—defines the coordinate system used for the pose and, in the case of an [XRViewerPose], its underlying views.\nTo obtain the  for the [XRSpace] used as the local coordinate system of an object, call [XRFrame.getPose()], specifying that local [XRSpace] and the space to which you wish to convert:\n[thePose = xrFrame.getPose(localSpace, baseSpace);\n]\nThe pose for a viewer (or camera) is represented by the [XRViewerPose] subclass of . This is obtained using [XRFrame.getViewerPose()]  instead of [getPose()], specifying a reference space which has been adjusted to position and orient the node to provide the desired viewing position and angle:\n[viewerPose = xrFrame.getViewerPose(adjReferenceSpace);\n]\nHere, [adjReferenceSpace] is a reference space which has been updated using the base frame of reference for the frame and any adjustments needed to position the viewer based on movement or rotation which is being supplied from a source other than the XR device, such as keyboard or mouse inputs.\nSee the article Movement, orientation, and motion for further details and an example with thorough explanations of what's going on.",
    "members": []
  },
  "XRProjectionLayer": {
    "name": "XRProjectionLayer",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/XRProjectionLayer\"><code>XRProjectionLayer</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/XRProjectionLayer",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  interface of the WebXR Device API is a layer that fills the entire view of the observer and is refreshed close to the device's native frame rate.\n is supported by all [XRSession] objects (no [layers] feature descriptor is needed).\n\n  To create a new , call [XRWebGLBinding.createProjectionLayer()].\n  To present layers to the XR device, add them to the [layers] render state using [XRSession.updateRenderState()].\n\n objects don’t have an associated [XRSpace], because they render to the full frame.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      XRLayer\n    \n  \n  \n    \n    \n      XRCompositionLayer\n    \n  \n  \n    \n    \n      XRProjectionLayer\n    \n  ",
    "members": []
  },
  "XRQuadLayer": {
    "name": "XRQuadLayer",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/XRQuadLayer\"><code>XRQuadLayer</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/XRQuadLayer",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  interface of the WebXR Device API is a layer that takes up a flat rectangular space in the virtual environment. An  has no thickness. It is a two-dimensional object positioned and oriented in 3D space. The position of a quad refers to the center of the quad. Only the front of the layer is visible.\n requires the [layers] feature to be enabled for the [XRSession]. You can request it in [XRSystem.requestSession()].\nTo create a new , call either:\n\n  [XRWebGLBinding.createQuadLayer()] for a WebGL opaque texture quad layer, or\n  [XRMediaBinding.createQuadLayer()] for an HTML [<video>] playback quad layer.\n\nTo present layers to the XR device, add them to the [layers] render state using [XRSession.updateRenderState()].\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      XRLayer\n    \n  \n  \n    \n    \n      XRCompositionLayer\n    \n  \n  \n    \n    \n      XRQuadLayer\n    \n  ",
    "members": []
  },
  "XRRay": {
    "name": "XRRay",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/XRRay\"><code>XRRay</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/XRRay",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  interface of the WebXR Device API is a geometric ray described by an origin point and a direction vector.\n objects can be passed to [XRSession.requestHitTestSource()] or [XRSession.requestHitTestSourceForTransientInput()] to perform hit testing.",
    "members": []
  },
  "XRReferenceSpace": {
    "name": "XRReferenceSpace",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/XRReferenceSpace\"><code>XRReferenceSpace</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/XRReferenceSpace",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe WebXR Device API's  interface describes the coordinate system for a specific tracked entity or object within the virtual world using a specified tracking behavior. The tracking behavior is defined by the selected reference space type. It expands upon the base class, [XRSpace], by adding support for several different tracking behaviors as well as to request a new reference space which describes the offset transform between the tracked object and another location in the world.\nAll reference spaces—with the sole exception being bounded reference spaces—are described using the  type. Bounded spaces are implemented as [XRBoundedReferenceSpace] objects. These are special spaces which let you establish a perimeter within which it's \"safe\" for the viewer to move. For XR systems that allow the user to physically move around, such as those that track movement with a real-world camera, this boundary establishes the edges of the area the user is able to move around in, whether due to physical obstacles or due to limitations of the XR hardware. See the article Using bounded reference spaces to protect the viewer for more on using boundaries to keep the user from colliding with obstacles both physical and virtual.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      XRSpace\n    \n  \n  \n    \n    \n      XRReferenceSpace\n    \n  ",
    "members": []
  },
  "XRReferenceSpaceEvent": {
    "name": "XRReferenceSpaceEvent",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/XRReferenceSpaceEvent\"><code>XRReferenceSpaceEvent</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/XRReferenceSpaceEvent",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe WebXR Device API interface  represents an event sent to an [XRReferenceSpace]. Currently, the only event  that uses this type is the [reset] event.\n  \n    \n    \n      Event\n    \n  \n  \n    \n    \n      XRReferenceSpaceEvent\n    \n  ",
    "members": []
  },
  "XRRenderState": {
    "name": "XRRenderState",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/XRRenderState\"><code>XRRenderState</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/XRRenderState",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  interface of the WebXR Device API contains configurable values which affect how the imagery generated by an [XRSession] gets composited. These properties include the range of distances from the viewer within which content should be rendered, the vertical field of view (for inline presentations), and a reference to the [XRWebGLLayer] being used as the target for rendering the scene prior to it being presented on the XR device's display or displays.\nWhen you apply changes using the [XRSession] method [updateRenderState()], the specified changes take effect after the current animation frame has completed, but before the next one begins.",
    "members": []
  },
  "XRRigidTransform": {
    "name": "XRRigidTransform",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/XRRigidTransform\"><code>XRRigidTransform</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/XRRigidTransform",
    "desc": "The  is a WebXR API interface that represents the 3D geometric transform described by a position and orientation.\n is used to specify transforms throughout the WebXR APIs, including:\n\n  The offset and orientation relative to the parent reference space to use when creating a new reference space with [getOffsetReferenceSpace()].\n  The [transform] of an [XRView].\n  The [transform] of an [XRPose].\n  The [XRReferenceSpaceEvent] event's [transform] property, as found in the [reset] event received by an [XRReferenceSpace].\n\nUsing  in these places rather than bare arrays that provide the matrix data has an advantage. It automatically computes the inverse of the transform and even caches it making subsequent requests significantly faster.",
    "members": []
  },
  "XRSession": {
    "name": "XRSession",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/XRSession\"><code>XRSession</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/XRSession",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe WebXR Device API's  interface represents an ongoing XR session, providing methods and properties used to interact with and control the session. To open a WebXR session, use the [XRSystem] interface's [requestSession()] method.\nWith  methods, you can poll the viewer's position and orientation (the [XRViewerPose]), gather information about the user's environment, and present imagery to the user.  supports both inline and immersive virtual and augmented reality modes.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      XRSession\n    \n  ",
    "members": []
  },
  "XRSessionEvent": {
    "name": "XRSessionEvent",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/XRSessionEvent\"><code>XRSessionEvent</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/XRSessionEvent",
    "desc": "The WebXR Device API's  interface describes an event which indicates the change of the state of an [XRSession]. These events occur, for example, when the session ends or the visibility of its context changes.\n  \n    \n    \n      Event\n    \n  \n  \n    \n    \n      XRSessionEvent\n    \n  ",
    "members": []
  },
  "XRSpace": {
    "name": "XRSpace",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/XRSpace\"><code>XRSpace</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/XRSpace",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  interface of the WebXR Device API is an abstract interface providing a common basis for every class which represents a virtual coordinate system within the virtual world, in which its origin corresponds to a physical location. Spatial data in WebXR is always expressed relative to an object based upon one of the descendant interfaces of , at the time at which a given [XRFrame] takes place.\nNumeric values such as pose positions are thus coordinates in the corresponding , relative to that space's origin.\n\n  Note: The  interface is never used directly; instead, all spaces are created using one of the interfaces based on . At this time, those are [XRReferenceSpace], [XRBoundedReferenceSpace], and [XRJointSpace].\n\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      XRSpace\n    \n  ",
    "members": []
  },
  "XRSubImage": {
    "name": "XRSubImage",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/XRSubImage\"><code>XRSubImage</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/XRSubImage",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  interface of the WebXR Device API represents what viewport of the GPU texture to use for rendering.",
    "members": []
  },
  "XRSystem": {
    "name": "XRSystem",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/XRSystem\"><code>XRSystem</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/XRSystem",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe WebXR Device API interface  provides methods which let you get access to an [XRSession] object representing a WebXR session. With that [XRSession] in hand, you can use it to interact with the Augmented Reality (AR) or Virtual Reality (VR) device.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      XRSystem\n    \n  ",
    "members": []
  },
  "XRTransientInputHitTestResult": {
    "name": "XRTransientInputHitTestResult",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/XRTransientInputHitTestResult\"><code>XRTransientInputHitTestResult</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/XRTransientInputHitTestResult",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  interface of the WebXR Device API contains an array of results of a hit test for transient input, grouped by input source.\nYou can get an array of [XRHitTestResult] objects for a frame by calling [XRFrame.getHitTestResultsForTransientInput()].",
    "members": []
  },
  "XRTransientInputHitTestSource": {
    "name": "XRTransientInputHitTestSource",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/XRTransientInputHitTestSource\"><code>XRTransientInputHitTestSource</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/XRTransientInputHitTestSource",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  interface of the WebXR Device API handles transient input hit test subscriptions. You can get an  object by calling the [XRSession.requestHitTestSourceForTransientInput()].\nThis object doesn't itself contain transient input hit test results, but it is used to compute hit tests for each [XRFrame] by calling [XRFrame.getHitTestResultsForTransientInput()], which returns [XRTransientInputHitTestResult] objects.",
    "members": []
  },
  "XRView": {
    "name": "XRView",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/XRView\"><code>XRView</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/XRView",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe WebXR Device API's  interface describes a single view into the XR scene for a specific frame, providing orientation and position information for the viewpoint. You can think of it as a description of a specific eye or camera and how it views the world. A 3D frame will involve two views, one for each eye, separated by an appropriate distance which approximates the distance between the viewer's eyes. This allows the two views, when projected in isolation into the appropriate eyes, to simulate a 3D world.",
    "members": []
  },
  "XRViewerPose": {
    "name": "XRViewerPose",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/XRViewerPose\"><code>XRViewerPose</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/XRViewerPose",
    "desc": "The WebXR Device API interface  represents the pose (the position and orientation) of a viewer's point of view on the scene. Each  can have multiple views to represent, for example, the slight separation between the left and right eye.\nThis view can represent anything from the point-of-view of a user's XR headset to the viewpoint represented by a player's movement of an avatar using mouse and keyboard, presented on the screen, to a virtual camera capturing the scene for a spectator.\n  \n    \n    \n      XRPose\n    \n  \n  \n    \n    \n      XRViewerPose\n    \n  ",
    "members": []
  },
  "XRViewport": {
    "name": "XRViewport",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/XRViewport\"><code>XRViewport</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/XRViewport",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe WebXR Device API's  interface provides properties used to describe the size and position of the current viewport within the [XRWebGLLayer] being used to render the 3D scene.",
    "members": []
  },
  "XRWebGLBinding": {
    "name": "XRWebGLBinding",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/XRWebGLBinding\"><code>XRWebGLBinding</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/XRWebGLBinding",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  interface is used to create layers that have a GPU backend.",
    "members": []
  },
  "XRWebGLDepthInformation": {
    "name": "XRWebGLDepthInformation",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/XRWebGLDepthInformation\"><code>XRWebGLDepthInformation</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/XRWebGLDepthInformation",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  interface contains depth information from the GPU/WebGL (returned by [XRWebGLBinding.getDepthInformation()]).\n  \n    \n    \n      XRDepthInformation\n    \n  \n  \n    \n    \n      XRWebGLDepthInformation\n    \n  \nThis interface inherits properties from its parent, [XRDepthInformation].",
    "members": []
  },
  "XRWebGLLayer": {
    "name": "XRWebGLLayer",
    "experimental": true,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/XRWebGLLayer\"><code>XRWebGLLayer</code></a></span><span class=\"indexListBadges\"> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></span></span>",
    "mdn": "/en-US/docs/Web/API/XRWebGLLayer",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  interface of the WebXR Device API provides a linkage between the WebXR device (or simulated XR device, in the case of an inline session) and a WebGL context used to render the scene for display on the device. In particular, it provides access to the WebGL framebuffer and viewport to ease access to the context.\nAlthough  is currently the only type of framebuffer layer supported by WebGL, it's entirely possible that future updates to the WebXR specification may allow for other layer types and corresponding image sources.\n  \n    \n    \n      EventTarget\n    \n  \n  \n    \n    \n      XRLayer\n    \n  \n  \n    \n    \n      XRWebGLLayer\n    \n  ",
    "members": []
  },
  "XRWebGLSubImage": {
    "name": "XRWebGLSubImage",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/XRWebGLSubImage\"><code>XRWebGLSubImage</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/XRWebGLSubImage",
    "desc": "Secure context: This feature is available only in secure contexts (HTTPS), in some or all supporting browsers.\nThe  interface is used during rendering of WebGL layers.\n  \n    \n    \n      XRSubImage\n    \n  \n  \n    \n    \n      XRWebGLSubImage\n    \n  ",
    "members": []
  },
  "XSLTProcessor": {
    "name": "XSLTProcessor",
    "experimental": false,
    "deprecated": false,
    "standard": true,
    "_block": "<span class=\"indexListRow\"><span class=\"indexListTerm\"><a href=\"/en-US/docs/Web/API/XSLTProcessor\"><code>XSLTProcessor</code></a></span></span>",
    "mdn": "/en-US/docs/Web/API/XSLTProcessor",
    "desc": "Non-standard: This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.\n\n  An  applies an XSLT stylesheet transformation to an XML document to\n  produce a new XML document as output. It has methods to load the XSLT stylesheet, to\n  manipulate [<xsl:param>] parameter values, and to apply the\n  transformation to documents.\n",
    "members": []
  }
}